Good evening everyone [programmer]

welcome to durgasoft online training....

welcome to Logic Based Programming [LBP] online batch....

K Prakash Babu, 14 Years of Exp as Technical Trainer...

course ------> Logic Based Programming
duration ----> 2 months [60 Hours]
timings -----> 8pm to 9pm
fees --------> Rs. 2000/-
contact -----> 9246212143
demos -------> 4 to 5 Demos

Demo1 ----> https://www.youtube.com/watch?v=OG3gJxp6y_A
Demo2 ----> https://www.youtube.com/watch?v=e0K1Jh9PF1w

Previous Class PlayList:

https://www.youtube.com/watch?v=OG3gJxp6y_A&list=PLd3UqWTnYXOl1Qwbsqa3gDJieL3o9zmPP



benifits:
---------
1) Practical Classes, daily we are practicing the programs.
2) Coding/ Programs ---> 300+ [320 Programs]
3)
	Numbers
	Strings
	Arrays
	Searching & Sorting
	Math Algorithms
	Matrix
	etc

4) Implementations of these programs in C lang, Java and Python.
5) Core concepts in C, Java and Python ready-made methods.

Ex:
	abc
	a=>97-32=65=>A
	b=>98-32=66=>B
	c=>99-32=67=>C

	"abc".toUpperCase()

	"abc".upper()

6) Running Notes and Hackerrank Link are life time validity.
7) Videos will have 7 months access.

pre-requisite for this course:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
dedication to wards coding
your time [1 Hr 30 min]
min idea about any one programming language


printf("Hello");

System.out.println("Hello");

print("Hello")



Are we allowed to use python's in-built functions for writing our code 
during coding round ( using Company's py compiler) ? 
any restrictions possible ?

Yes, we can solve by our own LOGIC [LBP]
No, we can use predefined functions


data types in different programming languages [C, Java and Python]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
data type represents the type of the data that we are using in our program.

Integers, Real values, Characters, Boolean values etc...

C Language:
-----------

Integers ------> short int[2 bytes], int[4 bytes], long int[8 bytes]
Real values ---> float[4 bytes], double[8 bytes]
Characters ----> char [1 byte]
Boolean -------> we dn't have any support for boolean type data in c-lang

Note1:
	Here, we can take integer to represent boolean values
	1-true
	0-false

	int flag = ----;

Note2:
	C language follows ASCII based character set
	American Standard Code for Information Interchange

	a=>97,b=>98,c=>99,.........
	A=>65,B=>66,C=>67,.........
	0=>48,1=>49,2=>50,.........


Java Programming:
-----------------

Integers ----> byte[1 byte], short[2 bytes], int[4 bytes], long[8 bytes]
Real values -> float[4 bytes], double[8 bytes]
Characters --> char [2 bytes]
Boolean -----> boolean [Not Applicable]

Note1:
	Character format supported by java is UNICODE
	Universal Coding Standard

	ASCII + new characters

Python Programming:
-------------------

Python is dynamically typed programming languages, based on provided value, the type will be decided.

int, float, str, list, tuple, dict etc

Ex:
	int x = 111;	C lang
	int y = 222;	Java
	z=333		Python

https://www.hackerrank.com/lbptest

LBP300:
-------
Implement a program to find sum of last three digits in the given number.

Ex:
	2345

	output: -----> 5+4+3=12

Logic:
	Read a number from user and name it as 'N'

	n1 = N%10
	n2 = (N/10)%10
	n3 = ((N/10)/10)%10
	
	print n1+n2+n3

LBP005:
-------
Implement a program that takes a number as an argument, increments the number by +1 and returns the result.

Ex:
	5 ----> 6
	10 ---> 11
	-4 ---> -3
	-1 ---> 0
	3 ----> 4

Logic:
	read n value from the user

	increment n value by one unit

	c lang ---> n++
	java -----> n++
	Py -------> n=n+1


input and output statements in different programming language:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
c langauges:
------------

input statement: it is used to read input from the user

scanf("format",&v1,&v2,&v3,....);

output statement: it is used to print output to the console/screen

printf("message");
printf("message+format",list_of_values);

formats:
	int		%d
	float	%f
	double	%f
	float	%.xf , where x denotes number of digits after decimal point

	1.23456 ---> 1.23

	char	%c
	string	%s

application: read three numbers and calc and print addition of these three

scanf("%d %d %d",&a,&b,&c);
res = a+b+c;
printf("%d",res);

LBP281:
-------
Implement a program that takes the memory size as an argument and returns the actual memory size.
Note: The actual storage loss on a USB device is 7% of the overall memory size!

actual memory size, round your result to two decimal places

0.93 ---> %.2f

Ex:
	1GB -----> ?
	1GB-0.07---> 0.93GB

Logic:
		read size of usb drive
		let it be n

		print n-n*0.07

C 	----> printf("%.2f",n-n*0.07);
Java ---> System.out.printf("%.2f",n-n*0.07);
Py -----> print("%.2f"%(n-n*0.07));

java io statements:
~~~~~~~~~~~~~~~~~~~
output:
		
		System.out.print(); ------> it prints the content, and control will be on same line
		System.out.println(); ----> it prints the content, and control will be moved to next line
		System.out.printf(); -----> it prints the content on the screen based on c-style


input:
		1) BufferedReader -------> java.io ------> read only char and string
		2) Console --------------> java.io ------> read only username and password
		3) Scanner --------------> java.util ----> read all types of data

		Scanner obj = new Scanner(System.in);

		int ---------------> obj.nextInt()
		double ------------> obj.nextDouble()
		char --------------> obj.next().charAt(0)
		String ------------> obj.next(), obj.nextLine()
		boolean -----------> obj.nextBoolean()

LBP288:
-------
Write a program to check whether a string having alphabet 'a'?

Ex:
	apple -----> true
	kumar -----> true
	love ------> false
	true ------> false
	false -----> true

Logic:
		flag = 0
		for(i=0;s[i];i++)
		{
			if(s[i]=='a')
			{
				flag=1;
				break;
			}
		}
		if flag==1 then print 'true' else 'false'

		Java -----> System.out.println(s.contains("a")); ---> true or false
		Py -------> "a" in s ---> True or False

python:
-------
output:	
			print()
			10 forms of print statements

			Ex:
				print("format"%(list_of_var))

input:
			input() ---> it accepts input from the user, str form
			int(input()) --> it is used to read an integer value from user
			.
			.

Ex:
	read two int values and perform addition operation

	a = int(input())
	b = int(input())
	print(a+b)


https://www.hackerrank.com/lbptest ----> Demo Link

P001: WELCOME MESSAGE
~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read user name and display welcome message.

input ------> user name
output -----> welcome <user_name>

Ex:
	prakash -----> welcome prakash
	mahesh babu -> welcome mahesh babu

Logic:
		read a string as name from the user

		C ----> scanf("%s",name);------> stop reading data once if space is encountered -----> not
		        scanf("%[^\n]s",name);--> stop reading data once if a new line is encountered-> Yes

		Java -> obj.next() ------> stop reading data once if space is encountered -----> not
		        obj.nextLine() --> stop reading data once if a new line is encountered-> Yes
		
		Py ---> input()


		C ----> printf("welcome %s",name);
		Java -> System.out.println("welcome "+name);
		Py ---> print("welcome",name);

C Implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char name[100];
    scanf("%[^\n]s",name);//we should not write & symbol for reading string
    printf("welcome %s",name);
    return 0;
}

Java Implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String name = obj.nextLine();
        System.out.println("welcome "+name);
    }
}

Python Implementation:
----------------------
name = input()
print("welcome",name)


P002: ADDITION
~~~~~~~~~~~~~~
Implement a program to read two integer values from the user and perform addition operation

input ------> two integer values
output -----> addition of those two numbers

Ex:
	1
	2

	output: 3

	-1
	3

	output: 2

Logic:
		Read two integer values as a and b
		Print the integer as (a+b)

		C ---> 
				scanf("%d %d",&a,&b);
				printf("%d",a+b);
		Java -->
				int a = obj.nextInt();
				int b = obj.nextInt();
				System.out.println(a+b);
		Py --->
				a = int(input())
				b = int(input())
				print(a+b)

C Implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b;
    scanf("%d %d",&a,&b);
    printf("%d",a+b);
    return 0;
}

Java Implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt();
        int b = obj.nextInt();
        System.out.println(a+b);
    }
}

Python Implementation:
----------------------
a=int(input())
b=int(input())
print(a+b)


P003: NEXT INTEGER
~~~~~~~~~~~~~~~~~~~
Implement a program that takes a number as a input, increment the number by +1 and print the result

input ----> an integer value
output ---> incremented value

Ex:
	2 ----> 3
	4 ----> 5
	-9 ---> -8

Logic:
		read n value from the user

		C ----> n++
		Java -> n++
		Py ---> n+=1

		print n

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n;
    scanf("%d",&n);
    n++;
    printf("%d",n);
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n = obj.nextInt();
        n++;
        System.out.println(n);
    }
}

python implementation:
----------------------
n=int(input())
n+=1
print(n)



P004: DIVISIBLE BY 3
~~~~~~~~~~~~~~~~~~~~~
Implement a program to read a number and check whether it is divisible by 3 or not.

input ----> an integer value
output ---> Yes or No

Ex:
		3 -----> Yes
		4 -----> No
		5 -----> No
		6 -----> Yes

Logic:
		read n value from the user

conditional operator -----> if true what we have to execute else what we have to execute -- single

C --------> (condition)?TB:FB
Java -----> (condition)?TB:FB
Py -------> TB if condition else FB

		print (n%3==0)?"Yes":"No"
		print (n%3==0)?"Yes":"No"
		print "Yes" if n%3==0 else "No"

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n;
    scanf("%d",&n);
    printf((n%3==0)?"Yes":"No");
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n = obj.nextInt();
        System.out.println((n%3==0)?"Yes":"No");
    }
}

python implementation:
----------------------
n=int(input())
print("Yes" if n%3==0 else "No")

P005: NUMBER OF HOURS
~~~~~~~~~~~~~~~~~~~~~
Implement a program to read seconds values in timer and convert it into hours.

input ----> seconds value
output ---> hours value

Ex:
	3600 ----> 1
	4500 ----> 1
	7200 ----> 2

Logic:
		read seconds values as 'sec' 
		print sec/3600

Note:
		C -----> int/int ---> int
		Java --> int/int ---> int
		Py ----> int/int ---> float
		Py ----> int//int --> int

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int sec;
    scanf("%d",&sec);
    printf("%d",sec/3600);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int sec = obj.nextInt();
        System.out.println(sec/3600);
    }
}

python implementation:
----------------------
sec=int(input())
print(sec//3600)

P006: NUMBER OF MONTHS
~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read number of days and convert it into number of months.
Note: consider 30 days per month

input -----> number of days
output ----> months

Ex:
	30 -----> 1 
	60 -----> 2
	100 ----> 3

Logic:
		read days value
		print days/30

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int days;
    scanf("%d",&days);
    printf("%d",days/30);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int days = obj.nextInt();
        System.out.println(days/30);
    }
}

python implementation:
----------------------
days = int(input())
print(days//30)


P007: THREE NUMBERS ADDITION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Write a program to accept three space seperated integers and print addition of those three numbers.

input -----> Three space seperated values
output ----> addition of those three integers


Ex:
	1 2 3 ----> 6
	1 1 1 ----> 3

Logic:
		read three numbers as a,b and c
		print a+b+c

	C ------> scanf("%d %d %d",&a,&b,&c);
	Java ---> a=obj.nextInt(); b=obj.nextInt(); c=obj.nextInt();
	Py -----> a,b,c = (int(i) for i in input().split())

https://www.hackerrank.com/lbptest

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b,c;
    scanf("%d %d %d",&a,&b,&c);
    printf("%d",a+b+c);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt(),b=obj.nextInt(),c=obj.nextInt();
        System.out.println(a+b+c);
    }
}

python implementation:
----------------------
a,b,c=(int(i) for i in input().split())
print(a+b+c)

P008: COFFEE CUPS
~~~~~~~~~~~~~~~~~
Implement a program to clcualte the free number of cups the user gets for a specified number of cups bought by the user. The user get 1 cup free for every 6 cups bought.

input -----> number of cups
output ----> total number of coffee cups


Ex:
	5 --------> 5
	6 --------> 6+1 = 7
	8 --------> 8+1 = 9
	9 --------> 9+1 = 10
	10 -------> 10+1=11
	11 -------> 11+1=12
	12 -------> 12+2=14
	.
	.
	.
	n --------> n+n/6

logic:
		read n value 
		c ----> n+n/6
		java -> n+n/6
		py ---> n+n//6

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n;
    scanf("%d",&n);
    printf("%d",n+n/6);
    return 0;
}

java implementation:
-------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n = obj.nextInt();
        System.out.println(n+n/6);
    }
}


python implementation:
----------------------
n=int(input())
print(n+n//6)


https://www.hackerrank.com/prakashlbp112022

P009: SUM OF LAST THREE DIGIT NUMBERS IN FOUR DIGIT NUMBER
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to extract last three digits numbers from the given four digit number and calcualte sum of those three digits numbers.

input -----> a four digit integer number as input
output ----> sum of last three digit numbers


Ex:
	1234
	2+3+4=9

	1023
	0+2+3=5

Logic:
		read n value from the user and calc

		d1 = n%10
		d2 = (n/10)%10
		d3 = (n/100)%10

		print d1+d2+d3

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d1,d2,d3;
    scanf("%d",&n);
    d1 = n%10;
    d2 = (n/10)%10;
    d3 = (n/100)%10;
    printf("%d",d1+d2+d3);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n = obj.nextInt();
        System.out.println(n%10+(n/10)%10+(n/100)%10);
    }
}

python implementation:
----------------------
n = input()
print(int(n[-1])+int(n[-2])+int(n[-3]))


P010: MULTIPLICATION OF CURRENT AND NEXT NUMBER FROM THE GIVEN INTEGER
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to perform multiplication operation on given and next to given number.

input -------> an integer value
output ------> multiplication of current and next number

Ex:
	2 ----> 2*3 = 6
	10 ---> 10*11 = 110
	5 ----> 5*6 = 30

Logic:
		read n value from the user
		print n*(n+1)

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n;
    scanf("%d",&n);
    printf("%d",n*(n+1));
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        System.out.println(n*(n+1));
    }
}

python implementation:
----------------------
n=int(input())
print(n*(n+1))

P011: DIVISION AND MODULO DIVISION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find division and modulo division of given two integer values.

input -------> two integer values (seperated by new line char)
output ------> division and modulo division

Ex:
	5
	2

	2
	1

Ex2:
	4
	2

	2
	0

Logic:
	print a/b and a%b if c and java
	print a//b and a%b if py

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b;
    scanf("%d %d",&a,&b);
    printf("%d %d",a/b,a%b);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt(),b=obj.nextInt();
        System.out.println((a/b)+" "+(a%b));
    }
}

python implementation:
----------------------
a=int(input())
b=int(input())
print(a//b,a%b)

P012: MULTIPLICATION
~~~~~~~~~~~~~~~~~~~~
Implement a program to calcualte multiplication on given two integer values.

input -------> two integer values (seperated by new line char)
output ------> multiplication 

Ex1:
	5
	2

	10

Ex2:
	7
	3

	21

Logic:
	read a and b values
	print a*b

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b;
    scanf("%d %d",&a,&b);
    printf("%d",a*b);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a=obj.nextInt(),b=obj.nextInt();
        System.out.println(a*b);
    }
}

python implementation:
----------------------
a=int(input())
b=int(input())
print(a*b)

P013: ARE THE NUMBERS ARE EQUAL?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Write a program to check whether the given two numbers are equal or not?

input -------> two integer values
output ------> true or false

Ex1:
	10
	20
	false

Ex2:
	23
	23
	true

Logic:
	read a and b values
	
	C  ----> (a==b)?"true":"false"
	Java --> (a==b)
	Py ----> "true" if a==b else "false"

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b;
    scanf("%d %d",&a,&b);
    printf((a==b)?"true":"false");
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a=obj.nextInt(),b=obj.nextInt();
        System.out.println(a==b);
    }
}

python implementation:
----------------------
a=int(input())
b=int(input())
print("true" if a==b else "false")

P014: POWER CALCULATOR
~~~~~~~~~~~~~~~~~~~~~~
Implement a program to take voltage and current and print the calculated power.

input -------> voltage and current
output ------> power

formula: power = voltage * current

Ex:
	30
	10
	300
Logic:
	read voltage and current as input
	print voltage*current

	or

	multiplication of two numbers
	
c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b;
    scanf("%d %d",&a,&b);
    printf("%d",a*b);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a=obj.nextInt(),b=obj.nextInt();
        System.out.println(a*b);
    }
}

python implementation:
----------------------
a=int(input())
b=int(input())
print(a*b)

P015: CONVERT AGE TO DAYS
~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to convert given age into days, by considering 365 days as the length of the year and ignore leap years.

input -------> age as input
output ------> number of days

Ex:	
	30
	10950

Logic:
	read age as input
	print age*365

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int age;
    scanf("%d",&age);
    printf("%d",age*365);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int age = obj.nextInt();
        System.out.println(age*365);
    }
}

python implementation:
----------------------
age=int(input())
print(age*365)

P016: FOOTBALL POINTS
~~~~~~~~~~~~~~~~~~~~~
Create a program that takes the number of wins, draws and losses and calculates the number of points a football team has obtained so far.

1. wins get 3 points
2. draws get 1 points
3. losses get 0 points

input ------> number of wins, draws and losses
output -----> number of points


Ex:
	4 2 1 ===> 4x3 + 2x1 + 1x0 ===> 12 + 2 + 0 ===> 14
	3 4 2 ===> 3x3 + 4x1 + 2x0 ===> 9 + 4 + 0 ====> 13

Logic:
	read a,b and c values
	points = a*3 + b*1 + c*0
	print points

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b,c;
    scanf("%d %d %d",&a,&b,&c);
    printf("%d",a*3+b*1+c*0);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a=obj.nextInt(),b=obj.nextInt(),c=obj.nextInt();
        System.out.println(a*3+b*1+c*0);
    }
}

python implementation:
----------------------
a,b,c = (int(i) for i in input().split())
print(a*3+b*1+c*0)

P017: TWO MAKES TEN
~~~~~~~~~~~~~~~~~~~~
Implement a program that takes two inputs from the user a and b, print 'true' if one of them is 10 or if their sum is 10.

input -----> a and b value
output ----> true or false

Ex:
	10 23 ===> true
	1 4 =====> false
	9 1 =====> true

Logic:
	read a and b values
	if a==10 or b==10 or a+b==10 then print 'true' else 'false'
	
Q) what is the diff between = and ==?
-------------------------------------
= is an assignment operator
== is a comparison operator

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b;
    scanf("%d %d",&a,&b);
    printf((a==10 || b==10 || a+b==10)?"true":"false");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a=obj.nextInt(),b=obj.nextInt();
        System.out.println(a==10 || b==10 || a+b==10);
    }
}

python implementation:
----------------------
a=int(input())
b=int(input())
print('true' if a==10 or b==10 or a+b==10 else 'false')

pranab implementation:
----------------------
n1 =  int(input())
n2 =  int(input())

if n1==10 or n2==10 or n1+n2==10:
    print("true")
else:
    print("false")

P018: CHARACTER TO ASCII
~~~~~~~~~~~~~~~~~~~~~~~~
Write a program to convert given character into ascii value

input -----> character
output ----> an integer value

Ex:
	American Code for Information Interchange. --> 0 to 255
	Unicode ----> 0 to 65535

	a-z, A-Z, 0-9

	a=>97, b=>98, c=>99 and so on
	A=>65, B=>66, C=>67 and so on
	0=>48, 1=>49, 2=>50 and so on
	+32
	
	char ---> int

	'a' ----> 97
	'd' ----> 100
	'3' ----> 51

Logic:
	read char value from the user

	scanf("%c",&ch);
	ch = obj.nextLine().charAt(0);
	ch = input()

	printf("%d",ch);
	System.out.println((int)ch);
	print(ord(ch))

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char ch;
    scanf("%c",&ch);
    printf("%d",ch);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        char ch = obj.nextLine().charAt(0);
        System.out.println((int)ch);
    }
}

python implementation:
----------------------
ch = input()
print(ord(ch))

import math
math.factorial(---)

P019: ASCII TO CHARACTER
~~~~~~~~~~~~~~~~~~~~~~~~
Write a program to convert given ascii value into character

input ----> an integer value
output ---> character

Ex:
	97 ----> 'a'
	48 ----> '0'

Logic:
	read 'n' value from user as int
	
	printf("%c",n);
	System.out.println((char)n);
	print(chr(n))

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n;
    scanf("%d",&n);
    printf("%c",n);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n = obj.nextInt();
        System.out.println((char)n);
    }
}

python implementation:
----------------------
n=int(input())
print(chr(n))

P020: AREA OF CIRCLE
~~~~~~~~~~~~~~~~~~~~
Implement a program to find the area of the circle

input ----> radius value
output ---> area of the circle (round to two decimals)

Ex:
	2 ----> 3.147*2*2 ----> 12.xxxxx ---> 12.xx

Logic:
	read radius value from the user 'r'
	calcualte area = 3.141592653589793*r*r
	print area value 

	c ---> printf("%.2f",area); ---> 12.xx
	java-> System.out.printf("%.2f",area) ---> 12.xx
	python--> print("%.2f"%(area))

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int r;
    scanf("%d",&r);
    printf("%.2f",3.141592653589793*r*r);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int r = obj.nextInt();
        System.out.printf("%.2f",3.141592653589793*r*r);
    }
}

python implementation:
----------------------
r=int(input())
print("%.2f"%(3.141592653589793*r*r))

P021: CELSIUS TO FAHRENHEIT
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to convert temparature from Celsius to Fahrenheit.

input -----> celsius value 
output ----> fahrenheit value

FORMULA ---> F = (C*9/5)+32;

Ex:
	1 -----> 33

Logic:
	read "c" value as an integer
	f = (c*9/5) + 32
	print "f" value as an integer

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int c,f;
    scanf("%d",&c);
    f=(c*9/5)+32;
    printf("%d",f);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int c = obj.nextInt();
        int f = (c*9/5)+32;
        System.out.println(f);
    }
}

python implementation:
----------------------
c=int(input())
f=(c*9//5)+32
print(f)


P022: FAHRENHEIT TO CELSIUS
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to convert temparature from Fahrenheit to Celsius.

input -----> fahrenheit value 
output ----> celsius value

FORMULA: C = (F-32) * 5/9;

Ex:
	44 ----> (44-32) * 5/9
	   ----> 12 * 5/9
	   ----> 6

Logic:
	Read 'f' value from the user
	calcualte c value
	c = (f-32) * 5/9
	print c value on the screen

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int c,f;
    scanf("%d",&f);
    c=(f-32)*5/9;
    printf("%d",c);
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int c,f;
        f=obj.nextInt();
        c=(f-32)*5/9;
        System.out.println(c);
    }
}

python implementation:
----------------------
f=int(input())
c=(f-32)*5//9
print(c)

P023: ACTUAL MEMORY SIZE OF USB DRIVE
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program that takes the memory size as an argument and returns the actual memory size.

Note: The actual storage loss on a USB device is 7% of the overall memory size!

input -----> memory size in GB
output ----> actual memory size, round your result to two decimal places.

Ex:
	1 -----> 1-1*0.07 ---> 0.93


Logic:
	read actual memory size as 'n'
	print n-n*0.07

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n;
    scanf("%d",&n);
    printf("%.2f",n-n*0.07);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n = obj.nextInt();
        System.out.printf("%.2f",n-n*0.07);
    }
}

python implementation:
----------------------
n=int(input())
print("%.2f"%(n-n*0.07))


P024: FLIGHT LUGGAGE WEIGHT
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Kalyan is travelling to mumbai, but this time he is taking flight. His brother has already told him about luggage weight limits of flight but he forgot it. Now he is taking with him 3 trolly bags. As per the current airlines which Kalyan will fly. has below weight limits.

1) There can be at max 2 check-in and 1 cabin luggage. 
2) Check-in has total limit of L1.
3) Cabin has limit of L2.

Now, Kalyan has 3 luggage has weights as W1 and W2 and W3 respectively. Now he should be smart enough to make sure that he can travel with all the 3 luggage without paying extra charge.

Find out whether Kalyan can take all of his luggage without any extra charges or not. 
If all good and no extra changes were paid, output "Yes" otherwise "No".

input ------> integers W1,W2,W3 and L1,L2
output -----> Yes or No

Logic:
	read w1, w2, w3, l1 and l2
	w1+w2+w3<=l1+l2 print 'Yes' else 'No'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int w1,w2,w3,l1,l2;
    scanf("%d %d %d %d %d",&w1,&w2,&w3,&l1,&l2);
    printf((w1+w2+w3<=l1+l2)?"Yes":"No");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int w1,w2,w3,l1,l2;
        w1=obj.nextInt();
        w2=obj.nextInt();
        w3=obj.nextInt();
        l1=obj.nextInt();
        l2=obj.nextInt();
        System.out.println((w1+w2+w3<=l1+l2)?"Yes":"No");
    }
}

python implementation:
----------------------
w1,w2,w3,l1,l2 = (int(i) for i in input().split())
print("Yes" if w1+w2+w3<=l1+l2 else "No")


P025: SAVINGS
~~~~~~~~~~~~~
There are 3 friends named Denver, Berlin, Rio who worked at a compnay. Given thier monthly salaries and monthly expendictures, returns the highest saving amoung them.

input ------> single line with 6 space seperated integers.
output -----> highest saving amoung the 3 of them

Ex:
	10 9 45 10 15 15 ---> 1 35 0 ---> 35

Logic:
	read a1 a2 b1 b2 c1 c2 from user

	a = a1-a2
	b = b1-b2
	c = c1-c2

	(a>b && a>c)?a:((b>c)?b:c)

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,a1,a2,b,b1,b2,c,c1,c2;
    scanf("%d %d %d %d %d %d",&a1,&a2,&b1,&b2,&c1,&c2);
    a=a1-a2;
    b=b1-b2;
    c=c1-c2;
    printf("%d",(a>b&&a>c)?a:((b>c)?b:c));
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a1,a2,b1,b2,c1,c2,a,b,c;
        a1=obj.nextInt();
        a2=obj.nextInt();
        b1=obj.nextInt();
        b2=obj.nextInt();
        c1=obj.nextInt();
        c2=obj.nextInt();
        a = a1-a2;
        b = b1-b2;
        c = c1-c2;
        System.out.println((a>b && a>c)?a:(b>c?b:c));
    }
}

python implementation:
----------------------
a1,a2,b1,b2,c1,c2 = (int(i) for i in input().split())
a = a1-a2
b = b1-b2
c = c1-c2
print(max(a,b,c))


P026: MAXIMUM OF TWO NUMBERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Given two integer values, print or return maximum value from the given integers.

input ------> two integer values
output -----> maximum value

Logic:
	read a, and b values
	(a>b)?a:b ---> c
	Math.max(a,b) ---> java
	max(a,b) --------> py

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b;
    scanf("%d %d",&a,&b);
    printf("%d",(a>b)?a:b);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt(),b=obj.nextInt();
        System.out.println(Math.max(a,b));
    }
}

python implementation:
----------------------
a=int(input())
b=int(input())
print(max(a,b))

P027: MINIMUM OF TWO NUMBERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Given two integer values, print or return minimum value from the given integers.

input -----> two integer values
output ----> minimum value

Logic:
	read a, and b values
	(a<b)?a:b ---> c
	Math.min(a,b) ---> java
	min(a,b) --------> py

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b;
    scanf("%d %d",&a,&b);
    printf("%d",(a<b)?a:b);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt(),b=obj.nextInt();
        System.out.println(Math.min(a,b));
    }
}

python implementation:
----------------------
a=int(input())
b=int(input())
print(min(a,b))


P028: MAXIMUM OF THREE NUMBERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Given three integer values, print or return maximum of three integers.

input -----> two integer values
output ----> maximum value

Ex:
	1, 2, 3 ----> 3
	1, 2, -3 ---> 2
	1, -2, -3 --> 1

Logic:
	read a,b and c values from the user

	c   ---> (a>b && a>c)?a:(b>c?b:c)
	java --> Math.max(Math.max(a,b),c)
	py ----> max(a,b,c)

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b,c;
    scanf("%d %d %d",&a,&b,&c);
    printf("%d",(a>b && a>c)?a:(b>c?b:c));
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt(),b=obj.nextInt(),c=obj.nextInt();
        System.out.println(Math.max(Math.max(a,b),c));
    }
}

python implementation:
----------------------
a=int(input())
b=int(input())
c=int(input())
print(max(a,b,c))

P029: MINIMUM OF THREE NUMBERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Given three integer values, print or return minimum of three integers.

input -----> two integer values
output ----> minimum value

Ex:
	1, 2, 3 ----> 1
	1, 2, -3 ---> -3
	1, -2, -3 --> -3

Logic:
	read a,b and c values from the user

	c   ---> (a<b && a<c)?a:(b<c?b:c)
	java --> Math.min(Math.min(a,b),c)
	py ----> min(a,b,c)

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b,c;
    scanf("%d %d %d",&a,&b,&c);
    printf("%d",(a<b && a<c)?a:(b<c?b:c));
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt(),b=obj.nextInt(),c=obj.nextInt();
        System.out.println(Math.min(Math.min(a,b),c));
    }
}

python implementation:
----------------------
a=int(input())
b=int(input())
c=int(input())
print(min(a,b,c))

or

print(a if a>b and a>c else (b if b>c else c))

P030: SAME DIGIT
~~~~~~~~~~~~~~~~
Given two non-negative integer values, return true if they have the same last digit, Ex:27 and 57. 

input -----> two integer values
output ----> true or false

Ex:
	27, 57 ----> true
	27, 56 ----> false

Logic:
	read n1 and n2 values from the user

	if n1%10==n2%10 then print 'true' else 'false'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n1,n2;
    scanf("%d %d",&n1,&n2);
    printf((n1%10==n2%10)?"true":"false");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n1=obj.nextInt();
        int n2=obj.nextInt();
        System.out.println(n1%10==n2%10);
    }
}

python implementation:
----------------------
n1=int(input())
n2=int(input())
print('true' if n1%10==n2%10 else 'false')


P031: NEAREST TO 10
~~~~~~~~~~~~~~~~~~~
Given two integer values, return whichever value is nearest to the value 10, or return 0 in the event of a tie. 

input ------> two integer values
output -----> nearest value to a or 0

Ex:
	5,6 ----> 6
	5,3 ----> 5
	5,5 ----> 0

Logic:

	read a,b values from user

	adiff = abs(a-10)
	bdiff = abs(b-10)

	(adiff==bdiff)?0:(adiff<bdiff?a:b)

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b,ad,bd;
    scanf("%d %d",&a,&b);
    ad = abs(a-10);
    bd = abs(b-10);
    printf("%d",(ad==bd)?0:(ad<bd?a:b));
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a=obj.nextInt(),b=obj.nextInt(),ad,bd;
        ad = Math.abs(a-10);
        bd = Math.abs(b-10);
        System.out.println((ad==bd)?0:(ad<bd)?a:b);
    }
}

python implementation:
----------------------
a=int(input())
b=int(input())
ad=abs(a-10)
bd=abs(b-10)
print(0 if ad==bd else (a if ad<bd else b))

P032: BOTH ARE IN RANGE 30 TO 40
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Given two integer values, return true if they are both in the range 30..40 inclusive, or they are both in the range 40..50 inclusive.

input -----> two integer values
output ----> true or false

Ex:
	31, 33 ----> true
	21, 33 ----> false
	30, 40 ----> true
	40, 45 ----> true
	40, 50 ----> true
	40, 60 ----> false

Logic:
	read a and b values

	[(a>=30 and a<=40) and (b>=30 and b<=40)] or [(a>=40 and a<=50) and (b>=40 and 5<=40)]

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b;
    scanf("%d %d",&a,&b);
    printf(((a>=30&&a<=40) && (b>=30&&b<=40))||((a>=40&&a<=50) && (b>=40&&b<=50))?"true":"false");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt();
        int b = obj.nextInt();
        System.out.println(((a>=30&&a<=40)&&(b>=30&&b<=40))||(a>=40&&a<=50)&&(b>=40&&b<=50));
    }
}

python implementation:
----------------------
a=int(input())
b=int(input())
print('true' if ((a>=30 and a<=40)and(b>=30 and b<=40))or((a>=40 and a<=50)and(b>=40 and b<=50)) else 'false')


(a>=30 and a<=40)and(b>=30 and b<=40)

a in range(30,41) and b in range(30,41)

P033: TEEN NUMBER
~~~~~~~~~~~~~~~~~
We'll say that a number is "teen" if it is in the range 13..19 inclusive. Given 3 int values, return true if 1 or more of them are teen.

input -----> three integer values
output ----> true or false

Ex:
	13, 14, 15 ---> true
	10, 11, 12 ---> false
	11, 12, 13 ---> true

Logic:
	read three values from the user

	(a>=13 and a<=19) or (b>=13 and b<=19) or (c>=13 and c<=19) then print 'true' else 'false'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b,c;
    scanf("%d %d %d",&a,&b,&c);
    printf((a>=13 && a<=19)||(b>=13 && b<=19)||(c>=13 && c<=19)?"true":"false");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a = obj.nextInt();
        int b = obj.nextInt();
        int c = obj.nextInt();
        System.out.println((a>=13&&a<=19)||(b>=13&&b<=19)||(c>=13&&c<=19));
    }
}

python implementation:
----------------------
a=int(input())
b=int(input())
c=int(input())
print('true' if 13<=a<=19 or 13<=b<=19 or 13<=c<=19 else 'false')

P034: MULTIPLE OF 3 OR 5
~~~~~~~~~~~~~~~~~~~~~~~~
Return true if the given non-negative number is a multiple of 3 or a multiple of 5. 

input -----> an integer value from the user
output ----> true or false

Ex:
	3	true
	4	false
	5	true

logic:
	read a number 'n' from the user

	(n%3==0 or n%5==0) then print 'true' else 'false'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n;
    scanf("%d",&n);
    printf((n%3==0 || n%5==0)?"true":"false");
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        System.out.println(n%3==0 || n%5==0);
    }
}

python implementation:
----------------------
n=int(input())
print('true' if n%3==0 or n%5==0 else 'false')

P035: INVERT COLORS
~~~~~~~~~~~~~~~~~~~
Implement a program to read r,g and b values from the user and invert the color values.
Hint: the range of any color in hexadecimal form is from 0 to 255

input -----> three space seperated integers
output ----> inverted color values seperated by sapaces

Ex:
	255 255 255 ----> 0 0 0
	100 200 100 ----> 155 55 155

Logic:
	read r,g and b values
	print 255-r, 255-g and 255-b

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int r,g,b;
    scanf("%d %d %d",&r,&g,&b);
    printf("%d %d %d",255-r,255-g,255-b);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a=obj.nextInt(),b=obj.nextInt(),c=obj.nextInt();
        System.out.println((255-a)+" "+(255-b)+" "+(255-c));
    }
}

python implementation:
----------------------
r,g,b=(int(i) for i in input().split())
print(255-r,255-g,255-b)

selection statements:
---------------------

c/java

Ex:

if(condition)
{
	-------------
	-------------
	-------------
	-------------
}

Ex:

if(condition)
{
	----------------
	----------------
}
else
{
	----------------
	----------------
}

Ex:

if(cond1)
{
	-----------------
	-----------------
}
else if(cond2)
{
	-----------------
	-----------------
}
else if(cond3)
{
	-----------------
	-----------------
}
.
.
else
{
	----------------
	----------------
}

Ex:

if(condition)
{
	if(condition)
	{
		-----------
		-----------
	}
	else
	{
		-----------
		-----------
	}
}
else
{
	if(condition)
	{
		-----------
		-----------
	}
	else
	{
		-----------
		-----------
	}
}

simple if, if else, else if [elif] , nested if

{} are not allowed in python ----> indentation :

Ex:

if condition:
    ---------------
    ---------------
    ---------------
    ---------------
    ---------------

Ex:

if condition:
    ------------
    ------------
    ------------
else:
    ------------
    ------------
    ------------

Ex:

if cond1:
    ---------
    ---------
elif cond2:
    ---------
    ---------
elif cond3:
    ---------
    ---------
.
.
.
else:
    --------
    --------

Ex:

if condition:
    if condition:
         ------------
         ------------
         -----------
    else:
         ------------
         ------------
         ------------
else:
    -----------
    -----------
    -----------
    -----------



P036: EVEN OR ODD
~~~~~~~~~~~~~~~~~~
Implement a program to check whether the given number is even or odd number.

input -----> an integer value from the user
output ----> even or odd

Ex:
	2 -----> even
	3 -----> odd
	4 -----> even

Logic:
	read n value

	if(n%2==0)
	{
		print even
	}
	else
	{
		print odd
	}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n;
    scanf("%d",&n);
    if(n%2==0)
        printf("even");
    else
        printf("odd");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        if(n%2==0)
            System.out.println("even");
        else
            System.out.println("odd");
    }
}

python implementation:
----------------------
n=int(input())
if n%2==0:
    print('even')
else:
    print('odd')

P037: BIGGEST OF FOUR NUMBERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find biggest of four numbers.

input ------> four integer values from the user
output -----> biggest value

Ex:
	1 2 3 4 ----> 4
	1 2 3 -4 ---> 3

Logic:
	read a,b,c and d value

	if(a>b && a>c && a>d)
		print a
	else if(b>a && b>c && b>d)
		print b
	else if(c>a && c>b && c>d)
		print c
	else
		print d

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b,c,d;
    scanf("%d %d %d %d",&a,&b,&c,&d);
    if(a>b && a>c && a>d)
        printf("%d",a);
    else if(b>a && b>c && b>d)
        printf("%d",b);
    else if(c>a && c>b && c>d)
        printf("%d",c);
    else
        printf("%d",d);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a=obj.nextInt();
        int b=obj.nextInt();
        int c=obj.nextInt();
        int d=obj.nextInt();
        if(a>b && a>c && a>d)
            System.out.println(a);
        else if(b>a && b>c && b>d)
            System.out.println(b);
        else if(c>a && c>b && c>d)
            System.out.println(c);
        else
            System.out.println(d);
    }
}

python implementation:
----------------------
a=int(input())
b=int(input())
c=int(input())
d=int(input())
if a>b and a>c and a>d:
    print(a)
elif b>a and b>c and b>d:
    print(b)
elif c>a and c>b and c>d:
    print(c)
else:
    print(d)

P038: SMALLEST OF FIVE NUMBERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find smallest of five numbers.

input -----> five space seperated integers
output ----> smallest of five integers

Ex:
	1 2 3 4 5 -----> 1
	1 2 -3 4 5 ----> -3

Logic:
	read a,b,c,d and e values

	if(a<b && a<c && a<d && a<e)
		print a
	else if(b<a && b<c && b<d && b<e)
		print b
	else if(c<a && c<b && c<d && c<e)
		print c
	else if(d<a && d<b && d<c && d<e)
		print d
	else
		print e

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b,c,d,e;
    scanf("%d %d %d %d %d",&a,&b,&c,&d,&e);
    if(a<b && a<c && a<d && a<e)
        printf("%d",a);
    else if(b<a && b<c && b<d && b<e)
        printf("%d",b);
    else if(c<a && c<b && c<d && c<e)
        printf("%d",c);
    else if(d<a && d<b && d<c && d<e)
        printf("%d",d);
    else
        printf("%d",e);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a=obj.nextInt(),b=obj.nextInt(),c=obj.nextInt(),d=obj.nextInt(),e=obj.nextInt();
        System.out.println(Math.min(Math.min(Math.min(Math.min(a,b),c),d),e));
    }
}

python implementation:
----------------------
a,b,c,d,e=(int(i) for i in input().split())
print(min(a,b,c,d,e))

P039: WEIRD OR NOT WEIRD
~~~~~~~~~~~~~~~~~~~~~~~~
Given an integer n, perform the following conditional actions,
If n is odd, print weird,
If n is even and in the inclusive range of 2 to 5, print not weird,
If n is even and in the inclusive range 6 to 20, print weird,
If n is even and greater than 20, print not weird.

input --------> An integer value from the user.
output -------> weird or not weird

Ex:
	3 ----> weird
	4 ----> not weird
	8 ----> weird
	40 ---> not weird

logic:
	read 'n' value from the user

	if(n%2!=0)
		then print 'werid'
	else
	{
		if(n>=2 and n<=5)
			print 'not weird'
		else if(n>=6 and n<=20)
			print 'weird'
		else
			print 'not weird'
	}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n;
    scanf("%d",&n);
    if(n%2!=0)
        printf("weird");
    else
    {
        if(n>=2 && n<=5)
            printf("not weird");
        else if(n>=6 && n<=20)
            printf("weird");
        else
            printf("not weird");
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n = obj.nextInt();
        if(n%2!=0)
            System.out.println("weird");
        else
        {
            if(n>=2 && n<=5)
                System.out.println("not weird");
            else if(n>=6 && n<=20)
                System.out.println("weird");
            else
                System.out.println("not weird");
        }
    }
}

python implementation:
----------------------
n=int(input())
if n%2!=0:
    print('weird')
else:
    if n>=2 and n<=5:
        print('not weird')
    elif n>=6 and n<=20:
        print('weird')
    else:
        print('not weird')


P040: NEON NUMBER
~~~~~~~~~~~~~~~~~
Rahul's teacher gave an assignment to all the student that when they show up tomorrow they should find a special type of number and report her. He thought very carefully and came up with an idea to have neon numbers. A neon number is a two digit number where the square of the sum of each digit of the number results in the given number.Given an integer  N, Write a programto find whether the number N is a Neon number. 

input -------> an integer number
output ------> true or false

Ex:
	81 ----> (8+1)*(8+1) = 9*9 = 81
	91 ----> (9+1)*(9+1) = 10*10 = 100

Logic:
	read 'n' value from the user

	a=n%10
	b=(n/10)%10
	c=(a+b)*(a+b)

	if c==n then print 'true' else 'false'


c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,a,b,c;
    scanf("%d",&n);
    a=n%10;
    b=(n/10)%10;
    c=(a+b)*(a+b);
    printf((n==c)?"true":"false");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),a,b,c;
        a=n%10;
        b=(n/10)%10;
        c=(a+b)*(a+b);
        System.out.println(n==c);
    }
}

python implementation:
----------------------
n=int(input())
a=n%10
b=(n//10)%10
c=(a+b)*(a+b)
print('true' if c==n else 'false')


P041: COMPARE STRING BY COUNT OF CHARACTERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program that takes two strings as inputs and print either true or false depending on whether the total number of characters in the first string is equal to the total number of characters in the second string.

input -------> two strings
output ------> true or false

Ex:
	test, demo ----> true
	abc, abcd -----> false

logic:
	read string 's1' from user
	read string 's2' from user
	find length of s1 ---> n1
	find length of s2 ---> n2
	if(n1==n2)
		print 'true'
	else
		print 'false'


c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char s1[100],s2[100];
    int n1,n2;
    scanf("%s",s1);
    scanf("%s",s2);
    n1 = strlen(s1);
    n2 = strlen(s2);
    //printf("%d %d",n1,n2);
    if(n1==n2)
        printf("true");
    else
        printf("false");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s1 = obj.nextLine();
        String s2 = obj.nextLine();
        System.out.println(s1.length()==s2.length());            
    }
}

python implementation:
----------------------
s1=input()
s2=input()
if len(s1)==len(s2):
    print('true')
else:
    print('false')


P042: CONVERT NUMBER TO CORRESPONDING MONTH NAME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create a program that takes a number (from 1 to 12) and print its corresponding month name as a string. For example, if you're given 3 as input, your program should print "March", because March is the 3rd month.

Number	Month Name
1	January
2	February
3	March
4	April
5	May
6	June
7	July
8	August
9	September
10	October
11	November
12	December

input ------> read a number 
output -----> Month name

Ex:
	2	February
	12	December
Logic:
	read 'n' value from the user
	if(n==1)
		print 'January'
	else if(n==2)
		print 'February'
	.
	.
	.
	else
		print 'invalid'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n;
    scanf("%d",&n);
    if(n==1)
        printf("January");
    else if(n==2)
        printf("February");
    else if(n==3)
        printf("March");
    else if(n==4)
        printf("April");
    else if(n==5)
        printf("May");
    else if(n==6)
        printf("June");
    else if(n==7)
        printf("July");
    else if(n==8)
        printf("August");
    else if(n==9)
        printf("September");
    else if(n==10)
        printf("October");
    else if(n==11)
        printf("November");
    else if(n==12)
        printf("December");
    else
        printf("invalid");
    return 0;
}

Java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        if(n==1)
            System.out.println("January");
        else if(n==2)
            System.out.println("February");
        else if(n==3)
            System.out.println("March");
        else if(n==4)
            System.out.println("April");
        else if(n==5)
            System.out.println("May");
        else if(n==6)
            System.out.println("June");
        else if(n==7)
            System.out.println("July");
        else if(n==8)
            System.out.println("August");
        else if(n==9)
            System.out.println("September");
        else if(n==10)
            System.out.println("October");
        else if(n==11)
            System.out.println("November");
        else if(n==12)
            System.out.println("December");
        else
            System.out.println("invalid");
    }
}

Python Implementation:
----------------------
n=int(input())
if n==1:
    print("January")
elif n==2:
    print("February")
elif n==3:
    print("March")
elif n==4:
    print("April")
elif n==5:
    print("May")
elif n==6:
    print("June")
elif n==7:
    print("July")
elif n==8:
    print("August")
elif n==9:
    print("September")
elif n==10:
    print("October")
elif n==11:
    print("November")
elif n==12:
    print("December")
else:
    print("invalid")


P043: SAY "HELLO", SAY "BYE"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Write a program that takes a string name and a number num (either 0 or 1) and print "Hello" + name if num is 1, otherwise return "Bye" + name.

input -----> string and number
output ----> "Hello<name>" or "Bye<name>"

Ex:
	prakash, 1 -----> Hello prakash
	prakash, 0 -----> Bye prakash
	admin, 1 -------> Hello admin

Logic:
	   read name
	   read number
	   if(num==1)
	   		print "Hello " and name
	   else
	        print "Bye " and name

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char name[100];
    int n;
    scanf("%s",name);
    scanf("%d",&n);
    if(n==1)
        printf("Hello %s",name);
    else
        printf("Bye %s",name);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String name = obj.nextLine();
        int num = obj.nextInt();
        if(num==1)
            System.out.println("Hello "+name);
        else
            System.out.println("Bye "+name);
    }
}

python implementation:
----------------------
name = input()
num = int(input())

if num==1:
    print("Hello",name)
else:
    print("Bye",name)

P044: ALONE SUM
~~~~~~~~~~~~~~~
Given 3 int values, a b c, print their sum. However, if one of the values is the same as another of the values, it does not count towards the sum.

input -----> a,b and c values
output ----> sum or 0

Ex:
	1 2 3 ---> 6
	1 2 1 ---> 2
	1 2 2 ---> 1
	1 1 1  --> 0
	1 1 2 ---> 2

Logic:
		read a,b and c values

		if (a!=b && b!=c && c!=a)
			print a+b+c
		else if(a==b && a==c && b==c)
			print 0
		else if(a==b)
			print c
		else if(b==c)
			print a
		else 
			print b

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b,c;
    scanf("%d %d %d",&a,&b,&c);
    if(a!=b && b!=c && c!=a)
        printf("%d",a+b+c);
    else if(a==b && a==c && b==c)
        printf("0");
    else if(a==b)
        printf("%d",c);
    else if(b==c)
        printf("%d",a);
    else
        printf("%d",b);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a=obj.nextInt(),b=obj.nextInt(),c=obj.nextInt();
        if(a!=b && b!=c && c!=a)
            System.out.println(a+b+c);
        else if(a==b && b==c && c==a)
            System.out.println(0);
        else if(a==b)
            System.out.println(c);
        else if(a==c)
            System.out.println(b);
        else
            System.out.println(a);
    }
}

python implementation:
----------------------
a=int(input())
b=int(input())
c=int(input())
if a!=b and b!=c and c!=a:
    print(a+b+c)
elif a==b and b==c and c==a:
    print(0)
elif a==b:
    print(c)
elif b==c:
    print(a)
else:
    print(b)

P045: LOWER CASE ENGLISH WORD
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Given a positive integer n value, 1<=n<=9, print corresponding english word like 1->one.

input ----> an integer value
output ---> english word

Ex:
	1 ---> one
	5 ---> five
	9 ---> nine

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n;
    scanf("%d",&n);
    if(n==1)
        printf("one");
    else if(n==2)
        printf("two");
    else if(n==3)
        printf("three");
    else if(n==4)
        printf("four");
    else if(n==5)
        printf("five");
    else if(n==6)
        printf("six");
    else if(n==7)
        printf("seven");
    else if(n==8)
        printf("eight");
    else if(n==9)
        printf("nine");
    else
        printf("invalid");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        if(n==1)
            System.out.println("one");
        else if(n==2)
            System.out.println("two");
        else if(n==3)
            System.out.println("three");
        else if(n==4)
            System.out.println("four");
        else if(n==5)
            System.out.println("five");
        else if(n==6)
            System.out.println("six");
        else if(n==7)
            System.out.println("seven");
        else if(n==8)
            System.out.println("eight");
        else if(n==9)
            System.out.println("nine");
        else
            System.out.println("invalid");
    }
}


python implementation:
----------------------
n=int(input())
if n==1:
    print('one')
elif n==2:
    print('two')
elif n==3:
    print('three')
elif n==4:
    print('four')
elif n==5:
    print('five')
elif n==6:
    print('six')
elif n==7:
    print('seven')
elif n==8:
    print('eight')
elif n==9:
    print('nine')
else:
    print('invalid')

P046: FIZZBUZZ
~~~~~~~~~~~~~~
Given a number n, print the result value per line as follows.

=> if n is a multiple of both 3 and 5 print FizzBuzz
=> if n is a multiple of 3 (but not 5), print Fizz
=> if n is a multiple of 5 (but not 3), print Buzz
=> if n is not a multiple of 3 or 5 print the value of n.

implement a program to read number n print the output as described above.

input ------> a number n
output -----> print n string as per the above rules.

Ex:
	15 -----> FizzBuzz
	9 ------> Fizz
	10 -----> Buzz
	7 ------> 7

Logic:
	
	read 'n' value from the user

	if(n%3==0 and n%5==0)
		print 'FizzBuzz'
	else if(n%3==0 and n%5!=0)
		print 'Fizz'
	else if(n%3!=0 and n%5==0)
		print 'Buzz'
	else
		print n

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n;
    scanf("%d",&n);
    if(n%3==0 && n%5==0)
        printf("FizzBuzz");
    else if(n%3==0 && n%5!=0)
        printf("Fizz");
    else if(n%3!=0 && n%5==0)
        printf("Buzz");
    else
        printf("%d",n);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        if(n%3==0 && n%5==0)
            System.out.println("FizzBuzz");
        else if(n%3==0 && n%5!=0)
            System.out.println("Fizz");
        else if(n%3!=0 && n%5==0)
            System.out.println("Buzz");
        else
            System.out.println(n);
    }
}

python implementation:
----------------------
num=int(input())
if (num%3==0 and num%5==0):
    print("FizzBuzz")
elif (num%3==0 and num%5!=0):
    print("Fizz")
elif (num%5==0 and num%3!=0):
    print("Buzz")
elif (num%3!=0 or num%5!=0):
    print(num)

P047: VACCINATION DRIVE LIST PREPARATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Currently government is taking lot of measures to control the spread of Coronavirus. As we have vaccine now, many campaigns are done to vaccination. Health dept is identifying the people in each area and recommended/vaccination of them. They are planning three stages

stage1: above 60 years
stage2: between 18 and 60
stage3: below 18 years

Implement a program to read date of birth of the person and decide he belong to which stage.

input -----> date of birth (yyyy)
output ----> 1 or 2 or 3

Ex:
	2000 ----> 2022-2000 ---> 22 ---> 2

Logic:
		read 'year' value from the user
		age = 2022 - year

		if age>=60 then print 1
		else if age>=18 and age<60 then print 2
		else print 3
Note:
import time
print(time.strftime('%d-%m-%Y')) ---> 11-10-2022
print(time.strftime('%Y')) ---------> 2022

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int year,age;
    scanf("%d",&year);
    age = 2022-year;
    if(age>=60)
        printf("1");
    else if(age>=18 && age<60)
        printf("2");
    else
        printf("3");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int year=obj.nextInt(),age;
        age = 2022-year;
        if(age>=60)
            System.out.println(1);
        else if(age>=18 && age<60)
            System.out.println(2);
        else
            System.out.println(3);
    }
}

python implementation:
----------------------
year=int(input())
age=2022-year
if age>=60:
    print('1')
elif age>=18 and age<60:
    print('2')
else:
    print('3')

another version (pranab)
------------------------
from datetime import date

todays_date = date.today()
yr=todays_date.year
n = int(input())

age = yr-n
if age>=60:
    print("1")
elif age>=18 and age<=60:
    print("2")
else:
    print("3")

P048: EMPLOYEES RATING POINT
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In a company, an employee's rating point (ERP) is calculated as the sum of the rating points given by the employee's manager and HR. The employee rating grade (ERG) is calculated according to the ERP ranges given below.

ERP		ERG
30-50	D
51-60	C
61-80	B
81-100	A

Write an algorithm to find the ERG character for a given employee's ERP.

input -------> an integer value 
output ------> employee rating grade

Ex:
	45 ---> D
	54 ---> C
	61 ---> B
	90 ---> A

Logic:
		read ERP value from user as 'n'

		if n>=30 and n<=50 then print 'D'
		else if n>=51 and n<=60 then print 'C'
		else if n>=61 and n<=80 then print 'B'
		else print 'A'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n;
    scanf("%d",&n);
    if(n>=30 && n<=50)
        printf("D");
    else if(n>=51 && n<=60)
        printf("C");
    else if(n>=61 && n<=80)
        printf("B");
    else
        printf("A");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n = obj.nextInt();
        if(n>=30 && n<=50)
            System.out.println("D");
        else if(n>=51 && n<=60)
            System.out.println("C");
        else if(n>=61 && n<=80)
            System.out.println("B");
        else
            System.out.println("A");
    }
}

python implementation:
----------------------
n = int(input())
if n>=30 and n<=50:
    print("D")
elif n>=51 and n<=60:
    print("C")
elif n>=61 and n<=80:
    print("B")
else:
    print("A")


P049: PUZZLE
~~~~~~~~~~~~~
Dennis was solving a puzle. the puzzle was to verify a number whose cube ends with the number itself. Help Dennis to find the solution of the puzzle and write the code accordingly.

input --------> integer value to verified
output -------> boolean value True or False

Ex:
	1 ---> 1 ----> true
	2 ---> 8 ----> false
	5 ---> 125 --> true
	6 ---> 216 --> true
	7 ---> 343 --> false

Logic:
		read 'n' value from the user

		if((n*n*n)%10==n) then print 'true' else 'false'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n;
    scanf("%d",&n);
    if((n*n*n)%10==n)
        printf("true");
    else
        printf("false");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n = obj.nextInt();     
        System.out.println(((n*n*n)%10==n)?true:false);
    }
}

python implementation:
----------------------
n = int(input())
n1 = n*n*n
if n1%10==n:
    print("true")
else:
    print("false")

P050: POWER FUNCTION
~~~~~~~~~~~~~~~~~~~~
In a mathematics class, the students are beign taught power function. So "a" raised to the power of "b" is shown as a^b and the calculatation goes as a*a*a...b times. Now there is slight twist to the problem, the students have to find out the last digit of the resultant a^b. 

input -----> an integer value as base and power
output ----> last digit of a^b

Ex:
	2,3 ----> 8 ----> 8
	5,3 ----> 125 --> 5
	10,2 ---> 100 --> 0

Logic:
		
		read 'a' and 'b' values from the user.

		print ((int)pow(a,b))%10

		print (a**b)%10

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b;
    scanf("%d %d",&a,&b);
    printf("%d",((int)pow(a,b))%10);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a=obj.nextInt(),b=obj.nextInt();
        System.out.println(((int)Math.pow(a,b))%10);
    }
}

python implementation:
----------------------
a=int(input())
b=int(input())
print((a**b)%10)

P001 ---> P050 ---> fundamentals and how to code....


case1: i want to send email to all 'gmail' customers.------------> while

if dn't know the number of iterations, then we can go for 'while' loop

while(condition)
{
	----------
}

case2: i want to send email to all emp in 'wipro' company. ------> for

if know the number of iterations in advance, then we should for 'for' loop

for(intialization[I]; condition[C]; updation[U])
{
	---------
}

P051: EXTRACT DIGITS FROM THE GIVEN NUMBER
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read a number and extracts digits from the given number from right to left.

input ------> an integer value from the user
output -----> digits


Ex:
	123 ----> 3, 2, 1
	1234 ---> 4, 3, 2, 1
	12 -----> 2, 1

Logic:
		read 'n' value from the user

		while(n!=0)
		{
			d=n%10;
			print d
			n=n/10;
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d;
    scanf("%d",&n);
    while(n!=0)
    {
        d=n%10;
        printf("%d\n",d);
        n=n/10;
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int d,n=obj.nextInt();
        while(n!=0)
        {
            d=n%10;
            System.out.println(d);
            n=n/10;
        }
    }
}

python implementation:
----------------------
n=int(input())
while n!=0:
    d=n%10
    print(d)
    n=n//10


P052: SUM OF DIGITS 
~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of digits present in the given number 'n'.

input ------> an integer value from the user
output -----> sum of digits

Ex:
	123 ---> 1+2+3 = 6
	12345 -> 1+2+3+4+5 = 15

Logic:
		read 'n' value from the user
		sum=0
		while(n!=0)
		{
			d=n%10;
			sum=sum+d;
			n=n/10;
		}
		print sum

C implementation:
----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int sum=0,d,n;
    scanf("%d",&n);
    while(n!=0)
    {
        d=n%10;
        sum=sum+d;
        n=n/10;
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),s,d;
        s=0;
        while(n!=0)
        {
            d=n%10;
            s=s+d;
            n=n/10;
        }
        System.out.println(s);
    }
}

python implementation:
----------------------

version1:
---------
n=int(input())
s=0
while n!=0:
    d=n%10
    s=s+d
    n=n//10
print(s)

version2:
---------
print(sum([int(i) for i in input()]))

P053: SUM OF EVEN DIGITS 
~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of even digits present in the given number 'n'.

input ------> an integer value from the user
output -----> sum of even digits

Ex:
	1234 ----> 2+4=6
	135 -----> 0

Logic:
		read 'n' value from the user
		sum=0
		while(n!=0)
		{
			d=n%10;
			if(d%2==0)
				sum=sum+d;
			n=n/10;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,s,d;
    scanf("%d",&n);
    s=0;
    while(n!=0)
    {
        d=n%10;
        if(d%2==0)
            s=s+d;
        n=n/10;
    }
    printf("%d",s);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),s=0,d;
        while(n!=0)
        {
            d=n%10;
            if(d%2==0)
                s=s+d;
            n=n/10;
        }
        System.out.println(s);
    }
}

python implementation:
----------------------
print(sum([int(i) for i in input() if int(i)%2==0]))

P054: SUM OF ODD DIGITS 
~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of odd digits present in the given number 'n'.

input ------> an integer value from the user
output -----> sum of odd digits

Ex:
	1234 ----> 1+3=4
	135 -----> 1+3+5=9

Logic:
		read 'n' value from the user
		sum=0
		while(n!=0)
		{
			d=n%10;
			if(d%2!=0)
				sum=sum+d;
			n=n/10;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,s,d;
    scanf("%d",&n);
    s=0;
    while(n!=0)
    {
        d=n%10;
        if(d%2!=0)
            s=s+d;
        n=n/10;
    }
    printf("%d",s);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),s=0,d;
        while(n!=0)
        {
            d=n%10;
            if(d%2!=0)
                s=s+d;
            n=n/10;
        }
        System.out.println(s);
    }
}

python implementation:
----------------------
print(sum([int(i) for i in input() if int(i)%2!=0]))

P055: SUM OF PRIME DIGITS 
~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of prime digits present in the given number 'n'.

input ------> an integer value from the user
output -----> sum of prime digits

Ex:
	1234 ----> 2+3=5
	135 -----> 3+5=8
	123 -----> 2+3=5

Digits ----------> 0, 1, 2, 3, 4, 5, 6, 7, 8, 9
Prime Digits ----> 2, 3, 5, 7

Logic:
		read 'n' value from the user
		sum=0
		while(n!=0)
		{
			d=n%10;
			if(d==2 or d==3 or d==5 or d==7)
				sum=sum+d;
			n=n/10;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,s,d;
    scanf("%d",&n);
    s=0;
    while(n!=0)
    {
        d=n%10;
        if(d==2 || d==3 || d==5 || d==7)
            s=s+d;
        n=n/10;
    }
    printf("%d",s);
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),s=0,d;
        while(n!=0)
        {
            d=n%10;
            if(d==2 || d==3 || d==5 || d==7)
                s=s+d;
            n=n/10;
        }
        System.out.println(s);
    }
}

python implementation:
----------------------
print(sum([int(i) for i in input() if i in '2357']))


P056: DIVISIBLE BY 3
~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of digits which are divisible by 3.

input ------> an integer value from the user
output -----> sum of digits divisible by 3

Ex:
	123456 ----> 3, 6 ----> 3+6=9

Logic:

		sum=0;
		while(n!=0)
		{
			d=n%10;
			if(d%3==0)
				sum=sum+d;
			n=n/10;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d,s=0;
    scanf("%d",&n);
    while(n!=0)
    {
        d=n%10;
        if(d%3==0)
            s=s+d;
        n=n/10;
    }
    printf("%d",s);
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),s=0,d;
        while(n!=0)
        {
            d=n%10;
            if(d%3==0)
                s=s+d;
            n=n/10;
        }
        System.out.println(s);
    }
}

python implementation:
----------------------
print(sum([int(i) for i in input() if i in '369']))

P057: COUNT OF DIGITS
~~~~~~~~~~~~~~~~~~~~~
Implement a program to count number of digits present in the given number.

input -----> an integer value
output ----> count of digits

Ex:
	123 -----> 3
	12345 ---> 5

Logic:
		count=0;
		while(n!=0)
		{
			count++;
			n=n/10;
		}
		print count;

Logic:
		read the number in the form of string...
		c    ---> strlen(s)
		java ---> s.length()
		py -----> len(s)

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int c=0,n;
    scanf("%d",&n);
    while(n!=0)
    {
        c++;
        n=n/10;
    }
    printf("%d",c);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s = obj.nextLine();
        System.out.println(s.length());
    }
}

python implementation:
----------------------
s=input()
print(len(s))

P058: NUMBER OF OCCURRENCES
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find number of occurrences the given digit in the number.

input ------> an integer number and digit
output -----> number of occurrences

Ex:
	1234, 3 -----> 1
	1211, 1------> 3

Logic:
		c=0;
		while(n!=0)
		{
			d=n%10;
			if(d==dd)
				c++;
			n=n/10;
		}
		print c;

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d,dd,c;
    scanf("%d %d",&n,&dd);
    c=0;
    while(n!=0)
    {
        d=n%10;
        if(d==dd)
            c++;
        n=n/10;
    }
    printf("%d",c);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),dd=obj.nextInt(),d,c=0;
        while(n!=0)
        {
            d=n%10;
            if(d==dd)
                c++;
            n=n/10;
        }
        System.out.println(c);
    }
}

python implementation:
----------------------
n=input()
dd=input()
print(n.count(dd))


P059: MAX DIGIT
~~~~~~~~~~~~~~~
Implement a program to find the max digit present in the given number.

input ------> an integer value
output -----> max digit

Ex:
	1231 -----> 3
	9102 -----> 9

Logic:
		m=0;
		while(n!=0)
		{
			d=n%10;
			if(m<d)
				m=d;
			n=n/10;
		}
		print m

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int m,n,d;
    scanf("%d",&n);
    m=0;
    while(n!=0)
    {
        d=n%10;
        if(m<d)
            m=d;
        n=n/10;
    }
    printf("%d",m);
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),m=0,d;
        while(n!=0)
        {
            d=n%10;
            if(m<d)
                m=d;
            n=n/10;
        }
        System.out.println(m);
    }
}

python implementation:
----------------------
print(max([int(i) for i in input()]))


P060: MIN DIGIT
~~~~~~~~~~~~~~~
Implement a program to find the min digit present in the given number.

input ------> an integer value
output -----> min digit

Ex:
	1231 -----> 1
	9102 -----> 0

Logic:
		m=99;
		while(n!=0)
		{
			d=n%10;
			if(d<m)
				m=d;
			n=n/10;
		}
		print m

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int m,n,d;
    scanf("%d",&n);
    m=99;
    while(n!=0)
    {
        d=n%10;
        if(d<m)
            m=d;
        n=n/10;
    }
    printf("%d",m);
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),m=99,d;
        while(n!=0)
        {
            d=n%10;
            if(d<m)
                m=d;
            n=n/10;
        }
        System.out.println(m);
    }
}

python implementation:
----------------------
print(min([int(i) for i in input()]))

P061: ODDISH OR EVENISH
~~~~~~~~~~~~~~~~~~~~~~~
Implement a program that determines whether a number is oddish or evenish, a number is oddish if the sum of all digits is odd and evenish if the sum of all digits is even. print the output as oddish or evenish.

input -----> an integer value
output ----> oddish or evenish

Ex:
	123 ---> 1+2+3=6    ----> evenish
	1234 --> 1+2+3+4=10    -> evenish
	12345 -> 1+2+3+4+5=15 --> oddish

Logic:
		sum=0;
		while(n!=0)
		{
			d=n%10;
			sum=sum+d;
			n=n/10;
		}
		if sum%2==0 then print 'evenish' else 'oddish'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d,s=0;
    scanf("%d",&n);
    s=0;
    while(n!=0)
    {
        d=n%10;
        s=s+d;
        n=n/10;
    }
    printf((s%2==0)?"evenish":"oddish");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),d,s;
        s=0;
        while(n!=0)
        {
            d=n%10;
            s=s+d;
            n=n/10;
        }
        System.out.println((s%2==0)?"evenish":"oddish");
    }
}

python implementation:
----------------------
s=sum([int(i) for i in input()])
print('evenish' if s%2==0 else 'oddish')


P062: REVERSE THE NUMBER
~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to calcualte the reverse of the given number.

input ----> an integer value
output ---> reverse of the number

Ex:
    123 ----> 321
    121 ----> 121

Logic:
		r=0;
		while(n!=0){
			d=n%10;
			r=r*10+d;
			n=n/10;
		}
		print r

C/Java/Py ----> Core Logic
Java/Py ------>

				The input in the form of string

				java ----> StringBuffer ---> reverse
				Py ------> String ---------> s[::-1]

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,r=0,d;
    scanf("%d",&n);
    while(n!=0)
    {
        d=n%10;
        r=r*10+d;
        n=n/10;
    }
    printf("%d",r);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s = obj.nextLine();
        StringBuffer sb = new StringBuffer(s);
        System.out.println(sb.reverse());
    }
}

python implementation:
----------------------
s=input()
print(s[::-1])

P063: PALINDROME NUMBER OR NOT
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to check whether the given number is palindrome or not.

input ----> an integer value
output ---> true or false

Ex:
	123 ----> 321 ---> false
	121 ----> 121 ---> true

Logic:
		r=0;
		temp=n;
		while(n!=0)
		{
			d=n%10;
			r=r*10+d;
			n=n/10;
		}
		if temp==r then print 'true' else 'false'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d,r,temp;
    scanf("%d",&n);
    temp=n;
    r=0;
    while(n!=0)
    {
        d=n%10;
        r=r*10+d;
        n=n/10;
    }
    printf((temp==r)?"true":"false");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),r,d,temp;
        temp=n;
        r=0;
        while(n!=0)
        {
            d=n%10;
            r=r*10+d;
            n=n/10;
        }
        System.out.println(temp==r);
    }
}

python impelemtation:
---------------------
s=input()
print('true' if s==s[::-1] else 'false')


P064: ADD FIRST AND LAST DIGIT
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read a number and print sum of first and last digit in the given number.

input ----> an integer value
output ---> an int value

Ex:
	123 ----> 1+3 = 4
	123456--> 1+6 = 7

Logic:
		
		ld = n%10;
		n=rev(n);
		fd = n%10;
		print ld + fd

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int rev(int n)
{
    int d,r=0;
    while(n!=0)
    {
        d=n%10;
        r=r*10+d;
        n=n/10;
    }
    return r;
}

int main() {
    int n,ld,fd;
    scanf("%d",&n);
    fd=n%10;
    n=rev(n);
    ld=n%10;
    printf("%d",fd+ld);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int rev(int n)
    {
        int d,r=0;
        while(n!=0)
        {
            d=n%10;
            r=r*10+d;
            n=n/10;
        }
        return r;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),fd,ld;
        fd=n%10;
        n=rev(n);
        ld=n%10;
        System.out.println(fd+ld);
    }
}

python implementation:
----------------------
def rev(n):
    r=0
    while n!=0:
        d=n%10
        r=r*10+d
        n=n//10
    return r

n=int(input())
fd=n%10
n=rev(n)
ld=n%10
print(fd+ld)

P065: COUNT EVEN AND ODD NUMBER OF DIGITS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to count number of even and odd digits and print.

input -----> an integer
output ----> count even and odd digits

Ex:
	123 ----> 1, 2
	1234 ---> 2, 2
	222 ----> 3, 0
	333 ----> 0, 3

Logic:
		read 'n' value
		ec = 0
		oc = 0
		while(n!=0)
		{
			d=n%10;
			if(d%2==0)
				ec++;
			else
				oc++;
			n=n/10;
		}
		print ec and oc

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d,ec=0,oc=0;
    scanf("%d",&n);
    while(n!=0)
    {
        d=n%10;
        if(d%2==0)
            ec++;
        else
            oc++;
        n=n/10;
    }
    printf("%d\n%d",ec,oc);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),ec=0,oc=0,d;
        while(n!=0)
        {
            d=n%10;
            if(d%2==0)
                ec++;
            else
                oc++;
            n=n/10;
        }
        System.out.println(ec);
        System.out.println(oc);
    }
}

python implementation:
----------------------
n=int(input())
ec=0
oc=0
while n!=0:
    d=n%10
    if d%2==0:
        ec=ec+1
    else:
        oc=oc+1
    n=n//10
print(ec)
print(oc)

P066: E-COMMERCE CUSTOMERS  DISCOUNT
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
An e-commerce company plans to give their customers a discount for the newyears holiday. The discount will be calcualted on the basis of the bill amount of the order placed. The discount amount is the sum of all the odd digits in the customers total bill amount. if no odd digits is present in the bill amount, then discount will be zero.

input ----> bill amount
output ---> an integer value

Ex:
	1234 ----> 1+3=4
	135 -----> 1+3+5=9

Logic:
		read 'n' value from the user
		sum=0
		while(n!=0)
		{
			d=n%10;
			if(d%2!=0)
				sum=sum+d;
			n=n/10;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,s,d;
    scanf("%d",&n);
    s=0;
    while(n!=0)
    {
        d=n%10;
        if(d%2!=0)
            s=s+d;
        n=n/10;
    }
    printf("%d",s);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),s=0,d;
        while(n!=0)
        {
            d=n%10;
            if(d%2!=0)
                s=s+d;
            n=n/10;
        }
        System.out.println(s);
    }
}

python implementation:
----------------------
print(sum([int(i) for i in input() if int(i)%2!=0]))

P067: DATA ENCRYPTION KEY
~~~~~~~~~~~~~~~~~~~~~~~~~
The IT Company "Soft ComInfo" has decided to transfer its messages through the N/W using new encryption technique. The company has decided to encrypt the data using the non-prime number concept. The message is in the form of a number and the sum of non-prime digits present in the message is used as the encryption key.

input -----> a number from the user
output ----> encryption key

Ex:
	prime digits ----> 2, 3, 5, 7
	non-prime digits-> 4, 6, 8, 9

	12345 -----> 4
	23456 -----> 4+6=10

Logic:
		read 'n' value from the user
		sum=0
		while(n!=0)
		{
			d=n%10;
			if(d==4 or d==6 or d==8 or d==9)
				sum=sum+d;
			n=n/10;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,s,d;
    scanf("%d",&n);
    s=0;
    while(n!=0)
    {
        d=n%10;
        if(d==4 || d==6 || d==8 || d==9)
            s=s+d;
        n=n/10;
    }
    printf("%d",s);
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),s=0,d;
        while(n!=0)
        {
            d=n%10;
            if(d==4 || d==6 || d==8 || d==9)
                s=s+d;
            n=n/10;
        }
        System.out.println(s);
    }
}

python implementation:
----------------------
print(sum([int(i) for i in input() if i in '4689']))

P068: SECURE DATA TRANSMISSION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
A company wishes to transmit data to another server. The data consists of numbers only. To secure the data during transmission, they plan to reverse the data during transmission; they plan to reverse the data first. Write an algorithm to reverse the data first.

input -----> data to be transmitted
output ----> reverse the data

Ex:
    123 ----> 321
    121 ----> 121

Logic:
		r=0;
		while(n!=0){
			d=n%10;
			r=r*10+d;
			n=n/10;
		}
		print r

C/Java/Py ----> Core Logic
Java/Py ------>

				The input in the form of string

				java ----> StringBuffer ---> reverse
				Py ------> String ---------> s[::-1]

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,r=0,d;
    scanf("%d",&n);
    while(n!=0)
    {
        d=n%10;
        r=r*10+d;
        n=n/10;
    }
    printf("%d",r);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s = obj.nextLine();
        StringBuffer sb = new StringBuffer(s);
        System.out.println(sb.reverse());
    }
}

python implementation:
----------------------
s=input()
print(s[::-1])

P069: ONE TIME PASSWORD
~~~~~~~~~~~~~~~~~~~~~~~
A company wishes to devise an order confirmation procedure. They plan to require an extra confirmation instead of simply auto-confirming the order at the time it is placed. For this purpose, the system will generate one time password to be shared with the customer. The customer who is placing the order has to enter the OTP to confirm the order. The OTP generated for the requested order ID, as the product of the digits in orderID. 

Write an algorithm to find the OTP for the OrderID.

input -----> an integer value
output ----> OTP i.e. product of digits

Ex:
	123 ---> 1*2*3 = 6
	192 ---> 1*9*2 = 18

Logic:
		otp = 1
		while(n!=0)
		{
			d=n%10;
			otp=otp*d;
			n=n/10;
		}
		print otp

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d,otp;
    scanf("%d",&n);
    otp=1;
    while(n!=0){
        d=n%10;
        otp=otp*d;
        n=n/10;
    }
    printf("%d",otp);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),otp=1,d;
        while(n!=0)
        {
            d=n%10;
            otp=otp*d;
            n=n/10;
        }
        System.out.println(otp);
    }
}

python implementation:
----------------------
n=int(input())
otp=1
while n!=0:
    d=n%10
    otp=otp*d
    n=n//10
print(otp)

P070: NEAREST PALINDROME
~~~~~~~~~~~~~~~~~~~~~~~~~
Write a program to find nearest greater paliandrome 

input ---------> an integer value
output --------> print nearest paliandrome value

Ex:
	90 ---> 90, 91, 92, 93, 94, 95, 96, 97, 98, 99 ---> 99
	100 --> 100, 101 ----> 101
	700 --> 700, 701, 702, 703, 704, 705, 706, 707 ---> 707

Logic:
		read 'n' value
		while(true)
		{
			if(n==rev(n))
			{
				print n
				break
			}
			n++;
		} 


c -----> while(1)
java --> while(true)
py ----> while True:

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int rev(int n){
    int d,r=0;
    while(n!=0)
    {
        d=n%10;
        r=r*10+d;
        n=n/10;
    }
    return r;
}

int main() {
    int n;
    scanf("%d",&n);
    while(1){
        if(n==rev(n))
        {
            printf("%d",n);
            break;
        }
        n++;
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int rev(int n)
    {
        int r=0,d;
        while(n!=0)
        {
            d=n%10;
            r=r*10+d;
            n=n/10;
        }
        return r;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        while(true)
        {
            if(n==rev(n))
            {
                System.out.println(n);
                break;
            }
            n++;
        }
    }
}

python implementation:
----------------------
n=int(input())
while True:
    if n==int(str(n)[::-1]):
        print(n)
        break
    n=n+1

P071: MATHEMATICAL TRICKS
~~~~~~~~~~~~~~~~~~~~~~~~~
Aryan is studying in the 5th standard. He is very interested in mathematical tricks and always wanted to play with numbers. Aryan would like to replace existing numbers with some other numbers. Today he decided to replace all digits of the number (which is greater than or equal to 2 digits) by its squares and print it in reverse order. Write a program to help him to replace numbers accordingly.

input -----> an integer value
output ----> replaced all digits by its squares and revered number

Ex:
	123 ----> 941
	904 ----> 16081

Logic:
		while(n!=0)
		{
			d=n%10;
			print d*d
			n=n/10;
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d;
    scanf("%d",&n);
    while(n!=0)
    {
        d=n%10;
        printf("%d",d*d);
        n=n/10;
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),d;
        while(n!=0)
        {
            d=n%10;
            System.out.print(d*d);
            n=n/10;
        }
    }
}

python implementation:
----------------------
n=int(input())
while n!=0:
    d=n%10
    print(d*d,end='')
    n=n//10

P072: ITEM ID
~~~~~~~~~~~~~~
A company wishes to bucketize their item id's for better search operations. The bucket for the item ID is chosen on the basis of the maximum value of the digit in the item ID. Writean algorithm to find the bucket to which the item ID will be assigned.

input ----> an integer value
output ---> bucket id

Ex:
	1234 ----> 4
	1982 ----> 9

Logic is same as 'max digit' present in the given number

Logic:
		m=0;
		while(n!=0)
		{
			d=n%10;
			if(m<d)
				m=d;
			n=n/10;
		}
		print m

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int m,n,d;
    scanf("%d",&n);
    m=0;
    while(n!=0)
    {
        d=n%10;
        if(m<d)
            m=d;
        n=n/10;
    }
    printf("%d",m);
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),m=0,d;
        while(n!=0)
        {
            d=n%10;
            if(m<d)
                m=d;
            n=n/10;
        }
        System.out.println(m);
    }
}

python implementation:
----------------------
print(max([int(i) for i in input()]))

P073: COUNTRY VISA CENTRE
~~~~~~~~~~~~~~~~~~~~~~~~~~
The country visa center generates the token number for its applicants from their application ID. the application ID is numberic value. The token number is generated  in a specific form. the even digits in the applicant's ID are replaced by the digit one greater than the even digitand the odd digits in the applicant's ID are replaced by the digit one lesser than the odd digit. The numeric calue thus generated represents the token number of applicant.

Write an algorithm togenerate the token number from the applicant ID.

input -----> application id
output ----> token id

Ex:
	34125 ----> 25034

	34125 ---> reverse first ---> 52143

Logic:
		n=rev(n)
		while(n!=0)
		{
			d=n%10;
			if(d%2==0)
				print d+1
			else
				print d-1
			n=n/10;
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int rev(int n)
{
    int d,r=0;
    while(n!=0)
    {
        d=n%10;
        r=r*10+d;
        n=n/10;
    }
    return r;
}

int main() {
    int n,d;
    scanf("%d",&n);
    n=rev(n);
    while(n!=0)
    {
        d=n%10;
        if(d%2==0)
            printf("%d",d+1);
        else
            printf("%d",d-1);
        n=n/10;
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int rev(int n)
    {
        int d,r=0;
        while(n!=0)
        {
            d=n%10;
            r=r*10+d;
            n=n/10;
        }
        return r;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),d;
        n=rev(n);
        while(n!=0)
        {
            d=n%10;
            if(d%2==0)
                System.out.print(d+1);
            else
                System.out.print(d-1);
            n=n/10;
        }
    }
}

python implementation:
----------------------
n=int(input())
n=int(str(n)[::-1])
while n!=0:
    d=n%10
    if d%2==0:
        print(d+1,end='')
    else:
        print(d-1,end='')
    n=n//10

P074: SUPER MARKET PRICING
~~~~~~~~~~~~~~~~~~~~~~~~~~
A super market maintains a pricing format for all its products. A value N is printed on each product. When the scanner reads the value N on the item, the product of all the digits in the value N is the price of the item. the task here is to design the software such that given the code of any item N the product (multiplication) of all the digits of value should be computed (price).

input ------> an integer value
output -----> price

Ex: 
	1234 ---> 1*2*3*4=24
	2512 ---> 2*5*1*2=20

Logic:
		p=1
		while(n!=0)
		{
			d=n%10;
			p=p*d;
			n=n/10;
		}
		print p

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d,p=1;
    scanf("%d",&n);
    while(n!=0)
    {
        d=n%10;
        p=p*d;
        n=n/10;
    }
    printf("%d",p);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),d,p=1;
        while(n!=0)
        {
            d=n%10;
            p=p*d;
            n=n/10;
        }
        System.out.println(p);
    }
}

python implementation:
----------------------
n=int(input())
p=1
while n!=0:
    d=n%10
    p=p*d
    n=n//10
print(p)

P075: NUMBER CONTAINER
~~~~~~~~~~~~~~~~~~~~~~
Given two positive numbers N and K. The task is to find the nunber N containers exactly K digit or not. If contains then print True<space>digit_count otherwise False<space>digit_count.

input -----> value of n and k
output ----> True or False followed by digit count

Ex:
	1234, 3 ----> False 4
	123,3 ------> True 3

Logic:
		read 'n' value
		read 'keyc' value
		c=0
		while(n!=0)
		{
			c++;
			n=n/10;
		}
		if(c==keyc)
			print 'True ',c
		else
			print 'False ',c

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,keyc,c=0;
    scanf("%d",&n);
    scanf("%d",&keyc);
    while(n!=0)
    {
        c++;
        n=n/10;
    }
    if(keyc==c)
        printf("True %d",c);
    else
        printf("False %d",c);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),keyc=obj.nextInt(),c=0;
        while(n!=0)
        {
            c++;
            n=n/10;
        }
        if(keyc==c)
            System.out.println("True "+c);
        else
            System.out.println("False "+c);
    }
}

python implementation:
----------------------
n=input()
keyc=int(input())
if len(n)==keyc:
    print('True',len(n))
else:
    print('False',len(n))

Ex:
n = int(input())
n1 = int(input())
c=0
while n !=0:
    c=c+1
    n=n//10
if n1==c:
    print("True",c )
else:
    print("False",c)


P076: CHRISTMAS OFFER
~~~~~~~~~~~~~~~~~~~~~
An e-commerce company plans to give their customers a special discount for the Christmas, they are planning to offer a flat discount. The discount value is calculated as the sum of all prime digits in the total bill amount.

Write an algorithm to find the discount value for the given total bill amount.

input -----> an integer value
output ----> discount

Note: It is same as sum of prime digits present in the given number.

Ex:
	1234 ----> 2+3=5
	135 -----> 3+5=8
	123 -----> 2+3=5

Digits ----------> 0, 1, 2, 3, 4, 5, 6, 7, 8, 9
Prime Digits ----> 2, 3, 5, 7

Logic:
		read 'n' value from the user
		sum=0
		while(n!=0)
		{
			d=n%10;
			if(d==2 or d==3 or d==5 or d==7)
				sum=sum+d;
			n=n/10;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,s,d;
    scanf("%d",&n);
    s=0;
    while(n!=0)
    {
        d=n%10;
        if(d==2 || d==3 || d==5 || d==7)
            s=s+d;
        n=n/10;
    }
    printf("%d",s);
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),s=0,d;
        while(n!=0)
        {
            d=n%10;
            if(d==2 || d==3 || d==5 || d==7)
                s=s+d;
            n=n/10;
        }
        System.out.println(s);
    }
}

python implementation:
----------------------
print(sum([int(i) for i in input() if i in '2357']))

P077: NIVEN NUMBER
~~~~~~~~~~~~~~~~~~
Write a program to accept a number and check and display whether it is a Niven Number or not.
Niven Number is that a number which is divisible by its sum of digits.

input ----> an integer value
output ---> Yes or No

Ex:
	16 ----> 1+6=7 ----> No
	18 ----> 1+8=9 ----> Yes

Logic:
		read 'n' value
		temp=n
		sum=0;
		while(n=0)
		{
			d=n%10;
			sum=sum+d;
			n=n/10;
		}
		if temp%sum==0 then 'Yes' else 'No'

 C Implementation:
 -----------------
 #include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d,temp,sum;
    scanf("%d",&n);
    temp=n;
    sum=0;
    while(n!=0)
    {
        d=n%10;
        sum=sum+d;
        n=n/10;
    }
    if(temp%sum==0)
        printf("Yes");
    else
        printf("No");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),sum,temp,d;
        temp=n;
        sum=0;
        while(n!=0)
        {
            d=n%10;
            sum=sum+d;
            n=n/10;
        }
        System.out.println((temp%sum==0)?"Yes":"No");
    }
}

python implementation:
----------------------
n=int(input())
temp=n
sum=0
while n!=0:
    d=n%10
    sum=sum+d
    n=n//10
print('Yes' if temp%sum==0 else 'No')


P078: Newyear Holiday Discount
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
An e-Commerce company plans to give their customers a discount for the New Year’s holiday. The discount will be calculated on the basis of the bill amount of the order place. The discount amount is the product of the sum of all odd digits and the sum of all even digits of the customers total bill amount.

input --------> an integer representing bill amount
output -------> return discount value

Ex:
	12345 ----> (2+4)*(1+3+5) = 6*9 = 54

Logic:
		se=0;
		so=0;
		while(n!=0)
		{
			d = n%10;
			if(d%2==0)
				se=se+d;
			else
				so=so+d;
			n=n/10;
		}
		print se*so

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d,se,so;
    scanf("%d",&n);
    se=0;
    so=0;
    while(n!=0)
    {
        d=n%10;
        if(d%2==0)
            se=se+d;
        else
            so=so+d;
        n=n/10;
    }
    printf("%d",se*so);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),se=0,so=0,d;
        while(n!=0)
        {
            d=n%10;
            if(d%2==0)
                se=se+d;
            else
                so=so+d;
            n=n/10;
        }
        System.out.println(se*so);
    }
}

python implementation:
----------------------
n=int(input())
se=0
so=0
while n!=0:
    d=n%10
    if d%2==0:
        se=se+d
    else:
        so=so+d
    n=n//10
print(se*so)


P079: DIGITAL ROOT
~~~~~~~~~~~~~~~~~~
Write a program to find the digital root of a given number. 
Digital root is the recursive sum of digits in the given number (until single digit is arrived)

input ----> a number from the user
output ---> single digit number

Ex:	
	123 ---> 1+2+3=6
	12345--> 1+2+3+4+5=15=1+5=6
	7234---> 7+2+3+4=16=1+6=7

Logic:
		while(1){
			if(n>=0 and n<=9)
			{
				print n
				break;
			}
			n=sum(n);
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int sum(int n)
{
    int d,s=0;
    while(n!=0)
    {
        d=n%10;
        s=s+d;
        n=n/10;
    }
    return s;
}
int main() {
    int n;
    scanf("%d",&n);
    while(1)
    {
        if(n>=0 && n<=9)
        {
            printf("%d",n);
            break;
        }
        n=sum(n);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int sum(int n)
    {
        int d,s=0;
        while(n!=0)
        {
            d=n%10;
            s=s+d;
            n=n/10;
        }
        return s;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        while(true)
        {
            if(n>=0 && n<=9)
            {
                System.out.println(n);
                break;
            }
            n=sum(n);
        }
    }
}

python implementation:
----------------------
def sum(n):
    s=0
    while(n!=0):
        d=n%10
        s=s+d
        n=n//10
    return s

n=int(input())
while True:
    if n>=0 and n<=9:
        print(n)
        break
    n=sum(n)


P080: ABSOLUTE DIFFERENCE
~~~~~~~~~~~~~~~~~~~~~~~~~
Write a program to find the absolute difference between the original number and its reserved number.

input -----> a number from the user
output ----> absolute difference

Ex:
	421 ----> 421-124 = 297
	123 ----> 123-321 = -198 = 198

Logic:
		read 'n' value 
		print abs(n-rev(n))

		c----> abs(num)
		java-> Math.abs(num)
		py --> abs(num)

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int rev(int n)
{
    int r=0,d;
    while(n!=0)
    {
        d=n%10;
        r=r*10+d;
        n=n/10;
    }
    return r;
}
int main() {
    int n;
    scanf("%d",&n);
    printf("%d",abs(n-rev(n)));
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int rev(int n)
    {
        int r=0,d;
        while(n!=0)
        {
            d=n%10;
            r=r*10+d;
            n=n/10;
        }
        return r;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        System.out.println(Math.abs(n-rev(n)));
    }
}

python implementation:
----------------------
n=int(input())
print(abs(n-int(str(n)[::-1])))

P081: DUCK NUMBER
~~~~~~~~~~~~~~~~~
Program to read a number and check whether it is duck number or not.
Hint: A duck number is a number which has zeros present in it, but no zero present in the begining of the number.

input-------> a number from the user
output------> Yes or No

Ex:
	1234 ----> No
	1203 ----> Yes

Logic:
		flag=0;
		while(n!=0)
		{
			d=n%10;
			if(d==0)
			{
				flag=1;
				break;
			}
			n=n/10;
		}
		if flag==1 then print 'Yes' else 'No'

		Java ----> s.contains("0") ---> true or false
		Py ------> "0" in s ----------> True or False

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d,flag=0;
    scanf("%d",&n);
    while(n!=0)
    {
        d=n%10;
        if(d==0)
        {
            flag=1;
            break;
        }
        n=n/10;
    }
    printf((flag==1)?"Yes":"No");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s = obj.nextLine();
        System.out.println((s.contains("0"))?"Yes":"No");
    }
}

python implementation:
----------------------
s=input()
print("Yes" if "0" in s else "No")

P082: TEST PAPER SET
~~~~~~~~~~~~~~~~~~~~
In an online exam, the test paper set is categorized by the letters A-Z. The students enrolled in the exam have been assigned a numeric value called application ID. To assign the test set to the student, firstly the sum of all digits in the application ID is calculated. If the sum is within the numeric range 1-26 the corresponding alphanetic set code is assigned to the student, else the sum of the digits are calcualted again and so on unitil the sum falls within the 1-26 range.

input ------> application id as int
output -----> set number

Ex:
	123 ----> 1+2+3=6 ---> F

Logic:
------
		read 'n' value
		while(1)
		{
			if(n>=1 && n<=26){
				print n+64
				break;
			}
			n=sum(n);
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int sum(int n)
{
    int d,s=0;
    while(n!=0)
    {
        d=n%10;
        s=s+d;
        n=n/10;
    }
    return s;
}
int main() {
    int n;
    scanf("%d",&n);
    while(1)
    {
        if(n>=1 && n<=26)
        {
            printf("%c",n+64);
            break;
        }
        n=sum(n);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int sum(int n)
    {
        int s=0,d;
        while(n!=0)
        {
            d=n%10;
            s=s+d;
            n=n/10;
        }
        return s;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        while(true)
        {
            if(n>=1 && n<=26)
            {
                System.out.println((char)(n+64));
                break;
            }
            n=sum(n);
        }
    }
}

python implementation:
----------------------
def sum(n):
    s=0
    while n!=0:
        d=n%10
        s=s+d
        n=n//10
    return s

n=int(input())
while True:
    if n>=1 and n<=26:
        print(chr(n+64))
        break
    n=sum(n)

P083: TOKEN NUMBER
~~~~~~~~~~~~~~~~~~
Write an algorithm to generate the token number from the application ID by doing this modifications.

R1. If the digit is even add 1 to it.
R2. If the digit is odd sub 1 from it.


input -----> a number from the user
output ----> token number

Ex:
	34125 ----> 25034

	34125 ---> reverse first ---> 52143

Logic:
		n=rev(n)
		while(n!=0)
		{
			d=n%10;
			if(d%2==0)
				print d+1
			else
				print d-1
			n=n/10;
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int rev(int n)
{
    int d,r=0;
    while(n!=0)
    {
        d=n%10;
        r=r*10+d;
        n=n/10;
    }
    return r;
}

int main() {
    int n,d;
    scanf("%d",&n);
    n=rev(n);
    while(n!=0)
    {
        d=n%10;
        if(d%2==0)
            printf("%d",d+1);
        else
            printf("%d",d-1);
        n=n/10;
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int rev(int n)
    {
        int d,r=0;
        while(n!=0)
        {
            d=n%10;
            r=r*10+d;
            n=n/10;
        }
        return r;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),d;
        n=rev(n);
        while(n!=0)
        {
            d=n%10;
            if(d%2==0)
                System.out.print(d+1);
            else
                System.out.print(d-1);
            n=n/10;
        }
    }
}

python implementation:
----------------------
n=int(input())
n=int(str(n)[::-1])
while n!=0:
    d=n%10
    if d%2==0:
        print(d+1,end='')
    else:
        print(d-1,end='')
    n=n//10


P084: PLAYER'S SCORE
~~~~~~~~~~~~~~~~~~~~
In a game, organizers has given a number to the player. The player has to find out the absolute differnece between the number and the reverse of the number. The difference between two numbers is the player's score. The number given to the player and the player's score can be a negative or positive number.

Write an algorithm to find the player's score.

input ------> an integer 
output -----> player's score

formula: n-rev(n)

Ex:
	421 ----> 421-124 = 297
	123 ----> 123-321 = -198 = 198

Logic:
		read 'n' value 
		print abs(n-rev(n))

		c----> abs(num)
		java-> Math.abs(num)
		py --> abs(num)

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int rev(int n)
{
    int r=0,d;
    while(n!=0)
    {
        d=n%10;
        r=r*10+d;
        n=n/10;
    }
    return r;
}
int main() {
    int n;
    scanf("%d",&n);
    printf("%d",abs(n-rev(n)));
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int rev(int n)
    {
        int r=0,d;
        while(n!=0)
        {
            d=n%10;
            r=r*10+d;
            n=n/10;
        }
        return r;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        System.out.println(Math.abs(n-rev(n)));
    }
}

python implementation:
----------------------
n=int(input())
print(abs(n-int(str(n)[::-1])))


P085: GLOBAL ADD
~~~~~~~~~~~~~~~~
The media compnay "GlobalAdd" has received a batch of advertisements from different product brands. The batch of advertisements is a numeric value where each digit represnets the number of advertisements the media company has received from different product brands. Since the company banners permit only even numbers of advertisements to be displayed, the media company needs to know the totoal number of advertisements it will be able to display from the given batch.

Write an algorithm to calculate the total number of advertisements that will be displayed from the batch.

input -----> an integer
output ----> count of advertisements

Ex:
	1234 ----> 2

Logic:
		count=0;
		while(n!=0)
		{
			d=n%10;
			if(d%2==0)
				count++;
			n=n/10;
		}
		print count;

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,c=0,d;
    scanf("%d",&n);
    while(n!=0)
    {
        d=n%10;
        if(d%2==0)
            c++;
        n=n/10;
    }
    printf("%d",c);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int c=0,n=obj.nextInt(),d;
        while(n!=0)
        {
            d=n%10;
            if(d%2==0)
                c++;
            n=n/10;
        }
        System.out.println(c);
    }
}

python implementation:
----------------------
n=int(input())
c=0
while n!=0:
    d=n%10
    if d%2==0:
        c=c+1
    n=n//10
print(c)


P086: HAPPY NUMBER
~~~~~~~~~~~~~~~~~~
The happy number can be defined as a number which will yield 1 when it is replaced by the sum of the square of its digits repeatedly. If this process results in an endless cycle of numbers containing single digit, then the number is called an unhappy number.

Write a program that accepts a number and determines whether the number is a happy number or not. Return true if so, false otherwise.

input -----> a number from the user
output ----> true or false

Ex:
	31=>9+1=>10=>1+0=>1 ---> true
	16=>1+36=37........ ---> false

Logic:
		read 'n' value
		while(1)
		{
			if(n>=0 and n<=9)
			{
				if(n==1)
				{
					flag=1;
					break;
				}
				else
				{
					flag=0;
					break;
				}
			}
		n=sumofsqaures(n);
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int sum(int n)
{
    int s=0,d;
    while(n!=0)
    {
        d=n%10;
        s=s+(d*d);
        n=n/10;
    }
    return s;
}

int main() {
    int n;
    scanf("%d",&n);
    while(1)
    {
        if(n>=0 && n<=9)
        {
            if(n==1)
            {
                printf("true");
                break;
            }
            else
            {
                printf("false");
                break;
            }
        }
        n=sum(n);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int sum(int n)
    {
        int s=0,d;
        while(n!=0)
        {
            d=n%10;
            s=s+d*d;
            n=n/10;
        }
        return s;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        while(true)
        {
            if(n>=0 && n<=9)
            {
                if(n==1)
                {
                    System.out.println(true);
                    break;
                }
                else
                {
                    System.out.println(false);
                    break;
                }
            }
            n=sum(n);
        }
    }
}

python implementation:
----------------------
def sum(n):
    s=0
    while n!=0:
        d=n%10
        s=s+d*d
        n=n//10
    return s

n=int(input())
while True:
    if n>=0 and n<=9:
        if n==1:
            print("true")
            break
        else:
            print("false")
            break
    n=sum(n)


P087: MATHTIP
~~~~~~~~~~~~~
The online math course provider 'MathAtTip' has designed a course for children called Learning Number Recognition and Coutning. The assessment part of the course has a question where the student is given a number and a digit. The student needs to find out the total count of the digits present in the number excluding the given digit.

input ------> two space seperated int values
output -----> count of total digits excluding k

Ex:
	12345, 3 ---> 4
	12212, 2 ---> 2

Logic:
		while(n!=0)
		{
			d=n%10;
			if(d!=key)
				count++;
			n=n/10;
		}
		print count

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d,key,c=0;
    scanf("%d",&n);
    scanf("%d",&key);
    while(n!=0)
    {
        d=n%10;
        if(d!=key)
            c++;
        n=n/10;
    }
    printf("%d",c);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),key=obj.nextInt(),d,c=0;
        while(n!=0)
        {
            d=n%10;
            if(d!=key)
                c++;
            n=n/10;
        }
        System.out.println(c);
    }
}

python implementation:
----------------------
n=int(input())
key=int(input())
c=0
while n!=0:
    d=n%10
    if d!=key:
        c=c+1
    n=n//10
print(c)

P088: DATA ENCODE
~~~~~~~~~~~~~~~~~
A company wishes to encode its data. The data is in the form of a number. They wish to encode the data with respect to a specific digit. They wish to count the number of times the specific digit reoccurs in the given data so that they can encode the data accordingly. Write an algorithm to find the count of the specific digit in the given data.

input ---------> data and digit
output --------> count of specific digit

Ex:
	1234, 1 ----> 1
	1234, 6 ----> 0

Logic:
		c=0;
		while(n!=0)
		{
			d=n%10;
			if(d==dd)
				c++;
			n=n/10;
		}
		print c;

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d,dd,c;
    scanf("%d %d",&n,&dd);
    c=0;
    while(n!=0)
    {
        d=n%10;
        if(d==dd)
            c++;
        n=n/10;
    }
    printf("%d",c);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),dd=obj.nextInt(),d,c=0;
        while(n!=0)
        {
            d=n%10;
            if(d==dd)
                c++;
            n=n/10;
        }
        System.out.println(c);
    }
}

python implementation:
----------------------
n=input()
dd=input()
print(n.count(dd))

P089: INCREMENT DIGITS BY ONE UNIT
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to increment all its digits by one unit

input -----> an integer value
output ----> updated number

Ex:

	2345 -----> 3456
	directly it is not possible

	1. reverse the data first
	2. then extract digits and add 1

	2345 ---> 5432 ----> 3456

Logic:
		n=rev(n)
		while(n!=0)
		{
			d=n%10;
			print d+1
			n=n/10;
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int rev(int n)
{
    int d,r=0;
    while(n!=0)
    {
        d=n%10;
        r=r*10+d;
        n=n/10;
    }
    return r;
}

int main() {
    int n,d;
    scanf("%d",&n);
    n=rev(n);
    while(n!=0)
    {
        d=n%10;
        printf("%d",d+1);
        n=n/10;
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int rev(int n)
    {
        int r=0,d;
        while(n!=0)
        {
            d=n%10;
            r=r*10+d;
            n=n/10;
        }
        return r;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),d;
        n=rev(n);
        while(n!=0)
        {
            d=n%10;
            System.out.print(d+1);
            n=n/10;
        }
    }
}


python implementation:
----------------------
n=input()
n=int(n[::-1])
while n!=0:
    d=n%10
    print(d+1,end='')
    n=n//10
    

P090: DECREMENT DIGITS BY ONE UNIT
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to decrement all its digits by one unit

input -----> an integer value
output ----> updated number


Ex:

	2345 -----> 1234
	directly it is not possible

	1. reverse the data first
	2. then extract digits and subtract 1

	2345 ---> 5432 ----> 1234

Logic:
		n=rev(n)
		while(n!=0)
		{
			d=n%10;
			print d-1
			n=n/10;
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int rev(int n)
{
    int d,r=0;
    while(n!=0)
    {
        d=n%10;
        r=r*10+d;
        n=n/10;
    }
    return r;
}

int main() {
    int n,d;
    scanf("%d",&n);
    n=rev(n);
    while(n!=0)
    {
        d=n%10;
        printf("%d",d-1);
        n=n/10;
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int rev(int n)
    {
        int r=0,d;
        while(n!=0)
        {
            d=n%10;
            r=r*10+d;
            n=n/10;
        }
        return r;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),d;
        n=rev(n);
        while(n!=0)
        {
            d=n%10;
            System.out.print(d-1);
            n=n/10;
        }
    }
}


python implementation:
----------------------
n=input()
n=int(n[::-1])
while n!=0:
    d=n%10
    print(d-1,end='')
    n=n//10
    

P091: PRINT NUMBERS IN WORDS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print the given number in words, for example if given number is 123 then excepted output is 'One Two Three'.

input ----> an integer value
output ---> print number in words

Ex:
	4512 ----> Four Five One Two

	4512 --> 2154, Four Five One Two

Logic:
		n=rev(n)
		while(n!=0)
		{
			d=n%10;
			if(d==0)
				print "Zero"
			else if(d==1)
				print "One"
			.
			.
			n=n/10;
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int rev(int n)
{
    int d,r=0;
    while(n!=0)
    {
        d=n%10;
        r=r*10+d;
        n=n/10;
    }
    return r;
}
int main() {
    int n,d;
    scanf("%d",&n);
    n=rev(n);
    while(n!=0)
    {
        d=n%10;
        if(d==0)
            printf("Zero ");
        else if(d==1)
            printf("One ");
        else if(d==2)
            printf("Two ");
        else if(d==3)
            printf("Three ");
        else if(d==4)
            printf("Four ");
        else if(d==5)
            printf("Five ");
        else if(d==6)
            printf("Six ");
        else if(d==7)
            printf("Seven ");
        else if(d==8)
            printf("Eight ");
        else if(d==9)
            printf("Nine ");
        else
        {}
        n=n/10;
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int rev(int n)
    {
        int r=0,d;
        while(n!=0)
        {
            d=n%10;
            r=r*10+d;
            n=n/10;
        }
        return r;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int d,n = obj.nextInt();
        n=rev(n);
        while(n!=0)
        {
            d=n%10;
            if(d==0)
                System.out.print("Zero ");
            else if(d==1)
                System.out.print("One ");
            else if(d==2)
                System.out.print("Two ");
            else if(d==3)
                System.out.print("Three ");
            else if(d==4)
                System.out.print("Four ");
            else if(d==5)
                System.out.print("Five ");
            else if(d==6)
                System.out.print("Six ");
            else if(d==7)
                System.out.print("Seven ");
            else if(d==8)
                System.out.print("Eight ");
            else if(d==9)
                System.out.print("Nine ");
            else{}
            n=n/10;
        }
    }
}

python implementation:
----------------------
n=input()
n=int(n[::-1])
L=["Zero","One","Two","Three","Four","Five","Six","Seven","Eight","Nine"]
while n!=0:
    d=n%10
    print(L[d],end=' ')
    n=n//10

n=123

d=1 , L[1] = One
d=2 , L[2] = Two
d=3 , L[3] = Three

One Two Three

P092: ARMSTRONG NUMBER OR NOT
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to check whether the given number is armstrong number or not, a number is said to armstrong if it is equal to the sum of cubes of its digits.

input ----> an integer value
output ---> true or false

n=151 ----> 1^3 + 5^3 + 1^3 = 1+125+1 = 127 --> false
n=153 ----> 1^3 + 5^3 + 3^3 = 1+125+27=153 ---> true

Logic:
		read 'n' value
		temp=n
		s=0
		while(n!=0)
		{
			d=n%10;
			s=s+d*d*d;
			n=n/10;
		}
		if temp==s then print 'true' else 'false'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,d,temp,s;
    scanf("%d",&n);
    temp=n;
    s=0;
    while(n!=0)
    {
        d=n%10;
        s=s+(d*d*d);
        n=n/10;
    }
    printf((s==temp)?"true":"false");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),s=0,temp=n,d;
        while(n!=0)
        {
            d=n%10;
            s=s+(d*d*d);
            n=n/10;
        }
        System.out.println(temp==s);
    }
}

python implementation:
----------------------
n=int(input())
temp=n
s=0
while n!=0:
    d=n%10
    s=s+(d*d*d)
    n=n//10
print('true' if s==temp else 'false')


P093: SUM OF ENTERED NUMBERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read numbers till the user wants and at the end print sum of numbers entered by the user, stop reading data if user enters '0'.

input -----> read numbers until user enter '0'
output ----> sum of entered numbers

Ex:
	1, 2, 3, 4, 0 ---> 1+2+3+4 = 10

Logic:
		s=0;
		do
		{
			read 'n' value
			s=s+n;
		}while(n!=0);
		print s

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,s=0;
    do
    {
        scanf("%d",&n);
        s=s+n;
    }while(n!=0);
    printf("%d",s);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n,s=0;
        do
        {
            n=obj.nextInt();
            s=s+n;
        }while(n!=0);
        System.out.println(s);
    }
}

python implementation:
----------------------
s=0
while True:
    n=int(input())
    s=s+n
    if n==0:
        break
print(s)

P094: COUNT +VE AND -VE VALUES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read numbers until user enters '0', and count number of +ve and -ve numbers and display.

input -----> read numbers until user enter '0'
output ----> count of +ve and -ve numbers

Ex:
	1,2,-3,-9,3,0 ----> 3, 2

Logic:
		c1=0;
		c2=0;
		do
		{
			read 'n' value
			if(n>0)
				c1++;
			if(n<0)
				c2++;
		}while(n!=0);
		print c1
		print c2

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int c1=0,c2=0,n;
    do
    {
        scanf("%d",&n);
        if(n>0)
            c1++;
        if(n<0)
            c2++;
    }while(n!=0);
    printf("%d\n%d",c1,c2);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n,c1=0,c2=0;
        do
        {
            n=obj.nextInt();
            if(n>0)
                c1++;
            if(n<0)
                c2++;
        }while(n!=0);
        System.out.println(c1);
        System.out.println(c2);
    }
}

python implementation:
----------------------
c1=0
c2=0
while True:
    n=int(input())
    if n>0:
        c1=c1+1
    if n<0:
        c2=c2+1
    if n==0:
        break
print(c1)
print(c2)


P095: AMOUNT PAID
~~~~~~~~~~~~~~~~~
Ananya purchased 'n' pencils and 'm' erasers at the cost of Rs. 7 and Rs.5 respectively. Write a program to calculate & display the total amount paid by ananya.

input -----> 'n' pencils and 'm' erasers
output ----> total amount paid

Ex:
	n=3, n=2
	cost = 3*7 + 2*5 = 21 + 10 = 31

Logic:
		print n*7 + m*5

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,m;
    scanf("%d %d",&n,&m);
    printf("%d",n*7+m*5);
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),m=obj.nextInt();
        System.out.println(n*7+m*5);
    }
}

python implemetation:
---------------------
n=int(input())
m=int(input())
print(n*7+m*5)

P096: SUM OF FIRST,LAST,SECOND,SECOND LAST AND SO ON
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of first, last digit and second,last second and so on.

input -----> an integer value
output ----> sum of first, last digits and second, last second digits and so on

Ex:
	1234 ---> 1+4=5+2+3=10
	123 ----> 1+3+2+2=8

Logic:
		read 'n1' value from the user
		n2=rev(n1);

		n1=1234
		n2=4321

		count=length of number
		count=4
		s=0;
		i=0;
		while(i<count/2)
		{
			s=s+n1%10+n2%10;
			n1=n1/10;
			n2=n2/10;
			i++;
		}
		print s

Another Logic:
--------------
		
		read a number in the form of string
		str

		low=0;
		high=strlen(str)-1;
		while(low<=high)
		{
			s=s+(int)str[low]+(int)str[high];
			low++;
			high--;
		}
		print s

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int low,high,sum;
    char s[100];
    scanf("%s",s);
    low=0;
    high=strlen(s)-1;
    sum=0;
    while(low<=high)
    {
        sum=sum+(s[low]-48)+(s[high]-48);
        low++;
        high--;
    }
    printf("%d",sum);
    return 0;
}

Note:
-----
'0'-->48
'1'-->49

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s = obj.nextLine();
        int sum=0,low=0,high=s.length()-1;
        while(low<=high)
        {
            sum=sum+(s.charAt(low)-48)+(s.charAt(high)-48);
            low++;
            high--;
        }
        System.out.println(sum);
    }
}

python implementation:
----------------------
s=input()
sum=0
low = 0
high = len(s)-1
while low<=high:
    sum=sum+int(s[low])+int(s[high])
    low=low+1
    high=high-1
print(sum)

P097: AVERAGE OF DIGITS
~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find average of digits.

input -----> an integer value
output ----> average value round off to integer

Ex:
	1234=10/4=2

Logic:
		print sum(n)/count(n)

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int count(int n)
{
    int c=0;
    while(n!=0)
    {
        c++;
        n=n/10;
    }
    return c;
}
int sum(int n)
{
    int s=0;
    while(n!=0)
    {
        s=s+n%10;
        n=n/10;
    }
    return s;
}
int main() {
    int n;
    scanf("%d",&n);
    printf("%d",sum(n)/count(n));
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int count(int n){
        int c=0;
        while(n!=0)
        {
            c++;
            n=n/10;
        }
        return c;
    }
    static int sum(int n)
    {
        int s=0;
        while(n!=0)
        {
            s=s+n%10;
            n=n/10;
        }
        return s;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        System.out.println(sum(n)/count(n));
    }
}

python implementation:
----------------------
L = [int(i) for i in input()]
print(sum(L)//len(L))


P098: EVEN LENGTH OR ODD LENGTH NUMBER
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to check whether the given number is even length number or odd length number, if it is even length number return 'true' else return 'false'.

input -----> an integer value
output ----> true or false

Ex:
	123 ----> false
	1234 ---> true

Logic:
		read a number
		if(count(n)%2==0)
			print true
		else
			print false

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int count(int n)
{
    int c=0;
    while(n!=0)
    {
        c++;
        n=n/10;
    }
    return c;
}
int main() {
    int n;
    scanf("%d",&n);
    printf((count(n)%2==0)?"true":"false");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int count(int n){
        int c=0;
        while(n!=0)
        {
            c++;
            n=n/10;
        }
        return c;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        System.out.println(count(n)%2==0);
    }
}

python implementation:
----------------------
L = [int(i) for i in input()]
print("true" if len(L)%2==0 else "false")

P099: SUM OF MIDDLE DIGIT(S)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of middle digit number(s).

input ----> an integer value
output ---> sum of middle digit

Ex:
	123 ----> 2+2=4
	1234 ---> 2+3=5

"1234"
 0123

4/2=2-1,2

"123"
 012

3/2=1= 1,1
Logic:
		read number in the form of string

		if(strlen(s)%2==0)
		{
			print (s[strlen(s)/2-1]-48)+(s[strlen(s)/2]-48)
		}
		else
		{
			print (s[strlen(s)/2]-48)+(s[strlen(s)/2]-48)
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char s[100];
    scanf("%s",s);
    if(strlen(s)%2==0)
    {
        printf("%d",(s[strlen(s)/2-1]-48)+(s[strlen(s)/2]-48));
    }
    else
    {
        printf("%d",(s[strlen(s)/2]-48)+(s[strlen(s)/2]-48));
    }
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s = obj.nextLine();
        if(s.length()%2==0)
        {
            System.out.println((s.charAt(s.length()/2-1)-48)+(s.charAt(s.length()/2)-48));
        }
        else
        {
            System.out.println((s.charAt(s.length()/2)-48)+(s.charAt(s.length()/2)-48));
        }
    }
}

python implementation:
----------------------
s=input()
if len(s)%2==0:
    print(int(s[len(s)//2-1])+int(s[len(s)//2]))
else:
    print(int(s[len(s)//2])+int(s[len(s)//2]))

P100: MULTIPLICATION OF MIDDLE DIGIT(S)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find multiplication of middle digit number(s).

input ----> an integer value
output ---> sum of middle digit

Ex:
	123 ----> 2*2=4
	1234 ---> 2*3=6

"1234"
 0123

4/2=2-1,2

"123"
 012

3/2=1= 1,1
Logic:
		read number in the form of string

		if(strlen(s)%2==0)
		{
			print (s[strlen(s)/2-1]-48)*(s[strlen(s)/2]-48)
		}
		else
		{
			print (s[strlen(s)/2]-48)*(s[strlen(s)/2]-48)
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char s[100];
    scanf("%s",s);
    if(strlen(s)%2==0)
    {
        printf("%d",(s[strlen(s)/2-1]-48)*(s[strlen(s)/2]-48));
    }
    else
    {
        printf("%d",(s[strlen(s)/2]-48)*(s[strlen(s)/2]-48));
    }
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s = obj.nextLine();
        if(s.length()%2==0)
        {
            System.out.println((s.charAt(s.length()/2-1)-48)*(s.charAt(s.length()/2)-48));
        }
        else
        {
            System.out.println((s.charAt(s.length()/2)-48)*(s.charAt(s.length()/2)-48));
        }
    }
}

python implementation:
----------------------
s=input()
if len(s)%2==0:
    print(int(s[len(s)//2-1])*int(s[len(s)//2]))
else:
    print(int(s[len(s)//2])*int(s[len(s)//2]))



C/C++/Java:
-----------
for(Intialization; Condition; Update)
{
	---------------
	---------------
	---------------
}

Python:
-------
we dn't have for loop in python, but we can overcome this by using two concepts

1) for each loop
2) range()

for i in seq:
    -------------
    -------------

seq ----> range, str, list, tuple, etc

range(a)   ----> 0 to a-1 [excluding a value]
range(a,b)   --> a to b-1 [including a value and excluding b value]
range(a,b,c) --> a to b-1 with step c[including a value and excluding b value]

Note: in python always sencond args is exclusive

range(5) ---------> 0, 1, 2, 3, 4
range(0,5) -------> 0, 1, 2, 3, 4
range(3,5) -------> 3, 4
range(0,5,1) -----> 0, 1, 2, 3, 4
range(0,5,2) -----> 0, 2, 4
range(0,5,3) -----> 0, 3 

P0101: N NATURAL NUMBERS
~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print first 'n' natural numbers.

input ----> an integer value
output ---> 'n' natural numbers

Ex:
	5 ----> 1, 2, 3, 4, 5

Logic:
		for(i=1;i<=n;i++) ---> 1,2,3,4,5,6,...n
		range(1,n+1) ----------> 1,2,3,4,5,6,...n

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n;
    scanf("%d",&n);
    for(i=1;i<=n;i++)
        printf("%d ",i);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,n=obj.nextInt();
        for(i=1;i<=n;i++)
            System.out.print(i+" ");
    }
}

python implementation:
----------------------
n=int(input())
for i in range(1,n+1):
    print(i,end=' ')

P0102: N EVEN NUMBERS
~~~~~~~~~~~~~~~~~~~~~
Implement a program to print first 'n' even numbers.

input ----> an integer value
output ---> 'n' even numbers

Ex:
	5 ----> 0, 2, 4

Logic:
		for(i=0;i<=n;i=i+2) ---> 0,2,4,6,8,10,...n
		range(0,n+1,2) --------> 0,2,4,6,8,10,...n

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n;
    scanf("%d",&n);
    for(i=0;i<=n;i=i+2)
        printf("%d ",i);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,n=obj.nextInt();
        for(i=0;i<=n;i+=2)
            System.out.print(i+" ");
    }
}

python implementation:
----------------------
n=int(input())
for i in range(0,n+1,2):
    print(i,end=' ')

P0103: N ODD NUMBERS
~~~~~~~~~~~~~~~~~~~~
Implement a program to print first 'n' odd numbers.

input ----> an integer value
output ---> 'n' odd numbers

Ex:
	5 ----> 1, 3, 5

Logic:
		for(i=1;i<=n;i=i+2) ---> 1,3,5,7,9,11,...n
		range(1,n+1,2) --------> 1,3,5,7,9,11,...n

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n;
    scanf("%d",&n);
    for(i=1;i<=n;i=i+2)
        printf("%d ",i);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,n=obj.nextInt();
        for(i=1;i<=n;i+=2)
            System.out.print(i+" ");
    }
}

python implementation:
----------------------
n=int(input())
for i in range(1,n+1,2):
    print(i,end=' ')

P0104: N NATURAL NUMBERS IN REVERSE
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print first 'n' natural numbers in reverse order.

input ----> an integer value
output ---> 'n' natural numbers in reverse order

Ex:
	5 ----> 5, 4, 3, 2, 1, 0

Logic:
		for(i=n;i>=0;i--) ---> n,n-1,n-2,....3,2,1,0
		range(n,0-1,-1) ----------> n,n-1,n-2,....3,2,1,0

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n;
    scanf("%d",&n);
    for(i=n;i>=0;i--)
        printf("%d ",i);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,n=obj.nextInt();
        for(i=n;i>=0;i--)
            System.out.print(i+" ");
    }
}

python implementation:
----------------------
n=int(input())
for i in range(n,0-1,-1):
    print(i,end=' ')

P105: NUMBER FOLLOWED BY ITS SQUARE
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print the sequence 'number' followed by its 'square' upto n

input ----> an integer value
output ---> number followed by square

Ex:
   n=3
   1 1 2 4 3 9
   n=5
   1 1 2 4 3 6 4 16 5 25

Logic:
		for(i=1;i<=n;i++)
		{
			print i,i*i
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n;
    scanf("%d",&n);
    for(i=1;i<=n;i++)
    {
        printf("%d %d ",i,i*i);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i;
        for(i=1;i<=n;i++)
        {
            System.out.print(i+" "+(i*i)+" ");
        }
    }
}

python implementation:
----------------------
n=int(input())
for i in range(1,n+1):
    print(i,i*i,end=' ')

P106: NUMBER FOLLOWED BY ITS CUBE
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print the sequence 'number' followed by its 'cube' upto n

input ----> an integer value
output ---> number followed by cube

Ex:
   n=3
   1 1 2 8 3 27
   n=5
   1 1 2 8 3 27 4 64 5 125

Logic:
		for(i=1;i<=n;i++)
		{
			print i,i*i*i
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n;
    scanf("%d",&n);
    for(i=1;i<=n;i++)
    {
        printf("%d %d ",i,i*i*i);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i;
        for(i=1;i<=n;i++)
        {
            System.out.print(i+" "+(i*i*i)+" ");
        }
    }
}

python implementation:
----------------------
n=int(input())
for i in range(1,n+1):
    print(i,i*i*i,end=' ')

P107: PRINT THE SEQUENCE 1,4,7,10,13,.....
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print the sequence 1,4,7,10,13,.....

input ----> an integer value
output ---> sequence upto n

Ex:
	n=4 ---> 1 4 7 10 
	n=5 ---> 1 4 7 10 13

Logic:
		for(i=1;i<=n;i++)
		{
			print i+3
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n,j;
    scanf("%d",&n);
    j=1;
    for(i=1;i<=n;i++)
    {
        printf("%d ",j);
        j=j+3;
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,j;
        j=1;
        for(i=1;i<=n;i++)
        {
            System.out.print(j+" ");
            j=j+3;
        }
    }
}

python implementation:
----------------------
n=int(input())
j=1
for i in range(1,n+1):
    print(j,end=' ')
    j=j+3

P108: PRINT THE SEQUENCE 1,5,9,13,17,.....
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print the sequence 1,5,9,13,17,.....

input ----> an integer value
output ---> sequence upto n

Ex:
	n=4 ---> 1 5 9 13 
	n=5 ---> 1 5 9 13 17

Logic:
		j=1
		for(i=1;i<=n;i++)
		{
			print j+4
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n,j;
    scanf("%d",&n);
    j=1;
    for(i=1;i<=n;i++)
    {
        printf("%d ",j);
        j=j+4;
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,j;
        j=1;
        for(i=1;i<=n;i++)
        {
            System.out.print(j+" ");
            j=j+4;
        }
    }
}

python implementation:
----------------------
n=int(input())
j=1
for i in range(1,n+1):
    print(j,end=' ')
    j=j+4

P109: PRINT THE SEQUENCE 10,20,30,40,.....
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print the sequence 10,20,30,40,.....

input ----> an integer value
output ---> sequence upto n

Ex:
	n=4 ---> 10 20 30 40
	n=5 ---> 10 20 30 40 50

Logic:
		j=10
		for(i=1;i<=n;i++)
		{
			print j+10
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n,j;
    scanf("%d",&n);
    j=10;
    for(i=1;i<=n;i++)
    {
        printf("%d ",j);
        j=j+10;
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,j;
        j=10;
        for(i=1;i<=n;i++)
        {
            System.out.print(j+" ");
            j=j+10;
        }
    }
}

python implementation:
----------------------
n=int(input())
j=10
for i in range(1,n+1):
    print(j,end=' ')
    j=j+10

P110: PRINT THE SEQUENCE 7, 14, 21, 28,....
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print the sequence 7, 14, 21, 28,.....

input ----> an integer value
output ---> sequence upto n

Ex:
	n=4 ---> 7 14 21 28
	n=5 ---> 7 14 21 28 35

Logic:
		j=7
		for(i=1;i<=n;i++)
		{
			print j+7
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n,j;
    scanf("%d",&n);
    j=7;
    for(i=1;i<=n;i++)
    {
        printf("%d ",j);
        j=j+7;
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,j;
        j=7;
        for(i=1;i<=n;i++)
        {
            System.out.print(j+" ");
            j=j+7;
        }
    }
}

python implementation:
----------------------
n=int(input())
j=7
for i in range(1,n+1):
    print(j,end=' ')
    j=j+7

P111: SUM OF 'N' NATURAL NUMBERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of n natural numbers.

input -----> an integer value 
output ----> sum of natural numbers

Ex:
	n=5 ---> 0+1+2+3+4+5=15
	n=3 ---> 0+1+2+3=6

Logic:
		sum=0;
		for(i=0;i<=n;i++)
		{
			sum=sum+i;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n,sum=0;
    scanf("%d",&n);
    for(i=0;i<=n;i++)
    {
        sum=sum+i;
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),sum=0,i;
        for(i=0;i<=n;i++)
        {
            sum=sum+i;
        }
        System.out.println(sum);
    }
}

python implementation:
----------------------
n=int(input())
sum=0
for i in range(0,n+1):
    sum=sum+i
print(sum)


P112: SUM OF 'N' EVEN NUMBERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of n even numbers.

input -----> an integer value 
output ----> sum of even numbers

Ex:
	n=5 ---> 0+2+4=6
	n=3 ---> 0+2=2

Logic:
		sum=0;
		for(i=0;i<=n;i=i+2)
		{
			sum=sum+i;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,sum=0,i;
    scanf("%d",&n);
    for(i=0;i<=n;i=i+2)
    {
        sum=sum+i;
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,sum=0;
        for(i=0;i<=n;i=i+2)
        {
            sum=sum+i;
        }
        System.out.println(sum);
    }
}

python implementation:
----------------------
n=int(input())
sum=0
for i in range(0,n+1,2):
    sum=sum+i
print(sum)

P113: SUM OF 'N' ODD NUMBERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of n odd numbers.

input -----> an integer value 
output ----> sum of odd numbers

Ex:
	n=5 ---> 1+3+5=9
	n=3 ---> 1+3=4

Logic:
		sum=0;
		for(i=1;i<=n;i=i+2)
		{
			sum=sum+i;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,sum=0,i;
    scanf("%d",&n);
    for(i=1;i<=n;i=i+2)
    {
        sum=sum+i;
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,sum=0;
        for(i=1;i<=n;i=i+2)
        {
            sum=sum+i;
        }
        System.out.println(sum);
    }
}

python implementation:
----------------------
n=int(input())
sum=0
for i in range(1,n+1,2):
    sum=sum+i
print(sum)

P114: SUM OF NUMBERS DIVISIBLE BY 3
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of n numbers which are divisible by 3.

input -----> an integer value 
output ----> sum of numbers divisible by 3

Ex:
	n=10 ---> 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ---> 3+6+9=18

Logic:
		sum=0
		for(i=0;i<=n;i++)
		{
			if(i%3==0)
				sum=sum+i;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n,sum=0;
    scanf("%d",&n);
    for(i=0;i<=n;i++)
    {
        if(i%3==0)
            sum=sum+i;
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,sum=0;
        for(i=0;i<=n;i++)
        {
            if(i%3==0)
                sum=sum+i;
        }
        System.out.println(sum);
    }
}

python implementation:
----------------------
n=int(input())
sum=0
for i in range(0,n+1):
    if i%3==0:
        sum=sum+i
print(sum)

P115: SUM OF NUMBERS DIVISIBLE BY 5
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of n numbers which are divisible by 5.

input -----> an integer value 
output ----> sum of numbers divisible by 5

Ex:
	n=10 ---> 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ---> 0+5+10=15

Logic:
		sum=0
		for(i=0;i<=n;i++)
		{
			if(i%5==0)
				sum=sum+i;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n,sum=0;
    scanf("%d",&n);
    for(i=0;i<=n;i++)
    {
        if(i%5==0)
            sum=sum+i;
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,sum=0;
        for(i=0;i<=n;i++)
        {
            if(i%5==0)
                sum=sum+i;
        }
        System.out.println(sum);
    }
}

python implementation:
----------------------
n=int(input())
sum=0
for i in range(0,n+1):
    if i%5==0:
        sum=sum+i
print(sum)

P116: SUM OF NUMBERS DIVISIBLE BY BOTH 2 AND 3
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of n numbers which are divisible by 2 and 3.

input -----> an integer value 
output ----> sum of numbers divisible by 2 and 3

Ex:
	n=15 ---> 6+12=18

Logic:
		sum=0
		for(i=0;i<=n;i++)
		{
			if(i%2==0 && i%3==0)
				sum=sum+i;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n,sum=0;
    scanf("%d",&n);
    for(i=0;i<=n;i++)
    {
        if(i%2==0 && i%3==0)
            sum=sum+i;
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,sum;
        sum=0;
        for(i=0;i<=n;i++)
        {
            if(i%2==0 && i%3==0)
                sum=sum+i;
        }
        System.out.println(sum);
    }
}

python implementation:
----------------------
n=int(input())
sum=0
for i in range(0,n+1):
    if i%2==0 and i%3==0:
        sum=sum+i
print(sum)

P117: PRINT ALL THE EVEN NUMBERS BETWEEN THE INTERVALS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print all even numbers between n1 and n2

input -----> two integer values n1 and n2
output ----> list of integers

Ex:
	10, 20 ----> 10, 12, 14, 16, 18, 20

Logic:
		for(i=n1;i<=n2;i++)
		{
			if(i%2==0)
				print i
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n1,n2;
    scanf("%d %d",&n1,&n2);
    for(i=n1;i<=n2;i++)
    {
        if(i%2==0)
            printf("%d ",i);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n1=obj.nextInt(),n2=obj.nextInt(),i;
        for(i=n1;i<=n2;i++)
        {
            if(i%2==0)
                System.out.print(i+" ");
        }
    }
}

python implementation:
----------------------
n1=int(input())
n2=int(input())
for i in range(n1,n2+1):
    if i%2==0:
        print(i,end=' ')

P118: PRINT ALL THE ODD NUMBERS BETWEEN THE INTERVALS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print all odd numbers between n1 and n2

input -----> two integer values n1 and n2
output ----> list of integers

Ex:
	10, 20 ----> 11, 13, 15, 17, 19

Logic:
		for(i=n1;i<=n2;i++)
		{
			if(i%2!=0)
				print i
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n1,n2;
    scanf("%d %d",&n1,&n2);
    for(i=n1;i<=n2;i++)
    {
        if(i%2!=0)
            printf("%d ",i);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n1=obj.nextInt(),n2=obj.nextInt(),i;
        for(i=n1;i<=n2;i++)
        {
            if(i%2!=0)
                System.out.print(i+" ");
        }
    }
}

python implementation:
----------------------
n1=int(input())
n2=int(input())
for i in range(n1,n2+1):
    if i%2!=0:
        print(i,end=' ')

P119: PRINT ALL THE FACTORS OF THE GIVEN NUMBER
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print all factors of the given number.

input -----> an integer value
output ----> list of values

Ex:
	5 ----> 1, 5
	6 ----> 1, 2, 3, 6
	10 ---> 1, 2, 5, 10

Logic:
		for(i=1;i<=n;i++)
		{
			if(n%i==0)
				print i
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n;
    scanf("%d",&n);
    for(i=1;i<=n;i++)
    {
        if(n%i==0)
            printf("%d ",i);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,n=obj.nextInt();
        for(i=1;i<=n;i++)
        {
            if(n%i==0)
                System.out.print(i+" ");
        }
    }
}

python implementation:
----------------------
n=int(input())
for i in range(1,n+1):
    if n%i==0:
        print(i,end=' ')

P120: PRIME NUMBER OR NOT
~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to check whether the given number is prime or not.

input -----> an integer value
output ----> true or false

Ex:
	5 -----> true
	6 -----> false
	7 -----> true

Logic:
		factors=0;
		for(i=1;i<=n;i++)
		{
			if(n%i==0)
				factors++;
		}
		if factors==2 then print 'true' else 'false'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,i,f;
    scanf("%d",&n);
    f=0;
    for(i=1;i<=n;i++)
    {
        if(n%i==0)
            f++;
    }
    printf((f==2)?"true":"false");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,f=0;
        for(i=1;i<=n;i++)
        {
            if(n%i==0)
                f++;
        }
        System.out.println(f==2);
    }
}

python implementation:
----------------------
n=int(input())
f=0
for i in range(1,n+1):
    if n%i==0:
        f=f+1
print('true' if f==2 else 'false')

P121: FACTORIAL OF THE NUMBER
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find factorial of the given number.

input ------> an integer value from the user
output -----> factorial value

Ex:
	5! -----> 5x4x3x2x1=120

Logic:
		factorial = 1
		for(i=1;i<=n;i++)
		{
			factorial = factorial * i;
		}
		print factorial

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n,f;
    scanf("%d",&n);
    f=1;
    for(i=1;i<=n;i++)
        f=f*i;
    printf("%d",f);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,f=1;
        for(i=1;i<=n;i++)
            f=f*i;
        System.out.println(f);
    }
}

python implementation:
----------------------
import math
print(math.factorial(int(input())))

P122: FIBONACCI SEQUENCE
~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to generate fibonacci sequence upto given number

input ------> an integer value
output -----> fib seq upto n

Ex:
	0 1 1 2 3 5 8 .....
	n=1 ---> 0
	n=2 ---> 0 1 
	n=3 ---> 0 1 1
	n=4 ---> 0 1 1 2

Logic:
	
		a=-1
		b=1
		for(i=1;i<=n;i++){
			c=a+b;
			a=b;
			b=c;
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b,c,i,n;
    scanf("%d",&n);
    a=-1;
    b=1;
    for(i=1;i<=n;i++)
    {
        c=a+b;
        printf("%d ",c);
        a=b;
        b=c;
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a=-1,b=1,c,n=obj.nextInt(),i;
        for(i=1;i<=n;i++)
        {
            c=a+b;
            System.out.print(c+" ");
            a=b;
            b=c;
        }
    }
}

python implementation:
----------------------
a=-1
b=1
n=int(input())
for i in range(1,n+1):
    c=a+b
    print(c,end=' ')
    a=b
    b=c


P123: TRIBONACCI SEQUENCE
~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to generate tribanocci sequence upto given number

input ------> an integer value
output -----> trib seq upto n

Ex:
	0 1 2 3 6 11 20 .....

Logic:
		a=-1
		b=0
		c=1
		for(i=1;i<=n;i++)
		{
			d=a+b+c;
			print d
			a=b;
			b=c;
			c=d;
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b,c,d,i,n;
    scanf("%d",&n);
    a=-1;
    b=0;
    c=1;
    for(i=1;i<=n;i++)
    {
        d=a+b+c;
        printf("%d ",d);
        a=b;
        b=c;
        c=d;
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a=-1,b=0,c=1,d,n=obj.nextInt(),i;
        for(i=1;i<=n;i++)
        {
            d=a+b+c;
            System.out.print(d+" ");
            a=b;
            b=c;
            c=d;
        }
    }
}

python implementation:
----------------------
a=-1
b=0
c=1
n=int(input())
for i in range(1,n+1):
    d=a+b+c
    print(d,end=' ')
    a=b
    b=c
    c=d

P124: STRONG NUMBER OR NOT
~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to check whether the given number is strong number or not.

input ------> an integer value
output -----> true or false

Ex:
	145=1!+4!+5!=1+24+120=145 --> yes
	125=1!+2!+5!=1+2+120=123 ---> no

Logic:
		temp=n;
		while(n!=0)
		{
			d=n%10;
			sum=sum+fact(d);
			n=n/10;
		}
		if temp==sum then 'true' else 'false'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int fact(int n)
{
    int f=1,i;
    for(i=1;i<=n;i++)
        f=f*i;
    return f;
}

int main() {
    int n,temp,d,s=0;
    scanf("%d",&n);
    temp=n;
    while(n!=0)
    {
        d=n%10;
        s=s+fact(d);
        n=n/10;
    }
    printf((s==temp)?"true":"false");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int fact(int n)
    {
        int f=1,i;
        for(i=1;i<=n;i++)
            f=f*i;
        return f;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),d,s=0,temp;
        temp=n;
        while(n!=0)
        {
            d=n%10;
            s=s+fact(d);
            n=n/10;
        }
        System.out.println(s==temp);
    }
}

python implementation:
----------------------
import math
n=int(input())
temp=n
s=0
while n!=0:
    d=n%10
    s=s+math.factorial(d)
    n=n//10
print('true' if s==temp else 'false')


P125: LIST OF PRIME NUMBER BETWEEN THE GIVEN INTERVALS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to generate list of prime numbers between two intervals.

input -----> two integer values
output ----> list of prime numbers

Ex:
---
	n1=10 and n2=20 ----> 11, 13, 17, 19

Logic:
------
		for(i=n1;i<=n2;i++)
		{
			if(isprime(i)){
				print i
			}
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int isprime(int n)
{
    int i,f=0;
    for(i=1;i<=n;i++)
    {
        if(n%i==0)
            f++;
    }
    return f==2;
}

int main() {
    int n1,n2,i;
    scanf("%d %d",&n1,&n2);
    for(i=n1;i<=n2;i++)
    {
        if(isprime(i))
            printf("%d ",i);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static boolean isprime(int n)
    {
        int i,f=0;
        for(i=1;i<=n;i++)
        {
            if(n%i==0)
                f++;
        }
        return f==2;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n1=obj.nextInt(),n2=obj.nextInt(),i;
        for(i=n1;i<=n2;i++){
            if(isprime(i))
                System.out.print(i+" ");
        }
    }
}

python implementation:
----------------------
def isprime(n):
    f=0
    for i in range(1,n+1):
        if n%i==0:
            f=f+1
    return f==2

n1=int(input())
n2=int(input())
for i in range(n1,n2+1):
    if isprime(i):
        print(i,end=' ')

P126: LUCKY CUSTOMER
~~~~~~~~~~~~~~~~~~~~
An e-commerce website wishes to find the lucky customer who will be eligible for full value cash back. For this purpose,a number N is fed to the system. It will return another number that is calculated by an algorithm. In the algorithm, a sequence is generated, in which each number n the sum of the preceding number. initially the sequence will have two 1's in it. The System will return the Nth number from the generated sequence which is treated as the order ID. The lucky customer will be one who has placed that order. Write an alorithm to help the website find the lucky customer.

input --------> an integer value
output -------> a new number


Ex:
	x 1 1 2 3 5 8 13 21 34
	0 1 2 3 4 5 6 7  8  9

Logic:
------
		int fib(int n)
		{
			if(n==0||n==1)
				return n;
			else
				return fib(n-1)+fib(n-2);
		}

n=4 ----> fib(4)=fib(3)+fib(2)
                =fib(2)+fib(1)+fib(1)+fib(0)
                =fib(1)+fib(0)+fib(1)+fib(1)+fib(0)
                =1+0+1+1+0=3

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int fib(int n)
{
    if(n==0||n==1)
        return n;
    else
        return fib(n-1)+fib(n-2);
}
int main() {
    int n;
    scanf("%d",&n);
    printf("%d",fib(n));
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int fib(int n)
    {
        if(n==0||n==1)
            return n;
        else
            return fib(n-1)+fib(n-2);
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        System.out.println(fib(n));
    }
}

python implementation:
----------------------
def fib(n):
    if n==0 or n==1:
        return n
    else:
        return fib(n-1)+fib(n-2)

n=int(input())
print(fib(n))


P127: CLIMBING STAIR
~~~~~~~~~~~~~~~~~~~~
You are climbing a stair case. It takes n steps to reach to the top.Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

Note: Given n will be a positive integer.

input --------> a number from the user
output -------> number of ways

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int fib(int n)
{
    if(n==2||n==1)
        return n;
    else
        return fib(n-1)+fib(n-2);
}
int main() {
    int n;
    scanf("%d",&n);
    printf("%d",fib(n));
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int fib(int n)
    {
        if(n==2||n==1)
            return n;
        else
            return fib(n-1)+fib(n-2);
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        System.out.println(fib(n));
    }
}

python implementation:
----------------------
def fib(n):
    if n==2 or n==1:
        return n
    else:
        return fib(n-1)+fib(n-2)

n=int(input())
print(fib(n))


P128: PIN
~~~~~~~~~
"Secure Assets Private Ltd", a small company that deals with lockers has recently started manufacturing digital locks which can be locked and unlocked using PINs (passwords). You have been asked to work on the module that is expected to generate PINs using three input numbers. The three given input numbers will always consist of three digits each  i.e. each of them will be in the range >=100 and <=999.

Bellow are the rules for generating the PIN.

1. The PIN should made up of 4 digits.
2. The unit (ones) position of the PIN should be the least of the units position of the three numbers.
3. The tens position of the PIN should be the least of the tens position of the three input numbers.
4. The hundreds position of the PIN should be least of the hundreds position of the three numbers.
5. The thousands position of the PIN should be the max of all digits in the three input numbers.

input ----------> three numbers
output ---------> PIN value

C Implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int min(int a,int b,int c){
    return (a<b && a<c)?a:(b<c?b:c);
}

int max(int a,int b,int c){
    return (a>b && a>c)?a:(b>c?b:c);
}

int maxD(int n){
    int d,m=0;
    while(n!=0)
    {
        d=n%10;
        if(m<d)
            m=d;
        n=n/10;
    }
    return m;
}
int main() {
    int n1,n2,n3,d1,d2,d3,d4;
    scanf("%d %d %d",&n1,&n2,&n3);
    d1=min(n1%10,n2%10,n3%10);
    d2=min((n1/10)%10,(n2/10)%10,(n3/10)%10);
    d3=min((n1/100)%10,(n2/100)%10,(n3/100)%10);
    d4=max(maxD(n1),maxD(n2),maxD(n3));
    printf("%d",d4*1000+d3*100+d2*10+d1*1);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int maxD(int n){
        int m=0,d;
        while(n!=0)
        {
            d=n%10;
            if(m<d)
                m=d;
            n=n/10;
        }
        return m;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n1=obj.nextInt(),n2=obj.nextInt(),n3=obj.nextInt(),d1,d2,d3,d4;
        d1=Math.min(Math.min(n1%10,n2%10),n3%10);
        d2=Math.min(Math.min((n1/10)%10,(n2/10)%10),(n3/10)%10);
        d3=Math.min(Math.min((n1/100)%10,(n2/100)%10),(n3/100)%10);
        d4=Math.max(Math.max(maxD(n1),maxD(n2)),maxD(n3));
        System.out.println(d4*1000+d3*100+d2*10+d1*1);
    }
}

python implementation:
----------------------
def maxD(n):
    m=0
    while n!=0:
        d=n%10
        if m<d:
            m=d
        n=n//10
    return m

n1=int(input())
n2=int(input())
n3=int(input())
d1=min(n1%10,n2%10,n3%10)
d2=min((n1//10)%10,(n2//10)%10,(n3//10)%10)
d3=min((n1//100)%10,(n2//100)%10,(n3//100)%10)
d4=max(maxD(n1),maxD(n2),maxD(n3))
print(d4*1000+d3*100+d2*10+d1)

P129: PRIME NUMBER APPLICATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Jackson, a math student, is developing an application on prime numbers. For the given two integers on the display of the application, the user has to identify all the prime numbers within the given range (including the given values). Afterwards the application will sum all those prime numbers. Jackson has to write an algorithm to find the sum of all the prime numbers of the given range.
Write an algorithm to find the sum of all the prime numbers of the given range.

input --------> two space seperated integers
output -------> sum of all prime numbers between given numbers

Ex:
	n1=10 and n2=20 ---> 11, 13, 17, 19 ---> 11+13+17+19=60

Logic:
		sum=0;
		for(i=n1;i<=n2;i++)
		{
			if(isprime(i)){
				sum=sum+i;
			}
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int isprime(int n)
{
    int f=0,i;
    for(i=1;i<=n;i++)
    {
        if(n%i==0)
            f++;
    }
    return f==2;
}
int main() {
    int n1,n2,i,sum;
    scanf("%d %d",&n1,&n2);
    sum=0;
    for(i=n1;i<=n2;i++)
    {
        if(isprime(i))
            sum=sum+i;
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static boolean isprime(int n)
    {
        int f=0,i;
        for(i=1;i<=n;i++){
            if(n%i==0)
                f++;
        }
        return f==2;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n1=obj.nextInt(),n2=obj.nextInt(),i,sum=0;
        for(i=n1;i<=n2;i++)
        {
            if(isprime(i))
            {
                sum=sum+i;
            }
        }
        System.out.println(sum);
    }
}

python implementation:
----------------------
def isprime(n):
    f=0
    for i in range(1,n+1):
        if n%i==0:
            f=f+1
    return f==2

n1=int(input())
n2=int(input())
sum=0
for i in range(n1,n2+1):
    if isprime(i):
        sum=sum+i
print(sum)

P130: PERFECT NUMBER
~~~~~~~~~~~~~~~~~~~~
Create a function that tests whether or not an integer is a perfect number. A perfect number is a number that can be written as sum of its factors. (equal to sum of its proper divisors) excluding the number itself.

input ------> a number from the user
output -----> true or false

Ex:
	4 ----> 1, 2 ----> 1+2=3 false
	6 ----> 1,2,3 ---> 1+2+3=6 true

Logic:
		sum=0;
		for(i=1;i<n;i++)
		{
			if(n%i==0)
				sum=sum+i;
		}
		if n==sum then 'true' else 'false'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,i,sum;
    scanf("%d",&n);
    sum=0;
    for(i=1;i<n;i++)
    {
        if(n%i==0)
            sum=sum+i;
    }
    printf((n==sum)?"true":"false");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,sum=0;
        for(i=1;i<n;i++)
        {
            if(n%i==0)
                sum=sum+i;
        }
        System.out.println(sum==n);
    }
}

python implementation:
----------------------
n=int(input())
sum=0
for i in range(1,n):
    if n%i==0:
        sum=sum+i
print('true' if n==sum else 'false')

P131: SUM OF DIGITS
~~~~~~~~~~~~~~~~~~~~
Create a function that sums the total number of digits between two numbers inclusive. 
for example, if the numbers are 19 and 22, then (1+9)+(2+0)+(2+1)+(2+2)=19.

input ----------> a number from the user
output ---------> sum of digits

Ex:
	n1=19,n2=22 
	19,20,21,22 ---> 1+9+2+0+2+1+2+2=19

Logic:
		sum=0;
		for(i=n1;i<=n2;i++)
		{	
			sum=sum+sumofd(i);
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int sumofd(int n)
{
    int s=0,d;
    while(n!=0)
    {
        d=n%10;
        s=s+d;
        n=n/10;
    }
    return s;
}

int main() {
    int n1,n2,s=0,i;
    scanf("%d %d",&n1,&n2);
    for(i=n1;i<=n2;i++)
    {
        s=s+sumofd(i);
    }
    printf("%d",s);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int sumofd(int n)
    {
        int s=0,d;
        while(n!=0)
        {
            d=n%10;
            s=s+d;
            n=n/10;
        }
        return s;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n1=obj.nextInt(),n2=obj.nextInt(),i,s=0;
        for(i=n1;i<=n2;i++)
        {
            s=s+sumofd(i);
        }
        System.out.println(s);
    }
}

python implementation:
----------------------
def sumofd(n):
    s=0
    while n!=0:
        d=n%10
        s=s+d
        n=n//10
    return s

n1=int(input())
n2=int(input())
s=0
for i in range(n1,n2+1):
    s=s+sumofd(i)
print(s)

P132: PARITY BITS
~~~~~~~~~~~~~~~~~
Michael wants to check the parity of the given number. To find tha parity, follow below steps.

1. convert decimal number into binary number.
2. count the number of 1's and 0's in the binary representation.

if it contains odd number of 1-bits, then it is "odd parity" and if contains even number of 1-bits then "even parity" 
Write a program to validate the given number belongs to odd parity or even parity.

input -------> a number from the user.
output ------> odd parity or even parity.

Ex:
	n=5-->0101--->2 even
	n=6-->0110--->2 even
	n=7-->0111 -->3 odd

Logic:
		c=0;
		while(n!=0)
		{
			if(n%2==1)
				c++;
			n=n/2;			
		}
		if c%2==0 then even else odd

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,c=0;
    scanf("%d",&n);
    while(n!=0)
    {
        if(n%2==1)
            c++;
        n=n/2;
    }
    printf((c%2==0)?"even":"odd");
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),c=0;
        while(n!=0)
        {
            if(n%2==1)
                c++;
            n=n/2;
        }
        System.out.println((c%2==0?"even":"odd"));
    }
}

python implementation:
----------------------
n=int(input())
s=bin(n)
print("even" if s.count('1')%2==0 else 'odd')


P133: FUN GAMES
~~~~~~~~~~~~~~~
The games development company "FunGames" has developed a ballon shooter games. The ballons are arranged in a linear sequence and each ballon has a number associated with it. The numbers on the ballons are fibonacci series. In the game the player shoots 'k' ballons. The player's score is the sum of numbers on k ballons.

Write an algorithm to generate the player's score.

input ----> an integer vlaue n
output ---> sum value

Ex:
	n=5 ----> 0+1+1+2+3=7

Logic:
		a=-1;
		b=+1;
		for(i=1;i<=n;i++)
		{
			c=a+b;
			s=s+c;
			a=b;
			b=a;
		}
		print s

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a,b,c,s=0,n,i;
    scanf("%d",&n);
    a=-1;
    b=1;
    for(i=1;i<=n;i++)
    {
        c=a+b;
        s=s+c;
        a=b;
        b=c;
    }
    printf("%d",s);
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,s=0,a,b,c;
        a=-1;
        b=1;
        for(i=1;i<=n;i++)
        {
            c=a+b;
            s=s+c;
            a=b;
            b=c;
        }
        System.out.println(s);
    }
}

python implementation:
----------------------
n=int(input())
a=-1
b=1
s=0
for i in range(1,n+1):
    c=a+b
    s=s+c
    a=b
    b=c
print(s)

P134: FACTORIAL GAME
~~~~~~~~~~~~~~~~~~~~
Mikes likes to play with numbers. His friends are also good with numbers and often plays mathematical games. they made a small game where they will spell the last digit of a factorial of a number other than 0.

Let say the given number is 5, so 5! will be 120, Here 0 is the last digit. But we dn't want 0, we want a number other than 0. Then last digit is 2.

input ----> an integer value
output ---> an integer vlaue

Ex:
	4--->24--->4
	5--->120-->2

Logic:
		f=1;
		for(i=1;i<=n;i++)
			f=f*i;
		if(f%10!=0)
			print f%10
		if(f%10==0)
			print (f/10)%10

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,i,f=1;
    scanf("%d",&n);
    for(i=1;i<=n;i++)
        f=f*i;
    if(f%10!=0)
        printf("%d",f%10);
    else
        printf("%d",(f/10)%10);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),f=1,i;
        for(i=1;i<=n;i++)
            f=f*i;
        if(f%10!=0)
            System.out.println(f%10);
        else
            System.out.println((f/10)%10);
    }
}

python implementation:
----------------------
import math
n=int(input())
f=math.factorial(n)

if f%10!=0:
    print(f%10)
else:
    print((f//10)%10)

P135: PARITY QUIZ
~~~~~~~~~~~~~~~~~
While sitting in party, Tom came up with an idea of a quiz. and the quiz is, Tom will spell out a number, and a person has to tell a number which is next to it. But this number has to be perfect square.

input -----> a number from the user
output ----> the perfect square after N

Ex:
	n=5 ----> 6,7,8,9 ---> 9
	n=2 ----> 3,4 -------> 4

Logic:
		for(i=1;;i++)
		{
			if(i*i>=n)
			{
				print i
				break;
			}
		}

n=5 ---> 1,4,9 ---> 9
n=2 ---> 1,4 -----> 4

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,i;
    scanf("%d",&n);
    for(i=1;;i++)
    {
        if(i*i>=n)
        {
            printf("%d",i*i);
            break;
        }
    }
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i;
        for(i=1;;i++)
        {
            if(i*i>=n)
            {
                System.out.println(i*i);
                break;
            }
        }
    }
}

python implementation:
-----------------------
n=int(input())
i=1
while True:
    if i*i>=n:
        print(i*i)
        break
    i=i+1

P136: PRIME NUMBER BUSSES
~~~~~~~~~~~~~~~~~~~~~~~~~
James wants to travel by bus to reach his friend John's home. John gave a hint that all busses from Jame's location will reach his home if the bus number is prime number.
Write a program to help James find the bus that reaches John's home.

input -----> a number from the user
output ----> yes or no

Ex:
	4 ----> no
	5 ----> yes

Logic:
------
		f=0;
		for(i=1;i<=n;i++)
		{
			if(n%i==0)
				f++;
		}
		if f==2 then 'yes' else 'no'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,i,f;
    scanf("%d",&n);
    f=0;
    for(i=1;i<=n;i++)
    {
        if(n%i==0)
            f++;
    }
    printf((f==2)?"yes":"no");
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),f=0,i;
        for(i=1;i<=n;i++)
        {
            if(n%i==0)
                f++;
        }
        System.out.println((f==2)?"yes":"no");
    }
}

python implementation:
----------------------
n=int(input())
f=0
for i in range(1,n+1):
    if n%i==0:
        f=f+1
print('yes' if f==2 else 'no')

P137: SUM OF ALL INTEGERS
~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of all integers between two integer numbers taken as input and are divisible by 7.


input ------> an integer value
output -----> sum value

Ex:
---
	n1=1,n2=20 ---> 7+14=21

Logic:
------
		sum=0;
		for(i=n1;i<=n2;i++)
		{
			if(i%7==0)
				sum=sum+i;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n1,n2,i,sum=0;
    scanf("%d %d",&n1,&n2);
    for(i=n1;i<=n2;i++)
    {
        if(i%7==0)
            sum=sum+i;
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n1=obj.nextInt(),n2=obj.nextInt(),i,sum=0;
        for(i=n1;i<=n2;i++)
        {
            if(i%7==0)
                sum=sum+i;
        }
        System.out.println(sum);
    }
}

python implementation:
----------------------
n1=int(input())
n2=int(input())
sum=0
for i in range(n1,n2+1):
    if i%7==0:
        sum=sum+i
print(sum)

P138: COMPOSITE NUMBER
~~~~~~~~~~~~~~~~~~~~~~
Implement a program to check whether the given number is composite number or not.

input ----> a number from the user
output ---> true or false


Ex:
	4 ----> true
	5 ----> false

Logic:
------
		f=0;
		for(i=1;i<=n;i++)
		{
			if(n%i==0)
				f++;
		}
		if f>2 then 'true' else 'false'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,i,f;
    scanf("%d",&n);
    f=0;
    for(i=1;i<=n;i++)
    {
        if(n%i==0)
            f++;
    }
    printf((f>2)?"true":"false");
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),f=0,i;
        for(i=1;i<=n;i++)
        {
            if(n%i==0)
                f++;
        }
        System.out.println(f>2);
    }
}

python implementation:
----------------------
n=int(input())
f=0
for i in range(1,n+1):
    if n%i==0:
        f=f+1
print('true' if f>2 else 'false')

P139: DIVISIBLE BY 5 OR 7
~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print the list of integers which are divisible by 5 or 7.

input ----> a number from the user
output ---> seq of int values which are divisible by 5 or 7

Ex:
---
	n=10 ----> 5, 7, 10
	n=20 ----> 5, 7, 10, 14, 15, 20

Logic:
------
		for(i=1;i<=n;i++)
		{
			if(i%5==0 or i%7==0)
				print i
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,i;
    scanf("%d",&n);
    for(i=1;i<=n;i++)
    {
        if(i%7==0 || i%5==0)
            printf("%d ",i);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i;
        for(i=1;i<=n;i++)
        {
            if(i%5==0 || i%7==0)
                System.out.print(i+" ");
        }
    }
}

python implementation:
----------------------
n=int(input())
for i in range(1,n+1):
    if i%7==0 or i%5==0:
        print(i,end=' ')


P140: ENDING 3 
~~~~~~~~~~~~~~
Implement a program to print the list of integers which are ending with 3 in the given range.

input -----> n1 and n2 values
output ----> list of int values

Ex:
	1,20 ---> 3, 13

Logic:
		for(i=n1;i<=n2;i++)
		{
			if(i%10==3)
				print i
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n1,n2,i;
    scanf("%d %d",&n1,&n2);
    for(i=n1;i<=n2;i++)
    {
        if(i%10==3)
            printf("%d ",i);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n1=obj.nextInt(),n2=obj.nextInt(),i;
        for(i=n1;i<=n2;i++)
        {
            if(i%10==3)
                System.out.print(i+" ");
        }
    }
}

python implementation:
----------------------
n1=int(input())
n2=int(input())
for i in range(n1,n2+1):
    if i%10==3:
        print(i,end=' ')


P141: MIN AND MAX
~~~~~~~~~~~~~~~~~
Implement a program to find absolute diff between sum of max digits and sum of min digits present in three integers n1,n2 and n3

input -----> n1,n2 and n3
output ----> int value

Ex:
---
	n1=123
	n2=456
	n3=789

	3+6+9=18
	1+4+7=12

	abs(18-12) = 6

Logic:
------
		n1,n2,n3
		abs((maxD(n1)+maxD(n2)+maxD(n3))-(minD(n1)+minD(n2)+minD(n3)))

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int maxD(int n){
    int m=0,d;
    while(n!=0)
    {
        d=n%10;
        if(m<d)
            m=d;
        n=n/10;
    }
    return m;
}

int minD(int n){
    int m=9,d;
    while(n!=0)
    {
        d=n%10;
        if(m>d)
            m=d;
        n=n/10;
    }
    return m;
}

int main() {
    int n1,n2,n3;
    scanf("%d %d %d",&n1,&n2,&n3);
    printf("%d",abs((maxD(n1)+maxD(n2)+maxD(n3))-(minD(n1)+minD(n2)+minD(n3))));
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int maxD(int n)
    {
        int m=0,d;
        while(n!=0)
        {
            d=n%10;
            if(m<d)
                m=d;
            n=n/10;
        }
        return m;
    }
    static int minD(int n)
    {
        int m=9,d;
        while(n!=0)
        {
            d=n%10;
            if(m>d)
                m=d;
            n=n/10;
        }
        return m;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n1=obj.nextInt(),n2=obj.nextInt(),n3=obj.nextInt();
        System.out.println(Math.abs((maxD(n1)+maxD(n2)+maxD(n3))-(minD(n1)+minD(n2)+minD(n3))));
    }
}

python implementation:
----------------------
n1=[int(i) for i in input()]
n2=[int(i) for i in input()]
n3=[int(i) for i in input()]

print(abs((max(n1)+max(n2)+max(n3))-(min(n1)+min(n2)+min(n3))))


P142: SUM OF ALL PRIME NUMBERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of all prime numbers from 2 to n.

input -----> an integer value
output ----> sum of prime numbers

Ex:
	n=10 ---> 2+3+5+7=17

Logic:
------
		sum=0;
		for(i=2;i<=n;i++)
		{
			if(isprime(i))
				sum=sum+i;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int isprime(int n)
{
    int f=0,i;
    for(i=1;i<=n;i++)
    {
        if(n%i==0)
            f++;
    }
    return f==2;
}
int main() {
    int n,sum=0,i;
    scanf("%d",&n);
    sum=0;
    for(i=2;i<=n;i++)
    {
        if(isprime(i))
            sum=sum+i;
    }
    printf("%d",sum);
    return 0;
}


java implementation
-------------------
import java.io.*;
import java.util.*;

public class Solution {
    static boolean isprime(int n)
    {
        int f=0,i;
        for(i=1;i<=n;i++)
        {
            if(n%i==0)
                f++;
        }
        return f==2;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),sum=0,i;
        for(i=2;i<=n;i++)
        {
            if(isprime(i))
                sum=sum+i;
        }
        System.out.println(sum);
    }
}

python implementation:
----------------------
def isprime(n):
    f=0
    for i in range(1,n+1):
        if n%i==0:
            f=f+1
    return f==2

n=int(input())
sum=0
for i in range(2,n+1):
    if isprime(i):
        sum=sum+i
print(sum)

P143: SUM OF ALL ARMSTRONG NUMBERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of all armstrong numbers from 0 to n.

input -----> an integer value
output ----> sum of armstrong numbers

Ex:
	153 ---> 1^3 + 5^3 + 3^3 = 153

Logic:
------
		sum=0
		for(i=0;i<=n;i++)
		{
			if(i==armstrong(i))
				sum=sum+i;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int armstrong(int n)
{
    int s=0,d;
    while(n!=0)
    {
        d=n%10;
        s=s+(d*d*d);
        n=n/10;
    }
    return s;
}

int main() {
    int n,i,sum=0;
    scanf("%d",&n);
    for(i=0;i<=n;i++)
    {
        if(i==armstrong(i))
            sum=sum+i;
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int armstrong(int n)
    {
        int s=0,d;
        while(n!=0)
        {
            d=n%10;
            s=s+(d*d*d);
            n=n/10;
        }
        return s;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,s=0;
        for(i=0;i<=n;i++)
        {
            if(i==armstrong(i))
                s=s+i;
        }
        System.out.println(s);
    }
}

python implementation:
---------------------
def armstrong(n):
    s=0
    while n!=0:
        d=n%10
        s=s+(d*d*d)
        n=n//10
    return s

n=int(input())
s=0
for i in range(0,n+1):
    if i==armstrong(i):
        s=s+i
print(s)


P144: SUM OF ALL STRONG NUMBERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of all strong numbers from 0 to n.

input -----> an integer value
output ----> sum of strong numbers


Ex:
	145 ---> 1! + 4! + 5! = 145

Logic:
------
		sum=0
		for(i=0;i<=n;i++)
		{
			if(i==strong(i))
				sum=sum+i;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int strong(int n)
{
    int s=0,d,i,f;
    while(n!=0)
    {
        d=n%10;
        for(i=1,f=1;i<=d;i++)
            f=f*i;
        s=s+f;
        n=n/10;
    }
    return s;
}

int main() {
    int n,i,sum=0;
    scanf("%d",&n);
    for(i=0;i<=n;i++)
    {
        if(i==strong(i))
            sum=sum+i;
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int strong(int n)
    {
        int s=0,d,i,f;
        while(n!=0)
        {
            d=n%10;
            for(i=1,f=1;i<=d;i++)
                f=f*i;
            s=s+f;
            n=n/10;
        }
        return s;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,s=0;
        for(i=0;i<=n;i++)
        {
            if(i==strong(i))
                s=s+i;
        }
        System.out.println(s);
    }
}

python implementation:
---------------------
import math
def strong(n):
    s=0
    while n!=0:
        d=n%10
        s=s+math.factorial(d)
        n=n//10
    return s

n=int(input())
s=0
for i in range(0,n+1):
    if i==strong(i):
        s=s+i
print(s)






P145: SUM OF ALL PERFECT NUMBERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of all perfect numbers from 0 to n.

input -----> an integer value
output ----> sum of perfect numbers

Ex:
---
	6 ---> 1,2,3 --> 1+2+3=6
	0 to n ---> list of perfect numbers

Logic:
------
		sum=0;
		for(i=0;i<=n;i++)
		{
			if(i==perfect(i))
				sum=sum+i;
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int perfect(int n)
{
    int s=0,i;
    for(i=1;i<n;i++)
    {
        if(n%i==0)
            s=s+i;
    }
    return s;
}

int main() {
    int n,s=0,i;
    scanf("%d",&n);
    for(i=0;i<n;i++)
    {
        if(i==perfect(i))
            s=s+i;
    }
    printf("%d",s);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int perfect(int n)
    {
        int i,s=0;
        for(i=1;i<n;i++)
        {
            if(n%i==0)
                s=s+i;
        }
        return s;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,s=0;
        for(i=0;i<n;i++)
        {
            if(i==perfect(i))
                s=s+i;
        }
        System.out.println(s);
    }
}

python implementation:
----------------------
def perfect(n):
    s=0
    for i in range(1,n):
        if n%i==0:
            s=s+i
    return s

n=int(input())
s=0
for i in range(0,n+1):
    if i==perfect(i):
        s=s+i
print(s)


P146: MULTIPLICATION TABLE
~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print multiplication table of the given integer n

input -----> an integer value
output ----> multiplication table

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n;
    scanf("%d",&n);
    for(i=1;i<=5;i++)
    {
        printf("%d x %d = %d\n",n,i,n*i);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i;
        for(i=1;i<=5;i++)
        {
            System.out.println(n+" x "+i+" = "+(n*i));
        }
    }
}

python implementation:
----------------------
n=int(input())
for i in range(1,6):
    print(f"{n} x {i} = {n*i}")

P147: ENDING WITH DIGIT 3
~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find all the numbers from n1 to n2, which are ending with the digit 3.

input ----> an integer value
output ---> list of integers

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n1,n2,i;
    scanf("%d %d",&n1,&n2);
    for(i=n1;i<=n2;i++)
    {
        if(i%10==3)
            printf("%d ",i);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,n1=obj.nextInt(),n2=obj.nextInt();
        for(i=n1;i<=n2;i++)
        {
            if(i%10==3)
                System.out.print(i+" ");
        }
    }
}

python implementation:
----------------------
n1=int(input())
n2=int(input())
for i in range(n1,n2+1):
    if i%10==3:
        print(i,end=' ')

P148: LAST BEFORE DIGIT IS 3
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find all the numbers from n1 to n2, where the numbers last before digit is 3.

input ----> an integer value
output ---> list of integers

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n1,n2,i;
    scanf("%d %d",&n1,&n2);
    for(i=n1;i<=n2;i++)
    {
        if((i/10)%10==3)
            printf("%d ",i);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,n1=obj.nextInt(),n2=obj.nextInt();
        for(i=n1;i<=n2;i++)
        {
            if((i/10)%10==3)
                System.out.print(i+" ");
        }
    }
}

python implementation:
----------------------
n1=int(input())
n2=int(input())
for i in range(n1,n2+1):
    if (i//10)%10==3:
        print(i,end=' ')

P149: BEGINGIN AND ENDING WITH 3
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find all the numbers from n1 to n2, which are begining and ending with the digit 3.

input ----> an integer value
output ---> list of integers


c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int rev(int n)
{
    int r=0,d;
    while(n!=0)
    {
        d=n%10;
        r=r*10+d;
        n=n/10;
    }
    return r;
}

int main() {
    int n1,n2,i;
    scanf("%d %d",&n1,&n2);
    for(i=n1;i<=n2;i++)
    {
        if(i%10==3 && rev(i)%10==3)
            printf("%d ",i);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int rev(int n)
    {
        int r=0,d;
        while(n!=0)
        {
            d=n%10;
            r=r*10+d;
            n=n/10;
        }
        return r;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,n1=obj.nextInt(),n2=obj.nextInt();
        for(i=n1;i<=n2;i++)
        {
            if(i%10==3 && rev(i)%10==3)
                System.out.print(i+" ");
        }
    }
}

python implementation:
----------------------
n1=int(input())
n2=int(input())
for i in range(n1,n2+1):
    if i%10==3 and int(str(i)[::-1])%10==3:
        print(i,end=' ')

P150: SUM OF FIRST AND LAST DIGIT IS 3
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find all the numbers from n1 to n2, where sum of first and last digit should be equal to 3.

input ----> an integer value
output ---> list of integers

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int rev(int n)
{
    int r=0,d;
    while(n!=0)
    {
        d=n%10;
        r=r*10+d;
        n=n/10;
    }
    return r;
}

int main() {
    int n1,n2,i;
    scanf("%d %d",&n1,&n2);
    for(i=n1;i<=n2;i++)
    {
        if(rev(i)%10+i%10==3)
            printf("%d ",i);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int rev(int n)
    {
        int r=0,d;
        while(n!=0)
        {
            d=n%10;
            r=r*10+d;
            n=n/10;
        }
        return r;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,n1=obj.nextInt(),n2=obj.nextInt();
        for(i=n1;i<=n2;i++)
        {
            if(rev(i)%10+i%10==3)
                System.out.print(i+" ");
        }
    }
}

python implementation:
----------------------
n1=int(input())
n2=int(input())
for i in range(n1,n2+1):
    if (i%10)+(int(str(i)[::-1]))%10==3:
        print(i,end=' ')


P001 to P150 ---> formulas, math, while and for-loop

P151 to P250 ---> arrays and matrices





P151: READING AND WRITING AN ARRAY
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read and write array elements.

input ------> array size and elements
output -----> list of array elements

Ex:
---
	5
	1 2 3 4 5 --->	1 2 3 4 5

Logic:
------
		c -----> int a[100];
		java --> int a[] = new int[size];
		python-> we dn't have arrays concept, list data structure

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,a[100],i;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
        printf("%d ",a[i]);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,a[] = new int[n];
        for(i=0;i<n;i++)
            a[i] = obj.nextInt();
        for(i=0;i<n;i++)
            System.out.print(a[i]+" ");
    }
}

python implementation:
----------------------
n=int(input())
L = [int(i) for i in input().split()]
for i in L:
    print(i,end=' ')

P152: SUM OF ALL ELEMENTS IN AN ARRAY
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read an array elements and print sum of all its elements.

input -------> size of the array and array elements 
output ------> sum of all elements

Ex:
---
	5
	1 2 3 4 5 ----> 15

Logic:
------
		s=0;
		for(i=0;i<n;i++)
		{
			s=s+a[i];
		}
		print s

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[100],n,i,s=0;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
        s=s+a[i];
    printf("%d",s);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,s=0,a[] = new int[n];
        for(i=0;i<n;i++)
            a[i] = obj.nextInt();
        for(i=0;i<n;i++)
            s=s+a[i];
        System.out.println(s);
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
print(sum(L))

P153: SUM OF EVEN ELEMENTS IN AN ARRAY
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read an array elements and print sum of all even elements.

input -------> size of the array and array elements 
output ------> sum of all even elements

Ex:
---
	5
	1 2 3 4 5 ----> 2+4=6

Logic:
------
		s=0;
		for(i=0;i<n;i++)
		{
			if(a[i]%2==0)
				s=s+a[i];
		}
		print s

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,a[100],i,s;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    s=0;
    for(i=0;i<n;i++)
    {
        if(a[i]%2==0)
            s=s+a[i];
    }
    printf("%d",s);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,s,a[] = new int[n];
        for(i=0;i<n;i++)
            a[i] = obj.nextInt();
        s=0;
        for(i=0;i<n;i++)
        {
            if(a[i]%2==0)
                s=s+a[i];
        }
        System.out.println(s);
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split() if int(i)%2==0]
print(sum(L))

P154: SUM OF ODD ELEMENTS IN AN ARRAY
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read an array elements and print sum of all odd elements.

input -------> size of the array and array elements 
output ------> sum of all odd elements

Ex:
---
	5
	1 2 3 4 5 ----> 1+3+5=9

Logic:
------
		s=0;
		for(i=0;i<n;i++)
		{
			if(a[i]%2!=0)
				s=s+a[i];
		}
		print s

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,a[100],i,s;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    s=0;
    for(i=0;i<n;i++)
    {
        if(a[i]%2!=0)
            s=s+a[i];
    }
    printf("%d",s);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,s,a[] = new int[n];
        for(i=0;i<n;i++)
            a[i] = obj.nextInt();
        s=0;
        for(i=0;i<n;i++)
        {
            if(a[i]%2!=0)
                s=s+a[i];
        }
        System.out.println(s);
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split() if int(i)%2!=0]
print(sum(L))


P155: SUM OF PRIME ELEMENTS IN AN ARRAY
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read an array elements and print sum of all prime elements.

input -------> size of the array and array elements 
output ------> sum of all prime elements

Ex:
---
	5
	1 2 3 4 5 ----> 2+3+5=10

Logic:
------
		s=0;
		for(i=0;i<n;i++)
		{
			if(isprime(a[i]))
				s=s+a[i];
		}
		print s

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int isprime(int n)
{
    int f=0,i;
    for(i=1;i<=n;i++)
    {
        if(n%i==0)
            f++;
    }
    return f==2;
}

int main() {
    int n,a[100],i,s;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    s=0;
    for(i=0;i<n;i++)
    {
        if(isprime(a[i]))
            s=s+a[i];
    }
    printf("%d",s);
    return 0;
}

java implementation:
-------------------
import java.io.*;
import java.util.*;

public class Solution {
    static boolean isprime(int n)
    {
        int i,f=0;
        for(i=1;i<=n;i++)
        {
            if(n%i==0)
                f++;
        }
        return f==2;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,s,a[] = new int[n];
        for(i=0;i<n;i++)
            a[i] = obj.nextInt();
        s=0;
        for(i=0;i<n;i++)
        {
            if(isprime(a[i]))
                s=s+a[i];
        }
        System.out.println(s);
    }
}

python implementation:
----------------------
def isprime(n):
    f=0
    for i in range(1,n+1):
        if n%i==0:
            f=f+1
    return f==2

n=int(input())
L=[int(i) for i in input().split() if isprime(int(i))]
print(sum(L))

P156: SUM OF PALINDROME  ELEMENTS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read an array elements and print sum of all paliandrome elements in an array.

input -------> size of the array and array elements 
output ------> sum of all paliandrome elements

Ex:
---
	6
	11 12 22 13 33 14 ---> 11+22+33=66

Logic:
------
		sum=0;
		for(i=0;i<n;i++)
		{
			if(ispali(a[i]))
				sum=sum+a[i];
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int ispali(int n)
{
    int d,temp=n,r=0;
    while(n!=0)
    {
        d=n%10;
        r=r*10+d;
        n=n/10;
    }
    return r==temp;
}

int main() {
    int n,a[100],i,s;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    s=0;
    for(i=0;i<n;i++)
    {
        if(ispali(a[i]))
            s=s+a[i];
    }
    printf("%d",s);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static boolean ispali(int n)
    {
        int d,r=0,temp=n;
        while(n!=0)
        {
            d=n%10;
            r=r*10+d;
            n=n/10;
        }
        return r==temp;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,s,n = obj.nextInt();
        int a[]=new int[n];
        for(i=0;i<n;i++)
            a[i] = obj.nextInt();
        s=0;
        for(i=0;i<n;i++)
        {
            if(ispali(a[i]))
                s=s+a[i];
        }
        System.out.println(s);
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split() if i==i[::-1]]
print(sum(L))

P157: SUM OF ELEMENTS ENDING WITH 3
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read an array elements and print sum of all elements in an array which are ending with 3.

input -------> size of the array and array elements 
output ------> sum of all elements ending with 3

Ex:
---
	6, 11 12 13 11 22 33 ---> 13+33=46

Logic:
------
		s=0;
		for(i=0;i<n;i++)
		{
			if(a[i]%10==3)
				s=s+a[i];
		}
		print s

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,a[100],i,s;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    s=0;
    for(i=0;i<n;i++)
    {
        if(a[i]%10==3)
            s=s+a[i];
    }
    printf("%d",s);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),a[]=new int[n],s,i;
        for(i=0;i<n;i++)
            a[i] = obj.nextInt();
        s=0;
        for(i=0;i<n;i++)
        {
            if(a[i]%10==3)
                s=s+a[i];
        }
        System.out.println(s);
    }
}

python implementation:
----------------------
n=int(input())
L = [int(i) for i in input().split() if i.endswith('3')]
print(sum(L))


P158: SUM OF ELEMENTS AT EVEN INDEX
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read an array elements and print sum of all elements in an array which are located in even index.

input -------> size of the array and array elements 
output ------> sum of all even indexed elements

Ex:
---
	5
	1 2 3 4 5 ---> 1+3+5=9
	0 1 2 3 4

Logic:
------
		s=0;
		for(i=0;i<n;i+=2)
		{
			s=s+a[i];
		}
		print s

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,i,s,a[100];
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    s=0;
    for(i=0;i<n;i+=2)
        s=s+a[i];
    printf("%d",s);
    return 0;
}

Java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),s,i;
        int a[]=new int[n];
        for(i=0;i<n;i++)
            a[i] = obj.nextInt();
        s=0;
        for(i=0;i<n;i+=2)
            s=s+a[i];
        System.out.println(s);
    }
}

python implementation:
---------------------
n=int(input())
L=[int(i) for i in input().split()]
LL = L[0:len(L):2]
print(sum(LL))


P159: SUM OF ELEMENTS AT ODD INDEX
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read an array elements and print sum of all elements in an array which are located in odd index.

input -------> size of the array and array elements 
output ------> sum of all odd indexed elements

Ex:
---
	5
	1 2 3 4 5 ---> 2+4=6
	0 1 2 3 4

Logic:
------
		s=0;
		for(i=1;i<n;i+=2)
		{
			s=s+a[i];
		}
		print s

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,i,s,a[100];
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    s=0;
    for(i=1;i<n;i+=2)
        s=s+a[i];
    printf("%d",s);
    return 0;
}

Java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),s,i;
        int a[]=new int[n];
        for(i=0;i<n;i++)
            a[i] = obj.nextInt();
        s=0;
        for(i=1;i<n;i+=2)
            s=s+a[i];
        System.out.println(s);
    }
}

python implementation:
---------------------
n=int(input())
L=[int(i) for i in input().split()]
LL = L[1:len(L):2]
print(sum(LL))

P160: SUM OF TWO ARRAYS
~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read two arrays of same size and perform addition operation and return the result array

input ------> size of the array and two array elements
output -----> new array 

Ex:
---
	5
	1 2 3 4 5
	1 2 3 4 5

	output: ---> 2 4 6 8 10

Logic:
------
		for(i=0;i<n;i++)
		{
			c[i] = a[i] + b[i];
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,i,a[100],b[100],c[100];
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
        scanf("%d",&b[i]);
    for(i=0;i<n;i++)
        c[i]=a[i]+b[i];
    for(i=0;i<n;i++)
        printf("%d ",c[i]);
    return 0;
}

java implementation:
-------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i;
        int a[]=new int[n];
        int b[]=new int[n];
        int c[]=new int[n];
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        for(i=0;i<n;i++)
            b[i]=obj.nextInt();
        for(i=0;i<n;i++)
            c[i] = a[i]+b[i];
        for(i=0;i<n;i++)
            System.out.print(c[i]+" ");
    }
}

python implementation:
----------------------
n=int(input())
L1=[int(i) for i in input().split()]
L2=[int(i) for i in input().split()]
L3=[]
for i in range(n):
    L3.append(L1[i]+L2[i])
for i in L3:
    print(i,end=' ')

P161: SUBTRACTION OF TWO ARRAYS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read two arrays of same size and perform subtraction operation and return the result array

input ------> size of the array and two array elements
output -----> new array

Ex:
---
	5
	5 4 3 2 1
	1 2 3 4 5

	output: ---> 4 2 0 -2 -4

Logic:
------
		for(i=0;i<n;i++)
		{
			c[i] = a[i] - b[i];
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,i,a[100],b[100],c[100];
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
        scanf("%d",&b[i]);
    for(i=0;i<n;i++)
        c[i]=a[i]-b[i];
    for(i=0;i<n;i++)
        printf("%d ",c[i]);
    return 0;
}

java implementation:
-------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i;
        int a[]=new int[n];
        int b[]=new int[n];
        int c[]=new int[n];
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        for(i=0;i<n;i++)
            b[i]=obj.nextInt();
        for(i=0;i<n;i++)
            c[i] = a[i]-b[i];
        for(i=0;i<n;i++)
            System.out.print(c[i]+" ");
    }
}

python implementation:
----------------------
n=int(input())
L1=[int(i) for i in input().split()]
L2=[int(i) for i in input().split()]
L3=[]
for i in range(n):
    L3.append(L1[i]-L2[i])
for i in L3:
    print(i,end=' ')

P162: MULTIPLICATION OF TWO ARRAYS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read two arrays of same size and perform multiplication operation and return the result array

input ------> size of the array and two array elements
output -----> new array

Ex:
---
	5
	1 2 3 4 5
	2 1 3 2 1

	output ----> 2 2 9 8 5

Logic:
------
		for(i=0;i<n;i++)
		{
			c[i]= a[i]*b[i]
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,i,a[100],b[100],c[100];
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
        scanf("%d",&b[i]);
    for(i=0;i<n;i++)
        c[i]=a[i]*b[i];
    for(i=0;i<n;i++)
        printf("%d ",c[i]);
    return 0;
}

java implementation:
-------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i;
        int a[]=new int[n];
        int b[]=new int[n];
        int c[]=new int[n];
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        for(i=0;i<n;i++)
            b[i]=obj.nextInt();
        for(i=0;i<n;i++)
            c[i] = a[i]*b[i];
        for(i=0;i<n;i++)
            System.out.print(c[i]+" ");
    }
}

python implementation:
----------------------
n=int(input())
L1=[int(i) for i in input().split()]
L2=[int(i) for i in input().split()]
L3=[]
for i in range(n):
    L3.append(L1[i]*L2[i])
for i in L3:
    print(i,end=' ')

P163: INCREMENT EACH ELEMENT BY ONE UNIT
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read an array and increment its element's value by one unit.

input -----> size and array elements
output ----> updated array

Ex:
---
	5
	1 2 3 4 5

	output ----> 2 3 4 5 6

Logic:
------
		for(i=0;i<n;i++)
		{
			a[i]=a[i]+1 or a[i]++
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,a[100],i;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
        a[i]++;
    for(i=0;i<n;i++)
        printf("%d ",a[i]);
    return 0;
}

java implementation:
---------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),a[]=new int[n],i;
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        for(i=0;i<n;i++)
            a[i]++;
        for(i=0;i<n;i++)
            System.out.print(a[i]+" ");
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
for i in L:
    print(i+1,end=' ')

P164: ARRAY REVERSE
~~~~~~~~~~~~~~~~~~~
Implement a program to read an array and reverse the entire array.

input -----> array size and elements
output ----> reversed array

Ex:
---
	n=4
	12 13 14 15 ----> 15 4 13 12

Logic:
------
		for(i=n-1;i>=0;i--)
			print a[i]

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,n,a[100];
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=n-1;i>=0;i--)
        printf("%d ",a[i]);
    return 0;
}

java implementation:
-------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),a[]=new int[n],i;
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        for(i=n-1;i>=0;i--)
            System.out.print(a[i]+" ");
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
for i in L[::-1]:
    print(i,end=' ')

P165: REVERSE EACH ELEMENT IN ARRAY
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read an array and reverse each element present in an array.

input -----> array size and elements
output ----> updated array with reversed elements

Ex:
---
	n=5

	121 345 123 907 444 ---> 121 543 321 709 444

Logic:
------
		for(i=0;i<n;i++)
		{
			print rev(a[i])
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int rev(int n){
    int d,r=0;
    while(n!=0){
        d=n%10;
        r=r*10+d;
        n=n/10;
    }
    return r;
}

int main() {
    int n,a[100],i;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
        printf("%d ",rev(a[i]));
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int rev(int n)
    {
        int d,r=0;
        while(n!=0){
            d=n%10;
            r=r*10+d;
            n=n/10;
        }
        return r;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),a[]=new int[n],i;
        for(i=0;i<n;i++)
            a[i] = obj.nextInt();
        for(i=0;i<n;i++)
            System.out.print(rev(a[i])+" ");
    }
}

python implementation:
---------------------
n=int(input())
L=[int(i) for i in input().split()]
for i in L:
    print(str(i)[::-1],end=' ')

P166: SORTING IN ASC
~~~~~~~~~~~~~~~~~~~
Implement a program to ready array elements and sort the elements in ascending order.

input -----> size and array elements
output ----> sorted array

Ex:
---
	5
	2 1 5 3 4 -----> 1 2 3 4 5

Logic:
------
		for(i=0;i<n;i++)
		{
			for(j=i+1;j<n;j++)
			{
				if(a[i]>a[j]){
					t=a[i];
					a[i]=a[j];
					a[j]=t;
				}
			}
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[100],n,i,j,t;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
    {
        for(j=i+1;j<n;j++)
        {
            if(a[i]>a[j]){
                t=a[i];
                a[i]=a[j];
                a[j]=t;
            }
        }
    }
    for(i=0;i<n;i++)
        printf("%d ",a[i]);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),a[]=new int[n],i;
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        Arrays.sort(a);
        for(i=0;i<n;i++)
            System.out.print(a[i]+" ");
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
L.sort()
for i in L:
    print(i,end=' ')

P167: SORTING IN DESC
~~~~~~~~~~~~~~~~~~~
Implement a program to ready array elements and sort the elements in descending order.

input -----> size and array elements
output ----> sorted array

Ex:
---
	5
	2 1 5 3 4 -----> 5 4 3 2 1

Logic:
------
		for(i=0;i<n;i++)
		{
			for(j=i+1;j<n;j++)
			{
				if(a[i]<a[j]){
					t=a[i];
					a[i]=a[j];
					a[j]=t;
				}
			}
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[100],n,i,j,t;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
    {
        for(j=i+1;j<n;j++)
        {
            if(a[i]<a[j]){
                t=a[i];
                a[i]=a[j];
                a[j]=t;
            }
        }
    }
    for(i=0;i<n;i++)
        printf("%d ",a[i]);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),a[]=new int[n],i;
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        Arrays.sort(a);
        for(i=n-1;i>=0;i--)
            System.out.print(a[i]+" ");
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
L.sort(reverse=True)
for i in L:
    print(i,end=' ')

P168: LINEAR SEARCH
~~~~~~~~~~~~~~~~~~
Implement a program to search for an element in an array using linear search.

input -----> size, array elements and key element
output ----> index value of the key value

Ex:
---
	n=5
	1 2 5 4 3
	5

	output --> 2

Logic:
------
		loc = -1;
		for(i=0;i<n;i++){
			if(key==a[i])
			{
				loc=i;
				break;
			}
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[100],n,key,loc,i;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    scanf("%d",&key);
    loc=-1;
    for(i=0;i<n;i++){
        if(key==a[i]){
            loc=i;
            break;
        }
    }
    printf("%d",loc);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),a[]=new int[n],i,loc,key;
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        key=obj.nextInt();
        loc=-1;
        for(i=0;i<n;i++)
        {
            if(key==a[i]){
                loc=i;
                break;
            }
        }
        System.out.println(loc);
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
key=int(input())
if key in L:
    print(L.index(key))
else:
    print(-1)

P169: BINARY SEARCH
~~~~~~~~~~~~~~~~~~
Implement a program to search for an element in an array using binary search.

input -----> size, array elements and key element
output ----> index value of the key value

Ex:
---
	n=5
	1 4 2 5 3
	3

	1 2 3 4 5 ---> 2nd location

Logic:
------
		low = 0;
		high = n-1;
		while(low<=high)
		{
			mid = (low + high)/2;
			if(key==a[mid])
			{
				loc=mid;
				break;
			}
			else if(key<a[mid])
				high = mid-1;
			else
				low = mid+1;
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[100],n,key,i,loc,low,high,mid,j,t;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    scanf("%d",&key);
    for(i=0;i<n;i++)
    {
        for(j=i+1;j<n;j++)
        {
            if(a[i]>a[j])
            {
                t=a[i];
                a[i]=a[j];
                a[j]=t;
            }
        }
    }
    loc=-1;
    low=0;
    high=n-1;
    while(low<=high)
    {
        mid = (low+high)/2;
        if(key==a[mid]){
            loc=mid;
            break;
        }
        else if(key<a[mid])
            high=mid-1;
        else
            low=mid+1;
    }
    printf("%d",loc);
    return 0;
}

java implementation:
-------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),key,i,a[]=new int[n];
        for(i=0;i<n;i++)
            a[i] = obj.nextInt();
        key=obj.nextInt();
        Arrays.sort(a);
        int loc = Arrays.binarySearch(a,key);
        System.out.println(loc<0?-1:loc);
    }
}

python implementation:
-----------------------
n=int(input())
L=[int(i) for i in input().split()]
key=int(input())
L.sort()
if key in L:
    print(L.index(key))
else:
    print(-1)

P170: MIN ELEMENT IN ARRAY
~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find min element present in an array.

input -----> size and array elements
output ----> min element in array

Ex:
---
	5
	1 4 2 5 3

	output --> 1

Logic:
------
		sort the array
		print a[0]

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[100],n,i,j,t;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
    {
        for(j=i+1;j<n;j++)
        {
            if(a[i]>a[j]){
                t=a[i];
                a[i]=a[j];
                a[j]=t;
            }
        }
    }
    printf("%d",a[0]);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),a[]=new int[n],i;
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        Arrays.sort(a);
        System.out.println(a[0]);
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
L.sort()
print(L[0])


P171: MAX ELEMENT IN ARRAY
~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find max element present in an array.

input -----> size and array elements
output ----> max element in array

Ex:
---
	5
	1 4 2 5 3

	output --> 5

Logic:
------
		sort the array
		print a[n-1]

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[100],n,i,j,t;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
    {
        for(j=i+1;j<n;j++)
        {
            if(a[i]>a[j]){
                t=a[i];
                a[i]=a[j];
                a[j]=t;
            }
        }
    }
    printf("%d",a[n-1]);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),a[]=new int[n],i;
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        Arrays.sort(a);
        System.out.println(a[n-1]);
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
L.sort()
print(L[n-1])

P172: 2nd MIN ELEMENT IN ARRAY
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find 2nd min element present in an array.

input ------> size and array elements
output -----> 2nd min element

Ex:
---
	5
	1 4 2 5 3 ---> 1 2 3 4 5

	output --> 2

Logic:
------
		sort the array
		print a[2-1]

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[100],n,i,j,t;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
    {
        for(j=i+1;j<n;j++)
        {
            if(a[i]>a[j]){
                t=a[i];
                a[i]=a[j];
                a[j]=t;
            }
        }
    }
    printf("%d",a[2-1]);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),a[]=new int[n],i;
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        Arrays.sort(a);
        System.out.println(a[2-1]);
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
L.sort()
print(L[2-1])

P173: 2nd MAX ELEMENT IN ARRAY
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find 2nd max element present in an array.

input ------> size and array elements
output -----> 2nd max element

Ex:
---
	5
	1 4 2 5 3 ---> 1 2 3 4 5

	output --> 4

Logic:
------
		sort the array
		print a[n-2]

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[100],n,i,j,t;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
    {
        for(j=i+1;j<n;j++)
        {
            if(a[i]>a[j]){
                t=a[i];
                a[i]=a[j];
                a[j]=t;
            }
        }
    }
    printf("%d",a[n-2]);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),a[]=new int[n],i;
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        Arrays.sort(a);
        System.out.println(a[n-2]);
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
L.sort()
print(L[n-2])

P174: DIFFERENCE BETWEEN MAX AND MIN ELEMENT
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find the difference between min and max element present in an array.

input ------> size and array elements
output -----> difference between max and min element

Ex:
---
	5
	1 4 2 5 3

	output --> 5-1=4

Logic:
------
		sort the array
		print a[n-1]-a[0]

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[100],n,i,j,t;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
    {
        for(j=i+1;j<n;j++)
        {
            if(a[i]>a[j]){
                t=a[i];
                a[i]=a[j];
                a[j]=t;
            }
        }
    }
    printf("%d",a[n-1]-a[0]);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),a[]=new int[n],i;
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        Arrays.sort(a);
        System.out.println(a[n-1]-a[0]);
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
L.sort()
print(L[n-1]-L[0])

P175: SORTING 0's, 1's and 2's
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read an array and sort array elements with 0s, 1s and 2s.

input ------> size, array elements 
output -----> print sorted elements

Ex:
---
	5
	0 2 1 0 1 -----> 0 0 1 1 2

Logic:
------
		for(i=0;i<n;i++)
		{
			for(j=i+1;j<n;j++)
			{
				if(a[i]>a[j]){
					t=a[i];
					a[i]=a[j];
					a[j]=t;
				}
			}
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[100],n,i,j,t;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
    {
        for(j=i+1;j<n;j++)
        {
            if(a[i]>a[j]){
                t=a[i];
                a[i]=a[j];
                a[j]=t;
            }
        }
    }
    for(i=0;i<n;i++)
        printf("%d ",a[i]);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),a[]=new int[n],i;
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        Arrays.sort(a);
        for(i=0;i<n;i++)
            System.out.print(a[i]+" ");
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
L.sort()
for i in L:
    print(i,end=' ')

P176: NUMBER OF OCCURRENCES
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find the number of occurrences of the given element.

input -------> size,array element and key element
output ------> return number of occurrences

Ex:
---
	5
	1 2 3 1 2
	1 ----> 2
	2 ----> 2
	3 ----> 1
	4 ----> 0

Logic:
------
		count=0;
		for(i=0;i<n;i++)
		{
			if(key==a[i])
				count++;
		}
		print count

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,a[100],key,c=0,i;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    scanf("%d",&key);
    c=0;
    for(i=0;i<n;i++)
    {
        if(key==a[i])
            c++;
    }
    printf("%d",c);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),a[]=new int[n],key,c=0,i;
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        key=obj.nextInt();
        for(i=0;i<n;i++)
        {
            if(a[i]==key)
                c++;
        }
        System.out.println(c);
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
key=int(input())
print(L.count(key))

P177: NUMBER OF DUPLICATES
~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find the number of duplicate elements present in the given array.

input ------> size, array elements 
output -----> number of duplicate elements in the array

Ex:
---
	5
	1 2 1 2 3 

	output ---> 2

	5
	1 1 1 2 3

	output --> 1

Logic:
------
		b[999]={0}
		for(i=0;i<n;i++)
		{
			b[a[i]]++;
		}
		c=0;
		for(i=0;i<999;i++)
		{
			if(b[i]>1)
				c++;
		}
		print c

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[100],b[1000]={0},i,c,n;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
        b[a[i]]++;
    c=0;
    for(i=0;i<=999;i++)
    {
        if(b[i]>1)
            c++;
    }
    printf("%d",c);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),a[]=new int[n],b[]=new int[999],c,i;
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        for(i=0;i<n;i++)
            b[a[i]]++;
        c=0;
        for(i=0;i<999;i++)
        {
            if(b[i]>1)
                c++;
        }
        System.out.println(c);
    }
}

python implementation:
-----------------------
n=int(input())
L=[int(i) for i in input().split()]
c=0
d={}
for i in L:
    d[i]=d.get(i,0)+1
for i in d.values():
    if i>1:
        c=c+1
print(c)

P178: PRINT UNIQUE ELEMENTS
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find the unique elements present in the given array.

input ------> size, array elements 
output -----> print unique elements present in the array

Ex:
---
	5
	1 1 2 3 4

	output ----> 1 2 3 4

Logic:
------
		for(i=0;i<n;i++)
		{
			for(j=i+1;j<n;j++)
			{
				if(a[i]==a[j])
				{
					break;
				}
			}
			if(j==n)
				print a[i]
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[100],n,i,j;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
    {
        for(j=i+1;j<n;j++)
        {
            if(a[i]==a[j])
                break;
        }
        if(j==n)
            printf("%d ",a[i]);
    }
    return 0;
}

java implementation:
-------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n = obj.nextInt(),i;
        LinkedHashSet<Integer> lhs = new LinkedHashSet<Integer>();
        for(i=0;i<n;i++)
            lhs.add(obj.nextInt());
        for(int item:lhs)
            System.out.print(item+" ");
    }
}

python implementation:
----------------------
n=int(input())
L1=[int(i) for i in input().split()]
L2=[]
for i in L1:
    if i not in L2:
        L2.append(i)
for i in L2:
    print(i,end=' ')

P179: REPLACE WITH GREATER ELEMENT
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read an array and replace every element with the greatest element on its right side.

input ------> size, array elements 
output -----> print updated array elements

Ex:
---
	5
	1 2 3 1 4

	4 4 4 4 4

Logic:
------
		for(i=0;i<n;i++)
		{
			max=a[i];
			for(j=i+1;j<n;j++)
			{
				if(max<a[i])
					max=a[i];
			}
			print max
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,a[100],max,i,j;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
    {
        max=a[i];
        for(j=i+1;j<n;j++)
        {
            if(max<a[j])
                max=a[j];
        }
        printf("%d ",max);
    }
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,a[]=new int[n],max,j;
        for(i=0;i<n;i++)
            a[i] = obj.nextInt();
        for(i=0;i<n;i++)
        {
            max=a[i];
            for(j=i+1;j<n;j++)
            {
                if(max<a[j])
                    max=a[j];
            }
            System.out.print(max+" ");
        }
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
for i in range(n):
    max=L[i]
    for j in range(i+1,n):
        if max<L[j]:
            max=L[j]
    print(max,end=' ')


P180: SUM OF FIRST AND LAST, SECOND AND SECOND LAST
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find the sum of first and last, second and second last and so on in an array.

input -----> size and array elements
output ----> print sum of first and last, second and second last and so on

Ex:
---
	5
	1 2 3 4 5

	output ---> 6 6 6

	6
	1 2 3 4 5 6

	output ---> 7 7 7

Logic:
------
		low = 0;
		high = n-1;
		while(low<=high)
		{
			print a[low]+a[high]
			low++;
			high--;
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[100],n,i,low,high;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    low=0;
    high=n-1;
    while(low<=high)
    {
        printf("%d ",a[low]+a[high]);
        low++;
        high--;
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),a[]=new int[n],i,low,high;
        for(i=0;i<n;i++)
            a[i] = obj.nextInt();
        low=0;
        high=n-1;
        while(low<=high)
        {
            System.out.print((a[low]+a[high])+" ");
            low++;
            high--;
        }
    }
}

python implementation:
---------------------
n=int(input())
L=[int(i) for i in input().split()]
low=0
high=n-1
while low<=high:
    print(L[low]+L[high],end=' ')
    low=low+1
    high=high-1

P181: NUMBER OF EVEN AND ODD ELEMENTS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find number of even and odd elements in the given array

input -------> size and array elements
output ------> print number of even and odd elements line by line

Ex:
---
	5
	1 1 2 3 4
	2
	3

Logic:
------
		ec=0;
		oc=0;
		for(i=0;i<n;i++)
		{
			if(a[i]%2==0)
				ec++;
			else
				oc++;
		}
		print ec, oc

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,ec=0,oc=0,a[100],i;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
    {
        if(a[i]%2==0)
            ec++;
        else
            oc++;
    }
    printf("%d\n%d",ec,oc);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),ec=0,oc=0,i,a[]=new int[n];
        for(i=0;i<n;i++)
            a[i] = obj.nextInt();
        for(i=0;i<n;i++)
        {
            if(a[i]%2==0)
                ec++;
            else
                oc++;
        }
        System.out.println(ec);
        System.out.println(oc);
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
ec=0
oc=0
for i in L:
    if i%2==0:
        ec=ec+1
    else:
        oc=oc+1
print(ec)
print(oc)

P182: SORT FIRST HALF OF ARRAY
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to sort only first half of the array and keep remaining elements as original.

input ------> size and array elements
output -----> reverse only first half of the array

Ex:
---
	5
	2 1 4 3 5

	output ---> 1 2 4 3 5

Logic:
------
		for(i=0;i<n/2;i++)
		{
			for(j=i+1;j<n/2;j++)
			{
				if(a[i]>a[j])
				{
					t=a[i];
					a[i]=a[j];
					a[j]=t;
				}
			}
		}


c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[100],n,i,j,t;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n/2;i++)
    {
        for(j=i+1;j<n/2;j++)
        {
            if(a[i]>a[j]){
                t=a[i];
                a[i]=a[j];
                a[j]=t;
            }
        }
    }
    for(i=0;i<n;i++)
        printf("%d ",a[i]);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),a[]=new int[n],i;
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        Arrays.sort(a,0,n/2);
        for(i=0;i<n;i++)
            System.out.print(a[i]+" ");
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]

for i in range(n//2):
    for j in range(i+1,n//2):
        if L[i]>L[j]:
            L[i],L[j]=L[j],L[i]

for i in L:
    print(i,end=' ')


P183: REARRANGE AN ARRAY
~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to rearrange an array in such an order that- smallest,largest,2nd smallest, 2nd largest and so on.

input ------> size and array elements
output -----> print the elements smallest,largest,2nd smallest,2nd largest and so on.

Ex:
---
	5
	1 3 2 4 5

	1 2 3 4 5 ---> 1 5 2 4 3 3

Logic:
------
		sort the array
		low=0;
		high=n-1;
		while(low<=high)
		{
			print a[low], a[high]
			low++;
			high--;
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,a[100],n,t,low,high;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
    {
        for(j=i+1;j<n;j++)
        {
            if(a[i]>a[j])
            {
                t=a[i];
                a[i]=a[j];
                a[j]=t;
            }
        }
    }
    low=0;
    high=n-1;
    while(low<=high)
    {
        printf("%d %d ",a[low],a[high]);
        low++;
        high--;
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,low,high,a[]=new int[n];
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        Arrays.sort(a);
        low=0;
        high=n-1;
        while(low<=high)
        {
            System.out.print(a[low]+" "+a[high]+" ");
            low++;
            high--;
        }
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
L.sort()
low=0
high=n-1
while low<=high:
    print(L[low],L[high],end=' ')
    low=low+1
    high=high-1

P184: ARRAY OF MULTIPLES
~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to create an array with n elements by taking multiples of m.

input -----> m and n 
output ----> return an array with n elements which contains multiples of m.

Ex:
---
	n=4
	m=5

	output ---> 5 10 15 20

logic:
------
		for(i=1;i<=n;i++)
		{
			print m*i
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,m,i;
    scanf("%d %d",&n,&m);
    for(i=1;i<=n;i++)
    {
        printf("%d ",m*i);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),m=obj.nextInt(),i;
        for(i=1;i<=n;i++)
            System.out.print((m*i)+" ");
    }
}

python implementation:
----------------------
n=int(input())
m=int(input())
for i in range(1,n+1):
    print(m*i,end=' ')

P185: INCLUSIVE ARRAY RANGE
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Write a function that, given the start startNum and end endNum values, return an array containing all the numbers inclusive to that range. 

Note:
The numbers in the array are sorted in ascending order.
If startNum is greater than endNum, return an array with the higher value. 

input -----> n and m values
output ----> return an array with elements from n to m.

Ex:
---
	n=5
	m=8

	output ---> 5 6 7 8

	n=5
	m=3

	output ---> 5

Logic:
------
		read n and m values

		if(n<m)
		{
			for(i=n;i<=m;i++)
				print i
		}
		else
			print n

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,m,i;
    scanf("%d %d",&n,&m);
    if(n<m)
    {
        for(i=n;i<=m;i++)
            printf("%d ",i);
    }
    else
        printf("%d",n);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),m=obj.nextInt(),i;
        if(n<m)
        {
            for(i=n;i<=m;i++)
                System.out.print(i+" ");
        }
        else
            System.out.print(n);
    }
}

python implementation
----------------------
n=int(input())
m=int(input())
if n<m:
    for i in range(n,m+1):
        print(i,end=' ')
else:
    print(n)

P186: ELIMINATE ODD ELEMENTS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create a function that takes an array of numbers and returns only the even values.

Note:

Return all even numbers in the order they were given.
All test cases contain valid numbers ranging from 1 to 3000.

input -----> size and an array
output ----> remove all odd numbers and print

Ex:
---
	5
	1 2 3 4 5

	output ---> 2 4

Logic:
------
		for(i=0;i<n;i++)
		{
			if(a[i]%2==0)
				print a[i];
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,a[100],i;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
    {
        if(a[i]%2==0)
            printf("%d ",a[i]);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),a[]=new int[n],i;
        for(i=0;i<n;i++)
            a[i] = obj.nextInt();
        for(i=0;i<n;i++)
        {
            if(a[i]%2==0)
               System.out.print(a[i]+" ");
        }
    }
}

python implementation
----------------------
n=int(input())
L=[int(i) for i in input().split()]
for i in L:
    if i%2==0:
        print(i,end=' ')

P187: POSITIVE COUNT AND NEGATIVE SUM
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create a function that takes an array of positive and negative numbers. Return an array where the first element is the count of positive numbers and the second element is the sum of negative numbers.

input -------> size and an array
con ---------> If given an empty array, return an empty array and 0 is not positive.
output ------> two space seperated int values.

Ex:
---
	5
	1 -2 3 -4 5

	output ----> 3 -6

Logic:
------
		c=0;
		s=0;
		for(i=0;i<n;i++)
		{
			if(a[i]>=0)
				c++;
			else
				s=s+a[i];
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[100],n,i,c,s;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    c=0;
    s=0;
    for(i=0;i<n;i++)
    {
        if(a[i]>0)
            c++;
        else
            s=s+a[i];
    }
    printf("%d %d",c,s);
    return 0;
}

java implementation:
---------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),a[]=new int[n],i,s=0,c=0;
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        for(i=0;i<n;i++)
        {
            if(a[i]>0)
                c++;
            else
                s=s+a[i];
        }
        System.out.print(c+" "+s);
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
c=0
s=0
for i in L:
    if i>0:
        c=c+1
    else:
        s=s+i
print(c,s,end=' ')

P188: SUM OF TWO SMALLEST ELEMENTS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create a function that takes an array of numbers and returns the sum of the two lowest positive numbers.

input -------> size and an array
con ---------> Dn't count negative numbers
output ------> sum of two smallest positive numbers

Ex:
---
	5
	1 -2 3 -4 5

	output ---> -4 -2 1 3 5 ---> 4

Logic:
------
		sort the array
		for(i=0;i<n;i++)
		{
			if(a[i]>0)
			{
				print a[i]+a[i+1]
				break;
			}
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,a[100],i,j,t;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
    {
        for(j=i+1;j<n;j++)
        {
            if(a[i]>a[j])
            {
                t=a[i];
                a[i]=a[j];
                a[j]=t;
            }
        }
    }
    for(i=0;i<n;i++)
    {
        if(a[i]>0)
        {
            printf("%d",a[i]+a[i+1]);
            break;
        }
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,a[]=new int[n];
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        Arrays.sort(a);
        for(i=0;i<n;i++)
        {
            if(a[i]>0)
            {
                System.out.println(a[i]+a[i+1]);
                break;
            }
        }
    }
}

python implementation
---------------------
n=int(input())
L=[int(i) for i in input().split()]
L.sort()
for i in range(n):
    if L[i]>0:
        print(L[i]+L[i+1])
        break

P189: LAST N ELEMENTS
~~~~~~~~~~~~~~~~~~~~~
Write a function that retrieves the last n elements from an array.

input -------> size, an array and N value
con ---------> return 0 if n exceeds size of the array
output ------> last N elements

Ex:
---
	5
	1 2 3 4 5
	3

	output----> 3 4 5

	5
	1 2 3 4 5
	7

	output----> 0

Logic:
------
		if(N<n)
		{
			for(i=n-N;i<n;i++)
			{
				print a[i];
			}
		}
		else
			print 0

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,N,a[100],i;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    scanf("%d",&N);
    if(N<n)
    {
        for(i=n-N;i<n;i++)
            printf("%d ",a[i]);
    }
    else
        printf("0");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),a[]=new int[n],N,i;
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        N=obj.nextInt();
        if(N<n)
        {
            for(i=n-N;i<n;i++)
                System.out.print(a[i]+" ");
        }
        else
            System.out.println(0);
    }
}

python implementation:
---------------------
n=int(input())
L=[int(i) for i in input().split()]
N=int(input())
if N<n:
    for i in range(n-N,n):
        print(L[i],end=' ')
else:
    print(0)

P190: MINI PEACKS
~~~~~~~~~~~~~~~~~
Write a function that returns all the elements in an array that are strictly greater than their adjacent left and right neighbors.

input ------> size, an array
con---------> Do not count boundary numbers, since they only have one left/right neighbor.
output -----> an array

Ex:
---
	n=5
	1 4 2 5 3

	output ---> 4 5

Logic:
------
		for(i=1;i<n-1;i++)
		{
			if(a[i]>a[i-1] && a[i]>a[i+1])
				print a[i]
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,a[100],i;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=1;i<n-1;i++)
    {
        if(a[i]>a[i+1] && a[i]>a[i-1])
            printf("%d ",a[i]);
    }
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),a[]=new int[n],i;
        for(i=0;i<n;i++)
            a[i] = obj.nextInt();
        for(i=1;i<n-1;i++)
        {
            if(a[i]>a[i+1] && a[i]>a[i-1])
                System.out.print(a[i]+" ");
        }
    }
}

python implementation:
--------------------
n=int(input())
L=[int(i) for i in input().split()]
for i in range(1,n-1):
    if L[i]>L[i-1] and L[i]>L[i+1]:
        print(L[i],end=' ')

P191: ALL PRIME
~~~~~~~~~~~~~~~
Create a function thats takes an array of integers and returns true if every number is prime. Otherwise, return false.

input -------> size and an array
con ---------> 1 is not a prime number.
output ------> true or false

Ex:
---
	5
	2 3 5 7 11

	output ----> true

	5
	2 3 4 5 6

	output ----> false

Logic:
------
		for(i=0;i<n;i++)
		{
			if(isprime(a[i]))
				c++;
		}
		if c==n
			print true
		else
			print false

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int isprime(int n)
{
    int f=0,i;
    for(i=1;i<=n;i++)
    {
        if(n%i==0)
            f++;
    }
    return f==2;
}
int main() {
    int n,a[100],i,c;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    c=0;
    for(i=0;i<n;i++)
    {
        if(isprime(a[i]))
           c++;
    }
    if(c==n)
        printf("true");
    else
        printf("false");
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static boolean isprime(int n)
    {
        int f=0,i;
        for(i=1;i<=n;i++)
        {
            if(n%i==0)
                f++;
        }
        return f==2;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),a[]=new int[n],i,c;
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        c=0;
        for(i=0;i<n;i++)
        {
            if(isprime(a[i]))
                c++;
        }
        System.out.println(c==n);
    }
}

python implementation:
----------------------
def isprime(n):
    f=0
    for i in range(1,n+1):
        if n%i==0:
            f=f+1
    return f==2

n=int(input())
L=[int(i) for i in input().split()]
c=0
for i in L:
    if isprime(i):
        c=c+1
print('true' if c==n else 'false')

P192: SUM OF ADJACENTS
~~~~~~~~~~~~~~~~~~~~~~
Write a program to calculate the sum of distances between the adjacent numbers in an array of positive integers.

input ---------> array size and array elements
output --------> print sum of distances between adjacent numbers.

Ex:
---
	5
	5 4 3 2 1 

	output ---> 1+1+1+1=4

Logic:
------
		sum=0;
		for(i=0;i<n;i++)
		{
			sum=sum+(a[i+1]-a[i]);
		}
		print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,a[100],i,sum;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    sum=0;
    for(i=0;i<n-1;i++)
    {
        sum=sum+abs(a[i+1]-a[i]);
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,a[]=new int[n],sum;
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        sum=0;
        for(i=0;i<n-1;i++)
            sum=sum+Math.abs(a[i+1]-a[i]);
        System.out.println(sum);
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
sum=0
for i in range(0,n-1):
    sum=sum+abs(L[i+1]-L[i])
print(sum)

P193: INSERT ELEMENT AT FIRST LOCATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to insert an element into an array at the first position

input -------> size,array elements and element to be inserted
output ------> return array after insertion

Ex:
---
	5
	1 2 3 4 5
	8

	output----> 8 1 2 3 4 5

Logic:
------
		c----> manually
		java-> collection LinkedList
		py --> list

		for(i=n;i>=0;i--)
		{
			a[i]=a[i-1];
		}
		a[0]=new_element
		n++;

		java ---> .addFirst(new_element)
		py -----> .insert(0,new_element)

c ---> size is not imp
java-> int a[] = new int[10];

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[100],n,ne,i;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    scanf("%d",&ne);
    for(i=n;i>=0;i--)
        a[i]=a[i-1];
    a[0]=ne;
    n++;
    for(i=0;i<n;i++)
        printf("%d ",a[i]);
    return 0;
}


java Implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        LinkedList<Integer> LL = new LinkedList<Integer>();
        int n=obj.nextInt();
        for(int i=0;i<n;i++)
            LL.add(obj.nextInt());
        LL.addFirst(obj.nextInt());
        for(int i:LL)
            System.out.print(i+" ");
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
ne=int(input())
L.insert(0,ne)
for i in L:
    print(i,end=' ')

P194: INSERT ELEMENT AT LAST LOCATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to insert an element into an array at the last position

input -------> size,array elements and element to be inserted
output ------> return array after insertion

Ex:
---
	5
	1 2 3 4 5
	8

	output ----> 1 2 3 4 5 8

Logic:
------
		c  ---> manually
		java--> .addLast(ne)
		py ---> .append(ne)

		a[n]=ne;
		n++;

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,a[100],ne,i;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    scanf("%d",&ne);
    a[n]=ne;
    n++;
    for(i=0;i<n;i++)
        printf("%d ",a[i]);
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        LinkedList<Integer> LL = new LinkedList<Integer>();
        int n=obj.nextInt();
        for(int i=0;i<n;i++)
            LL.add(obj.nextInt());
        LL.addLast(obj.nextInt());
        for(int i:LL)
            System.out.print(i+" ");
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
ne=int(input())
L.append(ne)
for i in L:
    print(i,end=' ')

P195: DELETE FIRST ELEMENT
~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to delete an element from an array at the first position

input -------> size,array elements 
output ------> return array after deleting from first location

Ex:
---
	5
	1 2 3 4 5

	output ---> 2 3 4 5

Logic:
------
		c------> manually
		java --> .removeFirst()
		py ----> .pop(0)

		for(i=0;i<n;i++)
			a[i]=a[i+1];
		n--;


c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[100],n,i;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
        a[i]=a[i+1];
    n--;
    for(i=0;i<n;i++)
        printf("%d ",a[i]);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        LinkedList<Integer> LL = new LinkedList<Integer>();
        int n=obj.nextInt();
        for(int i=0;i<n;i++)
            LL.add(obj.nextInt());
        LL.removeFirst();
        for(int i:LL)
            System.out.print(i+" ");
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
L.pop(0)
for i in L:
    print(i,end=' ')

P196: DELETE LAST ELEMENT
~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to delete an element from an array at the last position

input -------> size,array elements 
output ------> return array after deleting from last location

Ex:
---
	5
	1 2 3 4 5

	output ----> 1 2 3 4 

	c --------> manually
	java -----> .removeLast()
	py -------> .pop()

	n--;

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[100],n,i;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    n--;
    for(i=0;i<n;i++)
        printf("%d ",a[i]);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        LinkedList<Integer> LL = new LinkedList<Integer>();
        int n=obj.nextInt();
        for(int i=0;i<n;i++)
            LL.add(obj.nextInt());
        LL.removeLast();
        for(int i:LL)
            System.out.print(i+" ");
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
L.pop()
for i in L:
    print(i,end=' ')

P197: DELETE ELEMENT FROM LOCATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to delete an element from an array at the position

input -------> size,array elements and position
output ------> return array after deleting from the location

Ex:
---
	5
	11 22 33 44 55
	1

	output ----> 11 33 44 55

Logic:
------
		c-------> manually
		java ---> .remove(location)
		py -----> .pop(location)

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int loc,a[100],n,i;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    scanf("%d",&loc);
    for(i=loc;i<n;i++)
        a[i]=a[i+1];
    n--;
    for(i=0;i<n;i++)
        printf("%d ",a[i]);
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        LinkedList<Integer> LL = new LinkedList<Integer>();
        int n=obj.nextInt();
        for(int i=0;i<n;i++)
            LL.add(obj.nextInt());
        int key=obj.nextInt();
        if(LL.remove(new Integer(key)))
        {
            for(int i:LL)
               System.out.print(i+" ");
        }
        else
            System.out.println(-1);
    }
}

python implementation:
----------------------


python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
key=int(input())
if key in L:
    L.remove(key)
    for i in L:
        print(i,end=' ')
else:
    print(-1)

P198: DELETE ELEMENT FROM ARRAY
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to delete the given element from an array 

input -------> size,array elements and element
output ------> return array after deleting

Ex:
---
	5
	11 22 33 44 55
	33

	output ----> 11 22 44 55


Logic:
------
		c-------> manually
		java ---> .remove(new Integer(obj.nextInt()))
		py -----> .remove(obj)

		for(i=0;i<n;i++)
		{
			if(a[i]==key)
			{
				loc=i;
				break;
			}
		}
		for(i=loc;i<n;i++)
			a[i]=a[i+1];
		n--;

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int loc=-1,a[100],n,i,key;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    scanf("%d",&key);
    for(i=0;i<n;i++)
    {
        if(a[i]==key)
        {
            loc=i;
            break;
        }
    }
    for(i=loc;i<n;i++)
        a[i]=a[i+1];
    n--;
    if(loc!=-1)
    {
        for(i=0;i<n;i++)
            printf("%d ",a[i]);
    }
    else
        printf("-1");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        LinkedList<Integer> LL = new LinkedList<Integer>();
        int n=obj.nextInt();
        for(int i=0;i<n;i++)
            LL.add(obj.nextInt());
        int key=obj.nextInt();
        if(LL.remove(new Integer(key)))
        {
            for(int i:LL)
               System.out.print(i+" ");
        }
        else
            System.out.println(-1);
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
key=int(input())
if key in L:
    L.remove(key)
    for i in L:
        print(i,end=' ')
else:
    print(-1)

P199: UPDATE ELEMENT IN ARRAY
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to update an element in the given array

input ------> size,array elements and element to be updated (old element & new element)
output -----> return array after updating

Ex:
---
	5
	111 222 333 444 555
	222
	999

	output ----> 111 999 333 444 555

Logic:
------
		for(i=0;i<n;i++)
		{
			if(a[i]==oe)
			{
				a[i]=ne;
			}
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,a[100],i,oe,ne;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    scanf("%d",&oe);
    scanf("%d",&ne);
    for(i=0;i<n;i++)
    {
        if(a[i]==oe)
        {
            a[i]=ne;
        }
    }
    for(i=0;i<n;i++)
        printf("%d ",a[i]);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,oe,ne,a[]=new int[n];
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        oe=obj.nextInt();
        ne=obj.nextInt();
        for(i=0;i<n;i++)
        {
            if(a[i]==oe)
            {
                a[i]=ne;
            }
        }
        for(i=0;i<n;i++)
            System.out.print(a[i]+" ");
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
oe=int(input())
ne=int(input())
for i in range(n):
    if L[i]==oe:
        L[i]=ne
for i in L:
    print(i,end=' ')

P200: UPDATE ELEMENT PRESENT AT LOCATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to update an element in the given array based on position

input ------> size,array elements and element to be updated and location
output -----> return array after updating

Ex:
---
	5
	111 222 333 444 555
	0
	999

	output ----> 999 222 333 444 555

Logic:
------
		a[loc]=ne;

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,a[100],i,loc,ne;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    scanf("%d",&loc);
    scanf("%d",&ne);
    a[loc]=ne;
    for(i=0;i<n;i++)
        printf("%d ",a[i]);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,loc,ne,a[]=new int[n];
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        loc=obj.nextInt();
        ne=obj.nextInt();
        a[loc]=ne;
        for(i=0;i<n;i++)
            System.out.print(a[i]+" ");
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
loc=int(input())
ne=int(input())
L[loc]=ne
for i in L:
    print(i,end=' ')

P201: ODD EVEN ONLINE GAME
~~~~~~~~~~~~~~~~~~~~~~~~~~
You are playing an online game. In the game, a list of N numbers is given. The player has to arrange the numbers so that all the odd numbers of the list come after even numbers. Write an algorithm to arrange the given list such that all the odd numbers of the list come after the even numbers.

input ---------> array size and array elements.
output --------> modified array.

Ex:
---
	5
	10 13 12 14 15

	output ----> 10 12 14 13 15

Logic:
------
		for(i=0;i<n;i++)
		{
			if(a[i]%2==0)
				print a[i];
		}
		for(i=0;i<n;i++)
		{
			if(a[i]%2!=0)
				print a[i];
		}


c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,a[100],i;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
    {
        if(a[i]%2==0)
            printf("%d ",a[i]);
    }
    for(i=0;i<n;i++)
    {
        if(a[i]%2!=0)
            printf("%d ",a[i]);
    }
    return 0;
}

java implementation:
---------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),a[]=new int[n],i;
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        for(i=0;i<n;i++)
        {
            if(a[i]%2==0)
                System.out.print(a[i]+" ");
        }
        for(i=0;i<n;i++)
        {
            if(a[i]%2!=0)
                System.out.print(a[i]+" ");
        }
    }
}

python implementation:
---------------------
n=int(input())
L=[int(i) for i in input().split()]
for i in L:
    if i%2==0:
        print(i,end=' ')
for i in L:
    if i%2!=0:
        print(i,end=' ')

P202: GARMENTS COMPANY APPAREL
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The garments company apparel wishes to open outlets at various locations. The company shortlisted several plots in these locations and wishes to select only plots that are square shaped. Write an algorithm to help Apparel find the number of plots that it can select for its outlets.

input --------> an integer N, and A1,A2,...AN representing areas of outlets.
output -------> print an integer representing the number of plots selected for outlets.

Ex:
---
	5
	1 2 3 4 5

	count ---> 1+1=2

Logic:
------
		count=1;
		for(i=0;i<n;i++)
		{
			for(k=1;k<=a[i];k++)
			{
				if(k*k==a[i])
					count++;
			}
		}
		print count

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,i,a[100],k,c;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    c=0;
    for(i=0;i<n;i++)
    {
        for(k=1;k<=a[i];k++)
        {
            if(k*k==a[i])
                c++;
        }
    }
    printf("%d",c);
    return 0;
}

java implementation
---------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,c,k,a[] = new int[n];
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        c=0;
        for(i=0;i<n;i++)
        {
            for(k=1;k<=a[i];k++)
            {
                if(k*k==a[i])
                    c++;
            }
        }
        System.out.println(c);
    }
}

python implementation:
-----------------------
n=int(input())
L=[int(i) for i in input().split()]
c=0
for i in range(0,n):
    for k in range(1,L[i]+1):
        if k*k==L[i]:
            c=c+1
print(c)

P203: POLLED CAB SERVICE
~~~~~~~~~~~~~~~~~~~~~~~~
A compnay wishes to provide cab service for their N employees. The employees have distance ranging from 0 to N-1. The company has calculated the total distance from an employee's residence to the company, considering the path to be followed by the cab is a straight path. The distance of the company from it self is 0. The distance for the employees who live to the left side of the company is represented with a negative sign. The distance for the employees who live to the right side of the company is represented with a positive sign. the cab will be allotted a range of distance. The company wishes to find the distance for the employees who live within the particular distance range.
write a alogrithm to find the distance for the employees who live within the distance range.

input ----> size of the list N ,SD,ED and an array of distance
output ------> distance within the range else -1


Ex:
---
	6
	30 50
	29 38 12 48 39 55

	output: --> 38 48 39 

Logic:
------
		read n
		read s and e
		read array

		for(i=0;i<n;i++)
		{
			if abs(a[i])>=s and abs(a[i])<=e
				print a[i]
		}

c implementation
----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,s,e,a[100],i;
    scanf("%d",&n);
    scanf("%d %d",&s,&e);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
    {
        if(abs(a[i])>=s && abs(a[i])<=e)
            printf("%d ",a[i]);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),s=obj.nextInt(),e=obj.nextInt(),i,a[]=new int[n];
        for(i=0;i<n;i++)
            a[i] = obj.nextInt();
        for(i=0;i<n;i++)
        {
            if(Math.abs(a[i])>=s && Math.abs(a[i])<=e)
                System.out.print(a[i]+" ");
        }
    }
}

python implementation
----------------------
n=int(input())
L1=[int(i) for i in input().split()]
L2=[int(i) for i in input().split()]

for i in L2:
    if abs(i)>=L1[0] and abs(i)<=L1[1]:
        print(i,end=' ')

P204: KTH PROCESSING QUEUE
~~~~~~~~~~~~~~~~~~~~~~~~~~
A company wishes to modify the technique by which tasks in the processing queue are executed. There are N processes with unique ID's from 0 to N-1. Each of these tasks has its own execution time. The company wishes to implement a new algorithm for processing tasks. for this purpose they have identified a value K by the new algorithm, the processor will first process the task that has the Kth shortest execution time.

Write an algorithm to find the Kth shortest execution time.

input ----> array size, k value and array
output ---> kth shortest execution time.

Ex:
---
	7
	5
	9 -3 8 -6 -7 18 10

	output ---> -7 -6 -3 8 9 10 18 ----> 9

Logic:
------
		sort the array
		print a[k-1]

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[100],n,i,j,t,k;
    scanf("%d",&n);
    scanf("%d",&k);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
    {
        for(j=i+1;j<n;j++)
        {
            if(a[i]>a[j]){
                t=a[i];
                a[i]=a[j];
                a[j]=t;
            }
        }
    }
    printf("%d ",a[k-1]);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),k=obj.nextInt(),a[]=new int[n],i;
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        Arrays.sort(a);
        System.out.print(a[k-1]+" ");
    }
}

python implementation:
----------------------
n=int(input())
k=int(input())
L=[int(i) for i in input().split()]
L.sort()
print(L[k])

P205: SEVEN BOOM
~~~~~~~~~~~~~~~~
Create a function that takes an array of numbers and return "Boom!" if the digit 7 appears in the array. Otherwise, return "there is no 7 in the array".

input ---------> an array from the user
output --------> Boom! or "there is no 7 in the array".

Ex:
---
	5
	12 45 567 111 333
	Boom!

	4
	11 22 33 44
	there is no 7 in the array

Logic:
------
		flag=0;
		for(i=0;i<n;i++)
		{
			if(contains(a[i]))
			{
				flag=1;
				break;
			}
		}
		if flag==1 then "BOOM!" else "there is no 7 in the array"

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int contains(int n)
{
    int d;
    while(n!=0)
    {
        d=n%10;
        if(d==7)
            return 1;
        n=n/10;
    }
    return 0;
}
int main() {
    int a[100],n,i,flag;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    flag=0;
    for(i=0;i<n;i++)
    {
        if(contains(a[i]))
        {
            flag=1;
            break;
        }
    }
    printf((flag==1)?"Boom!":"there is no 7 in the array");
    return 0;
}


java implementation:
---------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,flag=0,a[]=new int[n];
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        for(i=0;i<n;i++)
        {
            if(Integer.toString(a[i]).contains("7"))
            {
                flag=1;
                break;
            }
        }
        System.out.println((flag==1)?"Boom!":"there is no 7 in the array");
    }
}

python implementation:
------------------------
n=int(input())
L=[int(i) for i in input().split()]
flag=0
for i in L:
    if '7' in str(i):
        flag=1
        break
print('Boom!' if flag==1 else 'there is no 7 in the array')

P206: POSITIVES AND NEGATIVES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create a function which validates whether a given array alternates between positive and negative numbers.

input --------------> an array size and array
output -------------> true or false

Ex:
---
	5
	1 -2 3 -4 5
	true

	5
	1 2 -3 -4 5
	false

Logic:
------
		flag=1;
		for(i=0;i<n-1;i++)
		{
			if(a[i]>0 and a[i+1]>0)
				flag=0;
				break;
			if(a[i]<0 and a[i+1]<0)
				flag=0;
				break;
		}
		if flag==1 then print 'true' else 'false'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,a[100],flag=1,i;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n-1;i++)
    {
        if(a[i]>0 && a[i+1]>0)
        {
            flag=0;
            break;
        }
        if(a[i]<0 && a[i+1]<0)
        {
            flag=0;
            break;
        }
    }
    printf((flag==1)?"true":"false");
    return 0;
}


java implementation:
---------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,a[] = new int[n];
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        boolean flag=true;
        for(i=0;i<n-1;i++)
        {
            if(a[i]>0 && a[i+1]>0)
            {
                flag=false;
                break;
            }
            if(a[i]<0 && a[i+1]<0)
            {
                flag=false;
                break;
            }
        }
        System.out.println(flag);
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
flag=True
for i in range(0,n-1):
    if L[i]>0 and L[i+1]>0:
        flag=False
        break
    if L[i]<0 and L[i+1]<0:
        flag=False
        break
print('true' if flag==True else 'false')

P207: ALL VALUES ARE TRUE
~~~~~~~~~~~~~~~~~~~~~~~~~
Write a function that returns true if all parameters are truthy, and false otherwise

input --------------> an array size and array
output -------------> true or false

Ex:
---
	5
	1 2 3 4 5

	true

	5
	1 2 0 4 5

	false

Logic:
------
		flag=1;
		for(i=0;i<n;i++)
		{
			if(a[i]==0)
			{
				flag=0;
				break;
			}
		}
		if flag==1 then print 'true' else 'false'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,a[100],i,flag=1;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
    {
        if(a[i]==0)
        {
            flag=0;
            break;
        }
    }
    printf((flag==1)?"true":"false");
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,a[]=new int[n];
        boolean flag=true;
        for(i=0;i<n;i++)
            a[i] = obj.nextInt();
        for(i=0;i<n;i++)
        {
            if(a[i]==0)
            {
                flag=false;
                break;
            }
        }
        System.out.println(flag);
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
print('false' if 0 in L else 'true')


P208: THIRD LARGEST AND SECOND SMALLEST
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Given an integer array and an integer N denoting the array length as input. your task is to return the sum of third largest and second minimum elements of the array.

input ------> array size and array elements
output -----> an int value

Ex:
---
	5
	1 2 3 4 5

	3+2=5

Logic:
------
		sort the array
		print a[n-3]+a[2-1]

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[100],n,i,j,t;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
    {
        for(j=i+1;j<n;j++)
        {
            if(a[i]>a[j]){
                t=a[i];
                a[i]=a[j];
                a[j]=t;
            }
        }
    }
    printf("%d",a[n-3]+a[2-1]);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),a[]=new int[n],i;
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        Arrays.sort(a);
        System.out.print(a[n-3]+a[2-1]);
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
L.sort()
print(L[n-3]+L[2-1])


P209: ARRAY PALIANDROME
~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to check whether an array is paliandrome or not.

input -----> Array size N and Array Elements
output ----> true or false

Ex:
---
	5
	1 2 3 4 5

	false

	5
	1 2 3 2 1

	true

logic
-----
		flag = true

		low=0
		high=n-1
		while(low<=high)
		{
			if(a[low]!=a[high])
			{
				flag=false;
				break;
			}
			low++;
			high--;
		}
		print flag

c implemenation:
----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,a[100],i,low,high,flag=1;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    low=0;
    high=n-1;
    while(low<=high)
    {
        if(a[low]!=a[high])
        {
            flag=0;
            break;
        }
        low++;
        high--;
    }
    printf((flag==1)?"true":"false");
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,a[]=new int[n],low,high;
        for(i=0;i<n;i++)
            a[i] = obj.nextInt();
        boolean flag=true;
        low=0;
        high=n-1;
        while(low<=high)
        {
            if(a[low]!=a[high])
            {
                flag=false;
                break;
            }
            low++;
            high--;
        }
        System.out.println(flag);
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
low=0
high=n-1
flag=True
while low<=high:
    if L[low]!=L[high]:
        flag=False
        break
    low=low+1
    high=high-1

print('true' if flag==True else 'false')

P210: PRODUCT WITH SUCCESSOR 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Given an integer N and integer array A as the input, where N denotes the length of A 
write a program to find an integer the sum of all these product with successors.


input ----> array size and elements
output ---> an int value

Ex:
---
	5
	1 3 2 1 3

	(1*2) + (3*4) + (2*3) + (1*2) + (3*4) = 2 + 12 + 6 + 2 + 12 = 34

Logic:
------
		s=0;
		for(i=0;i<n;i++)
		{
			s=s+(a[i]*a[i]+1);
		}
		print s

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[100],n,i,s=0;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
        s=s+(a[i]*a[i]+1);
    printf("%d",s);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,s=0,a[] = new int[n];
        for(i=0;i<n;i++)
            a[i] = obj.nextInt();
        for(i=0;i<n;i++)
            s=s+(a[i]*a[i]+1);
        System.out.println(s);
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
sum=0
for i in L:
    sum=sum+(i*(i+1))
print(sum)

P211: PRE-SORTED INTEGER ARRAY
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
You are given an array of integers, a of size n, Your task is to find the number of elements whose positions will remain unchanged after sorted in ascending order.

input ----> array size and elements
output ---> unchanged count

Ex:
---
	5
	1 5 2 4 3
	1 2 3 4 5

	count--> 1+1=2

Logic:
------
		read array 'a'
		copy array 'a' into 'b'
		sort array 'b'
		c=0
		for(i=0;i<n;i++)
		{
			if(a[i]==b[i])
				c++;
		}
		print c

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,a[100],b[100],i,c=0,j,t;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
        b[i]=a[i];
    for(i=0;i<n;i++)
    {
        for(j=i+1;j<n;j++)
        {
            if(b[i]>b[j])
            {
                t=b[i];
                b[i]=b[j];
                b[j]=t;
            }
        }
    }
    for(i=0;i<n;i++)
    {
        if(a[i]==b[i])
            c++;
    }
    printf("%d",c);
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,c=0,a[]=new int[n],b[]=new int[n];
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        for(i=0;i<n;i++)
            b[i]=a[i];
        Arrays.sort(b);
        for(i=0;i<n;i++)
        {
            if(a[i]==b[i])
                c++;
        }
        System.out.println(c);
    }
}

python implementation:
----------------------
n=int(input())
L1=[int(i) for i in input().split()]
L2=L1.copy()
L2.sort()
c=0
for i in range(n):
    if L1[i]==L2[i]:
        c=c+1
print(c)


P212: HALF ASCENDING AND HALF DESCENDING
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
You are given a list of integers of size N, 
write an algorithm to sort the first K elements of the list in ascending order and 
the remaining elements in descending order.

input -----> an arry size and elements
output ----> updated array

Ex:
---
	5
	1 5 2 4 3

	1 2 3 4 5 ----> output---> 1 2 5 4 3

Logic:
------
		read array 'a'
		sort the array 'a'
		print 0 to n/2, i++
		print n to n/2, i--

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,t,n,a[100];
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
    {
        for(j=i+1;j<n;j++)
        {
            if(a[i]>a[j])
            {
                t=a[i];
                a[i]=a[j];
                a[j]=t;
            }
        }
    }
    for(i=0;i<n/2;i++)
        printf("%d ",a[i]);
    for(i=n-1;i>=n/2;i--)
        printf("%d ",a[i]);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,n=obj.nextInt(),a[]=new int[n];
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        Arrays.sort(a);
        for(i=0;i<n/2;i++)
            System.out.print(a[i]+" ");
        for(i=n-1;i>=n/2;i--)
            System.out.print(a[i]+" ");
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
L.sort()
for i in L[0:n//2]:
    print(i,end=' ')
for i in L[n//2:n][::-1]:
    print(i,end=' ')

P213: LUCKY DRAW
~~~~~~~~~~~~~~~~~
A person went to an exhibition. A lucky draw is going on, where one should buy a ticket. And if they ticket number appear on the screen, that ticket will be considered as jackpot winner.

he knows the secret of picking up the ticket number, which will be considered for the jackpot.

1. sort the ticket number in the increasing order.
2. Now, the difference between the adjacent digits should not be more than 2.

If his ticket follows the above condition, then there are more chances to win the jackpot.

Given a ticket number, find whether the ticket is eligible to be part of jackpot or not. Print "Yes/No" based on the result.

input -----> ticket number
output ----> Yes or No

Ex:
---
	15243 ---> 12345 ----> Yes
	15943 ---> 13459 ----> No

Logic:
------
	read 'n' value convert into an array
	sort the array
	flag=1;
	for(i=0;i<n-1;i++)
	{	
		if(a[i+1]-a[i]>=2)
		{
			flag=0;
			break;
		}
	}
	if flag==1 then print Yes else No

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,i,j,t,len,a[100],d;
    scanf("%d",&n);
    i=0;
    while(n!=0)
    {
        d=n%10;
        a[i++]=d;
        n=n/10;
    }
    len=i;
    for(i=0;i<len;i++)
    {
        for(j=i+1;j<len;j++)
        {
            if(a[i]>a[j])
            {
                t=a[i];
                a[i]=a[j];
                a[j]=t;
            }
        }
    }
    int flag=1;
    for(i=0;i<len-1;i++)
    {
        if(a[i+1]-a[i]>=2)
        {
            flag=0;
            break;
        }
    }
    printf((flag==1)?"Yes":"No");
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,len,d,a[] = new int[3];
        i=0;
        while(n!=0)
        {
            d=n%10;
            a[i++]=d;
            n=n/10;
        }
        len=i;
        Arrays.sort(a);
        boolean flag=true;
        for(i=0;i<len-1;i++)
        {
            if(a[i+1]-a[i]>=2)
            {
                flag=false;
                break;
            }
        }
        System.out.println((flag)?"Yes":"No");
    }
}

python implementation:
----------------------
L=[int(i) for i in input()]
L.sort()
flag=True
for i in range(len(L)-1):
    if L[i+1]-L[i]>=2:
        flag=False
        break
print('Yes' if flag==True else 'No')



P214: SCORE OF PLAYER
~~~~~~~~~~~~~~~~~~~~~
a game developing company has developed a math game for kids called "Brain Fun". The game is for smartphone users and the player is given list of N positive numbers and a random number K. the player need to divide all the numbers in the list with random number k and then need to add all the quotients received in each division. the sum of all the quotients is the score of the player.

Write an algorithm to generate the score of the player.

input -----> array size, elements and random number k
output ----> an int value

Ex:
---
	5
	1 2 3 4 5
	3

	1/3 + 2/3 + 3/3 + 4/3 + 5/3
	0 + 0 + 1 + 1 + 1
	3

Logic:
------
	read 'n' value
	read array 'a' 
	read 'k' value
	s=0
	for(i=0;i<n;i++)
	{
		s=s+a[i]/k;
	}
	print s

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,i,a[100],s,k;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    scanf("%d",&k);
    s=0;
    for(i=0;i<n;i++)
    {
        s=s+a[i]/k;
    }
    printf("%d",s);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,s,k,a[]=new int[n];
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        k=obj.nextInt();
        s=0;
        for(i=0;i<n;i++)
        {
            s=s+a[i]/k;
        }
        System.out.println(s);
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
k=int(input())
s=0
for i in L:
    s=s+i//k
print(s)


P215: PERFECT MATH
~~~~~~~~~~~~~~~~~~
Perfect math is an online math program. In once of the assignments the system displays a list of N number and a value K, and students need to calculate the sum of remainders after dividing all the numbers from the list of N numbers by K. The system need to develop a program to calcualte the correct answer for the assignment.

Write an algorithm to calcualte the correct answer for the assignment.

input -----> size N and N elements and K value
output ----> an int value.

Ex:
---
	5
	1 2 3 4 5
	3

	1%3 + 2%3 + 3%3 + 4%3 + 5%3
	1 + 2 + 0 + 1 + 2
	6

Logic:
------
	read 'n' value
	read array 'a' 
	read 'k' value
	s=0
	for(i=0;i<n;i++)
	{
		s=s+a[i]%k;
	}
	print s

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,i,a[100],s,k;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    scanf("%d",&k);
    s=0;
    for(i=0;i<n;i++)
    {
        s=s+a[i]%k;
    }
    printf("%d",s);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,s,k,a[]=new int[n];
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        k=obj.nextInt();
        s=0;
        for(i=0;i<n;i++)
        {
            s=s+a[i]%k;
        }
        System.out.println(s);
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
k=int(input())
s=0
for i in L:
    s=s+i%k
print(s)

P216: MULTIPLES OF 10
~~~~~~~~~~~~~~~~~~~~~
Given an array A of N integer  numbers. The task is to rewrite the array by putting all multiples of 10 at the end of the given array.

Note: The order of the numbers which arenot multiples of 10 should remain unaltered, and similarly. the order of all multiples of 10 should be unaltered.

input ------> N and Array Elements
output -----> updated array

Ex:
---
	5
	10 11 20 23 30

	output ---> 11 23 10 20 30

Logic:
------
		for(i=0;i<n;i++)
		{
			if(a[i]%10!=0)
				print a[i]
		}
		for(i=0;i<n;i++)
		{
			if(a[i]%10==0)
				print a[i]
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[100],i,n;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
    {
        if(a[i]%10!=0)
            printf("%d ",a[i]);
    }
    for(i=0;i<n;i++)
    {
        if(a[i]%10==0)
            printf("%d ",a[i]);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        
        int n=obj.nextInt(),i,a[]=new int[n];
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        
        for(i=0;i<n;i++)
        {
            if(a[i]%10!=0)
                System.out.print(a[i]+" ");
        }
        for(i=0;i<n;i++)
        {
            if(a[i]%10==0)
                System.out.print(a[i]+" ");
        }
    }
}

python implementation:
---------------------
n=int(input())
L=[int(i) for i in input().split()]
for i in L:
    if i%10!=0:
        print(i,end=' ')
for i in L:
    if i%10==0:
        print(i,end=' ')


P217: ENCRYPTED DIGITS
~~~~~~~~~~~~~~~~~~~~~~
A company trasfers an encrypted code to one of its clients. The code needed to be decrypted so that it can be used for accessing all the required information. The code can be decrypted by interchanging each consecutive digit and once if the digit got interchanged then it cannot be used again. If at a certain point there is no digits to be interchanged with, then that single digit must be left as it is.

Write an algorithm to decrypt the code so that it can be used to access the required information.

input ------> a number from the user
output -----> an integer value

Ex:
---
	5
	1 2 3 4 5

	output=> 2 1 4 3 5

	6
	1 2 3 4 5 6

	output=> 2 1 4 3 6 5

Logic:
------
	if(n%2==0)
	{
		for(i=0;i<n;i=i+2)
			print a[i+1] and a[i]
	}
	else
	{
		for(i=0;i<n-1;i=i+2)
			print a[i+1] and a[i]
		print a[i]
	}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,a[100],i;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    if(n%2==0)
    {
        for(i=0;i<n;i=i+2)
            printf("%d %d ",a[i+1],a[i]);
    }
    else
    {
        for(i=0;i<n-1;i=i+2)
            printf("%d %d ",a[i+1],a[i]);
        printf("%d ",a[i]);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,a[]=new int[n];
        for(i=0;i<n;i++)
            a[i] = obj.nextInt();
        if(n%2==0)
        {
            for(i=0;i<n;i=i+2)
                System.out.print(a[i+1]+" "+a[i]+" ");
        }
        else
        {
            for(i=0;i<n-1;i=i+2)
                System.out.print(a[i+1]+" "+a[i]+" ");
            System.out.print(a[i]+" ");
        }
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
if n%2==0:
    for i in range(0,n,2):
        print(L[i+1],L[i],end=' ')
else:
    for i in range(0,n-1,2):
        print(L[i+1],L[i],end=' ')
    print(L[-1])

P218: EASY SHOPPING
~~~~~~~~~~~~~~~~~~~
The e-commerce company 'Easy Shopping' displays some specific products for its premium customers on its user interface. The company shortlisted a list of N products. The list contains the price of each product. The company will select random products for display. The selection criteria states that only those products whose price is a perfect cube number will be selected for display. The selection process is automated and is done by the company's system. The company wishes to know the total count of the products selected for display.

Write an algorithm to find the count of products that will be displayed.

input ----> an array size and elements
output ---> perfect cube elements

Ex:
---
	10
	1 2 3 4 5 6 7 8 9 10

	output: 1 8

Logic:
------
	for(i=0;i<n;i++)
	{
		c=0;
		while(c<=a[i])
		{
			if(c*c*c==a[i])
			{
				printf("%d ",a[i]);
				break;
			}
			c++;
		}
	}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,a[100],i,c;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
    {
        c=0;
        while(c<=a[i])
        {
            if(c*c*c==a[i])
            {
                printf("%d ",a[i]);
                break;
            }
            c++;
        }
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,c,a[]=new int[n];
        for(i=0;i<n;i++)
            a[i] = obj.nextInt();
        for(i=0;i<n;i++)
        {
            c=0;
            while(c<=a[i])
            {
                if(c*c*c==a[i])
                {
                    System.out.print(a[i]+" ");
                    break;
                }
                c++;
            }
        }
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
for i in range(n):
    c=0
    while c<=L[i]:
        if c*c*c==L[i]:
            print(L[i],end=' ')
            break
        c=c+1


P219: CALCULATE MEAN
~~~~~~~~~~~~~~~~~~~~
Implement a function that takes an array of numbers and returns the mean (average) of all those numbers.

input ----> an array size and elements
output ---> print mean value and round to two decimal places.

Ex:
---
	6
	5 3 6 7 5 3
	4.83

Logic:
------
	sum=0
	for(i=0;i<n;i++)
	{
		sum=sum+a[i];
	}
	print sum/n

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,a[100],i,sum;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    sum=0;
    for(i=0;i<n;i++)
    {
        sum=sum+a[i];
    }
    printf("%.2f",(float)sum/n);
    return 0;
}

java implementation:
-------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),sum,i;
        int a[]=new int[n];
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        sum=0;
        for(i=0;i<n;i++)
            sum=sum+a[i];
        System.out.printf("%.2f",(float)sum/n);
    }
}

python implementation:
-----------------------
n=int(input())
L=[int(i) for i in input().split()]
s=sum(L)
print("%.2f"%(s/n))

P220: TODAYS APPAREL
~~~~~~~~~~~~~~~~~~~~
The e-commerce company "TodaysApparel" has a list of sales values of N days. Some days the company made a profit, represented as a positive value. Other days the company incurred a loss, represented as a negative sales value. The company wishes to know the number of profitable days in the list.

Write an algorithm to help the company know the number of profitable days in the list.

input -------> array size and elements
output ------> count number of +ve values

Ex:
---
	5
	1 2 -3 4 -5

	output=3

Logic:
------
	c=0;
	for(i=0;i<n;i++)
	{
		if(a[i]>=0)
			c++;
	}
	print c

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,a[100],i,c=0;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
    {
        if(a[i]>=0)
            c++;
    }
    printf("%d",c);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,c=0,a[]=new int[n];
        for(i=0;i<n;i++)
            a[i] = obj.nextInt();
        for(i=0;i<n;i++)
        {
            if(a[i]>=0)
                c++;
        }
        System.out.println(c);
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
c=0
for i in L:
    if i>=0:
        c=c+1
print(c)

P221: BUCKET ID
~~~~~~~~~~~~~~~
A data company wishes to store its data files on the server. They N files. Each file has a particular size. the server stires the files in bucket list. The bucket ID is calculated as the sum of the digits of its file size. The server.. the bucket ID for every file request where the file is stored.

Write an algorithm to find the bucketIDs where the files are stored.

input -----> an array size and elements
output ----> bucketIds

Ex:
---
	4
	43 345 20 987

	output--> 7 12 2 24 

Logic:
------
		read size of the array
		read array elements
		for(i=0;i<n;i++)
		{
			print sum(a[i]);
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int sum(int n)
{
    int d,s=0;
    while(n!=0)
    {
        d=n%10;
        s=s+d;
        n=n/10;
    }
    return s;
}

int main() {
    int n,a[100],i;
    scanf("%d",&n);
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }
    for(i=0;i<n;i++)
    {
        printf("%d ",sum(a[i]));
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int sum(int n)
    {
        int s=0,d;
        while(n!=0)
        {
            d=n%10;
            s=s+d;
            n=n/10;
        }
        return s;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,a[]=new int[n];
        for(i=0;i<n;i++)
            a[i] = obj.nextInt();
        for(i=0;i<n;i++)
            System.out.print(sum(a[i])+" ");
    }
}

python implementation:
----------------------
def sum(n):
    s=0
    while n!=0:
        d=n%10
        s=s+d
        n=n//10
    return s

n=int(input())
L=[int(i) for i in input().split()]
for i in L:
    print(sum(i),end=' ')

P222: DEC TO OCTAL
~~~~~~~~~~~~~~~~~~
Implement a program to convert the given decimal value into octal

input ------> decimal value
output -----> octal number

Ex:
---
	16 ---> 20

Logic:
------
		i=0
		while(n!=0)
		{
			a[i++]=n%8;
			n=n/8;
		}
		for(i=i-1;i>=0;i--)
			print a[i]

		java ----> Integer.toOctalString(n)
		python --> oct(n)

C Implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,i,a[10];
    scanf("%d",&n);
    i=0;
    while(n!=0)
    {
        a[i++]=n%8;
        n=n/8;
    }
    for(i=i-1;i>=0;i--)
        printf("%d",a[i]);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt();
        System.out.println(Integer.toOctalString(n));
    }
}

python implementation:
---------------------
n=int(input())
print(oct(n)[2:])


P223: SUM OF ADJACENT ELEMENTS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of adjacent elements in the array

input ----> an array size and elements
output ---> array with sum of adjacent elements

Ex:
---
	5
	1 2 3 4 5

	output: 1 3 6 10 15

Logic:
------
		s=0
		for(i=0;i<n;i++)
		{
			s=s+a[i];
			print s
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,i,a[100],s;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    s=0;
    for(i=0;i<n;i++)
    {
        s=s+a[i];
        printf("%d ",s);
    }
    return 0;
}


java implementatioon:
---------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),i,a[]=new int[n],s=0;
        for(i=0;i<n;i++)
            a[i] = obj.nextInt();
        s=0;
        for(i=0;i<n;i++)
        {
            s=s+a[i];
            System.out.print(s+" ");
        }
    }
}


python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
s=0
for i in L:
    s=s+i
    print(s,end=' ')


P224: AIRPORT SECURITY
~~~~~~~~~~~~~~~~~~~~~~
Airport Security officials have confiscated several items of the passenger at the security checkpoint. All the items have been dumped into a huge box (array). Each item possessed a certain amount of risk (0, 1, 2). Here is the risk severity of the item representing an array [] of N number of integer values. The risk here is to sort the item based on their level of risk values range from 0 to 2.

input --------> array size and elements
output -------> sorted items based on risk

Ex:
---
	5
	0 2 1 2 0 -----> 0 0 1 2 2

Logic:
------
		for(i=0;i<n;i++)
		{
			for(j=i+1;j<n;j++)
			{
				if(a[i]>a[j]){
					t=a[i];
					a[i]=a[j];
					a[j]=t;
				}
			}
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[100],n,i,j,t;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
    {
        for(j=i+1;j<n;j++)
        {
            if(a[i]>a[j]){
                t=a[i];
                a[i]=a[j];
                a[j]=t;
            }
        }
    }
    for(i=0;i<n;i++)
        printf("%d ",a[i]);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),a[]=new int[n],i;
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        Arrays.sort(a);
        for(i=0;i<n;i++)
            System.out.print(a[i]+" ");
    }
}

python implementation:
----------------------
n=int(input())
L=[int(i) for i in input().split()]
L.sort()
for i in L:
    print(i,end=' ')

P225: CHOCOLATE FACTORY
~~~~~~~~~~~~~~~~~~~~~~~
A chocolate factory is packing chocolates into the packets. The chocolate packets here represent an array of n number of integer values. The task is to find the empty packets (0) of chocolate and push it to the end of the conveyor belt (array).

input -------> array size and elements
output ------> updated array

Ex:
---
	5
	10 0 20 0 0

	output ---> 10 20 0 0 0

Logic:
------
		for(i=0;i<n;i++)
		{
			if(a[i]!=0)
				print a[i]
		}
		for(i=0;i<n;i++)
		{
			if(a[i]==0)
				print a[i]
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[100],i,n;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(i=0;i<n;i++)
    {
        if(a[i]!=0)
            printf("%d ",a[i]);
    }
    for(i=0;i<n;i++)
    {
        if(a[i]==0)
            printf("%d ",a[i]);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        
        int n=obj.nextInt(),i,a[]=new int[n];
        for(i=0;i<n;i++)
            a[i]=obj.nextInt();
        
        for(i=0;i<n;i++)
        {
            if(a[i]!=0)
                System.out.print(a[i]+" ");
        }
        for(i=0;i<n;i++)
        {
            if(a[i]==0)
                System.out.print(a[i]+" ");
        }
    }
}

python implementation:
---------------------
n=int(input())
L=[int(i) for i in input().split()]
for i in L:
    if i!=0:
        print(i,end=' ')
for i in L:
    if i==0:
        print(i,end=' ')

P226: READING AND WRITING MATRIX ELEMENTS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Program to read matrix elements of order n x m and display on the console.

input ---------> A matrix of order n x m. 
output --------> Print the same matrix

Ex:
---
	3
	3
	1 2 3
	4 5 6 
	7 8 9

	output:
	1 2 3
	4 5 6
	7 8 9

Logic:
------
	read 'n' value
	read 'm' value
	for(i=0;i<n;i++)
	{
		for(j=0;j<m;j++)
		{
			read a[i][j]
		}
	}
	for(i=0;i<n;i++)
	{
		for(j=0;j<m;j++)
		{
			print a[i][j]
		}
	}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,m,i,j,a[5][5];
    scanf("%d",&n);
    scanf("%d",&m);
    for(i=0;i<n;i++)
    {
        for(j=0;j<m;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    for(i=0;i<n;i++)
    {
        for(j=0;j<m;j++)
        {
            printf("%d ",a[i][j]);
        }
        printf("\n");
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),m=obj.nextInt(),i,j,a[][]=new int[n][m];
        for(i=0;i<n;i++)
        {
            for(j=0;j<m;j++)
            {
                a[i][j] = obj.nextInt();
            }
        }
        for(i=0;i<n;i++)
        {
            for(j=0;j<m;j++)
            {
                System.out.print(a[i][j]+" ");
            }
            System.out.println();
        }
    }
}

python implementation:
---------------------
n=int(input())
m=int(input())
LL=[]
for i in range(n):
    L=[int(i) for i in input().split()]
    LL.append(L)
for i in range(n):
    for j in range(m):
        print(LL[i][j],end=' ')
    print()

P227: SUM OF ALL MATRIX ELEMENTS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Program to read matrix elements and find sum of all elements in the matrix.

input ---------> A matrix of order n x m. 
output --------> Print sum of matrix elements

Ex:
---
	3
	3
	1 2 3
	4 5 6 
	7 8 9

	output:
	
	45

Logic:
------
	read 'n' value
	read 'm' value
	for(i=0;i<n;i++)
	{
		for(j=0;j<m;j++)
		{
			read a[i][j]
		}
	}
	sum=0;
	for(i=0;i<n;i++)
	{
		for(j=0;j<m;j++)
		{
			sum=sum+a[i][j]
		}
	}
	print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int n,m,i,j,a[5][5],sum;
    scanf("%d",&n);
    scanf("%d",&m);
    for(i=0;i<n;i++)
    {
        for(j=0;j<m;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    sum=0;
    for(i=0;i<n;i++)
    {
        for(j=0;j<m;j++)
        {
            sum=sum+a[i][j];
        }
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n=obj.nextInt(),m=obj.nextInt(),i,j,a[][]=new int[n][m];
        for(i=0;i<n;i++)
        {
            for(j=0;j<m;j++)
            {
                a[i][j] = obj.nextInt();
            }
        }
        int sum=0;
        for(i=0;i<n;i++)
        {
            for(j=0;j<m;j++)
            {
                sum=sum+a[i][j];
            }
        }
        System.out.println(sum);
    }
}

python implementation:
---------------------
n=int(input())
m=int(input())
LL=[]
for i in range(n):
    L=[int(i) for i in input().split()]
    LL.append(L)
sum=0
for i in range(n):
    for j in range(m):
        sum=sum+LL[i][j]
print(sum)

P228: SUM OF ALL EVEN ELEMENTS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Write a program to find sum of all even elements in the matrix.

input --------> a 3x3 matrix
output -------> sum of all even elements

Ex:
---
	1 2 3
	4 5 6 
	7 8 9

	output:
	
	20

Logic:
------
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			read a[i][j]
		}
	}
	sum=0;
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			if(a[i][j]%2==0)
				sum=sum+a[i][j]
		}
	}
	print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,a[3][3],sum;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    sum=0;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if(a[i][j]%2==0)
                sum=sum+a[i][j];
        }
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j,a[][]=new int[3][3];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j] = obj.nextInt();
            }
        }
        int sum=0;
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                if(a[i][j]%2==0)
                    sum=sum+a[i][j];
            }
        }
        System.out.println(sum);
    }
}

python implementation:
---------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
sum=0
for i in range(3):
    for j in range(3):
        if LL[i][j]%2==0:
            sum=sum+LL[i][j]
print(sum)

P229: SUM OF ALL ODD ELEMENTS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Write a program to find sum of all odd elements in the matrix.

input --------> a 3x3 matrix
output -------> sum of all odd elements

Ex:
---
	1 2 3
	4 5 6 
	7 8 9

	output:
	
	25

Logic:
------
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			read a[i][j]
		}
	}
	sum=0;
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			if(a[i][j]%2!=0)
				sum=sum+a[i][j]
		}
	}
	print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,a[3][3],sum;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    sum=0;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if(a[i][j]%2!=0)
                sum=sum+a[i][j];
        }
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j,a[][]=new int[3][3];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j] = obj.nextInt();
            }
        }
        int sum=0;
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                if(a[i][j]%2!=0)
                    sum=sum+a[i][j];
            }
        }
        System.out.println(sum);
    }
}

python implementation:
---------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
sum=0
for i in range(3):
    for j in range(3):
        if LL[i][j]%2!=0:
            sum=sum+LL[i][j]
print(sum)


P230: SUM OF ALL PRIME ELEMENTS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Write a program to find sum of all prime elements in the matrix.

input --------> a 3x3 matrix
output -------> sum of all prime elements

Ex:
---
	1 2 3
	4 5 6 
	7 8 9

	output:
	
	17
	

Logic:
------
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			read a[i][j]
		}
	}
	sum=0;
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			if(isprime(a[i][j]))
				sum=sum+a[i][j]
		}
	}
	print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int isprime(int n)
{
    int f=0,i;
    for(i=1;i<=n;i++)
    {
        if(n%i==0)
            f++;
    }
    return f==2;
}

int main() {
    int i,j,a[3][3],sum;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    sum=0;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if(isprime(a[i][j]))
                sum=sum+a[i][j];
        }
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static boolean isprime(int n)
    {
        int i,f=0;
        for(i=1;i<=n;i++)
        {
            if(n%i==0)
                f++;
        }
        return f==2;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j,a[][]=new int[3][3];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j] = obj.nextInt();
            }
        }
        int sum=0;
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                if(isprime(a[i][j]))
                    sum=sum+a[i][j];
            }
        }
        System.out.println(sum);
    }
}

python implementation:
---------------------
def isprime(n):
    f=0
    for i in range(1,n+1):
        if n%i==0:
            f=f+1
    return f==2

LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
sum=0
for i in range(3):
    for j in range(3):
        if isprime(LL[i][j]):
            sum=sum+LL[i][j]
print(sum)

P231: ROW WISE SUM IN MATRIX
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Write a program to find row wise sum in the matrix.

input --------> a 3x3 matrix
output -------> sum of each row

Ex:
---
	1 2 3
	4 5 6
	7 8 9

	1+2+3 ==> 6
	4+5+6 ==> 15
	7+8+9 ==> 24

Logic:
------
		for(i=0;i<3;i++)
		{
			sum=0;
			for(j=0;j<3;j++)
			{
				sum=sum+a[i][j];
			}
			print sum
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[3][3],i,j,s=0;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    for(i=0;i<3;i++)
    {
        s=0;
        for(j=0;j<3;j++)
            s=s+a[i][j];
        printf("%d\n",s);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a[][]=new int[3][3],i,j,s;
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j]=obj.nextInt();
            }
        }
        for(i=0;i<3;i++)
        {
            s=0;
            for(j=0;j<3;j++)
                s=s+a[i][j];
            System.out.println(s);
        }
    }
}

python implementation:
----------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
for i in range(3):
    s=0
    for j in range(3):
        s=s+LL[i][j]
    print(s)

P232: COLUMN WISE SUM IN MATRIX
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Write a program to find column wise sum in the matrix.

input --------> a 3x3 matrix
output -------> sum of each column

Ex:
---
	1 2 3
	4 5 6
	7 8 9

	1+4+7 ==> 12
	2+5+8 ==> 15
	3+6+9 ==> 18

Logic:
------
		for(i=0;i<3;i++)
		{
			sum=0;
			for(j=0;j<3;j++)
			{
				sum=sum+a[j][i];
			}
			print sum
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[3][3],i,j,s=0;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    for(i=0;i<3;i++)
    {
        s=0;
        for(j=0;j<3;j++)
            s=s+a[j][i];
        printf("%d\n",s);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a[][]=new int[3][3],i,j,s;
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j]=obj.nextInt();
            }
        }
        for(i=0;i<3;i++)
        {
            s=0;
            for(j=0;j<3;j++)
                s=s+a[j][i];
            System.out.println(s);
        }
    }
}

python implementation:
----------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
for i in range(3):
    s=0
    for j in range(3):
        s=s+LL[j][i]
    print(s)


P233: SUM OF DIAGONAL ELEMENTS IN MATRIX
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Write a program to find sum of diagonal elements in matrix.

input --------> a 3x3 matrix
output -------> sum of diagonal elements

Ex:
---
	1 2 3
	4 5 6 
	7 8 9

	output:
	
	1+5+9 ---> 15

Logic:
------
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			read a[i][j]
		}
	}
	sum=0;
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			if(i==j)
				sum=sum+a[i][j]
		}
	}
	print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,a[3][3],sum;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    sum=0;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if(i==j)
                sum=sum+a[i][j];
        }
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j,a[][]=new int[3][3];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j] = obj.nextInt();
            }
        }
        int sum=0;
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                if(i==j)
                    sum=sum+a[i][j];
            }
        }
        System.out.println(sum);
    }
}

python implementation:
---------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
sum=0
for i in range(3):
    for j in range(3):
        if i==j:
            sum=sum+LL[i][j]
print(sum)

P234: SUM OF OPPOSITE DIAGONAL ELEMENTS IN MATRIX
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Write a program to find sum of opposite diagonal elements in matrix.

input --------> a 3x3 matrix
output -------> sum of opposite diagonal elements

Ex:
---
	1 2 3
	4 5 6 
	7 8 9

	output:
	
	3+5+7 ---> 15

Logic:
------
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			read a[i][j]
		}
	}
	sum=0;
	for(i=0;i<3;i++)
	{
		sum=sum+a[i][3-i-1]
	}
	print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,a[3][3],sum;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    sum=0;
    for(i=0;i<3;i++)
    {
        sum=sum+a[i][3-i-1]
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j,a[][]=new int[3][3];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j] = obj.nextInt();
            }
        }
        int sum=0;
        for(i=0;i<3;i++)
        {
            sum=sum+a[i][3-i-1]
        }
        System.out.println(sum);
    }
}

python implementation:
---------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
print(LL[0][0]+LL[2][2])

P235: SUM OF FIRST AND LAST ELEMENT IN THE MATRIX
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Write a program to find sum of first and last element in a matrix.

input --------> a 3x3 matrix
output -------> sum of first and last element in matrix

Ex:
---
	1 2 3
	4 5 6
	7 8 9

	output---> 1+9=10

Logic:
------
		print a[0][0]+a[2][2]

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,a[3][3];
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    printf("%d",a[0][0]+a[2][2]);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j,a[][]=new int[3][3];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j] = obj.nextInt();
            }
        }
        System.out.println(a[0][0]+a[2][2]);
    }
}

python implementation:
---------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
print(LL[0][0]+LL[2][2])

P236: FIND THE PRODUCT OF DIAGONAL MATRIX
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Write a program to find the product of diagonal matrix.

input --------> a 3x3 matrix
output -------> find the product of diagonal matrix

Ex:
---
	1 2 3
	4 5 6 
	7 8 9

	output:
	
	1+5+9 ---> 15

Logic:
------
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			read a[i][j]
		}
	}
	pro=1;
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			if(i==j)
				pro=pro*a[i][j]
		}
	}
	print pro

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,a[3][3],pro;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    pro=1;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if(i==j)
                pro=pro*a[i][j];
        }
    }
    printf("%d",pro);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j,a[][]=new int[3][3];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j] = obj.nextInt();
            }
        }
        int pro=1;
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                if(i==j)
                    pro=pro*a[i][j];
            }
        }
        System.out.println(pro);
    }
}

python implementation:
---------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
pro=1
for i in range(3):
    for j in range(3):
        if i==j:
            pro=pro*LL[i][j]
print(pro)


P237: FIND THE PRODUCT OF OPPOSITE DIAGONAL MATRIX
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Write a program to find the product of opposite diagonal matrix.

input --------> a 3x3 matrix
output -------> find the product of opposite diagonal matrix

Ex:
---
	1 2 3
	4 5 6 
	7 8 9

	output:
	
	3*5*7 ---> 45

Logic:
------
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			read a[i][j]
		}
	}
	pro=1;
	for(i=0;i<3;i++)
	{
		pro=pro*a[i][3-i-1]
	}
	print pro

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,a[3][3],pro;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    pro=1;
    for(i=0;i<3;i++)
    {
        pro=pro*a[i][3-i-1]
    }
    printf("%d",pro);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j,a[][]=new int[3][3];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j] = obj.nextInt();
            }
        }
        int pro=1;
        for(i=0;i<3;i++)
        {
            pro=pro*a[i][3-i-1]
        }
        System.out.println(pro);
    }
}

python implementation:
---------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
prod=1
for i in range(3):
    prod=prod*LL[i][3-i-1]
print(prod)

P238: MAX ELEMENT IN MATRIX
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print max element in an matrix

input -----> a 3x3 matrix
output ----> max element in matrix

Ex:
---
	1 2 3
	4 5 6
	7 8 9

	max=9

Logic:
------
	m=a[0][0]
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			if(m<a[i][j])
				m=a[i][j]
		}
	}
	print m

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[3][3],m,i,j;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    m=a[0][0];
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if(m<a[i][j])
                m=a[i][j];
        }
    }
    printf("%d",m);
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a[][]=new int[3][3],i,j,m;
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j]=obj.nextInt();
            }
        }
        m=a[0][0];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                if(m<a[i][j])
                    m=a[i][j];
            }
        }
        System.out.println(m);
    }
}

python implementation:
----------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
m=LL[0][0]
for i in range(3):
    for j in range(3):
        if m<LL[i][j]:
            m=LL[i][j]
print(m)

P239: MIN ELEMENT IN MATRIX 
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print min element in an matrix

input -----> a 3x3 matrix
output ----> min element in matrix

Ex:
---
	1 2 3
	4 5 6
	7 8 9

	max=9

Logic:
------
	m=a[0][0]
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			if(m>a[i][j])
				m=a[i][j]
		}
	}
	print m

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[3][3],m,i,j;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    m=a[0][0];
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if(m>a[i][j])
                m=a[i][j];
        }
    }
    printf("%d",m);
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a[][]=new int[3][3],i,j,m;
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j]=obj.nextInt();
            }
        }
        m=a[0][0];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                if(m>a[i][j])
                    m=a[i][j];
            }
        }
        System.out.println(m);
    }
}

python implementation:
----------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
m=LL[0][0]
for i in range(3):
    for j in range(3):
        if m>LL[i][j]:
            m=LL[i][j]
print(m)

P240: MAX ELEMENT IN ROW OF A MATRIX
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print max element in each row of a matrix

input -----> a 3x3 matrix
output ----> print max element in each row of a matrix

Ex:
---
	1 2 3
	4 5 6
	7 8 9

	output:
	3
	6
	9

Logic:
------
	for(i=0;i<3;i++)
	{
		m=a[i][0];
		for(j=0;j<3;j++)
		{
			if(m<a[i][j])
				m=a[i][j];
		}
		print m
	}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[3][3],m,i,j;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    for(i=0;i<3;i++)
    {
        m=a[i][0];
        for(j=0;j<3;j++)
        {
            if(m<a[i][j])
                m=a[i][j];
        }
        printf("%d\n",m);
    }
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a[][]=new int[3][3],i,j,m;
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j]=obj.nextInt();
            }
        }
        for(i=0;i<3;i++)
        {
            m=a[i][0];
            for(j=0;j<3;j++)
            {
                if(m<a[i][j])
                    m=a[i][j];
            }
            System.out.println(m);
        }
    }
}

python implementation:
----------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
for i in range(3):
    m=LL[i][0]
    for j in range(3):
        if m<LL[i][j]:
            m=LL[i][j]
    print(m)



P241: MIN ELEMENT IN EACH ROW OF A MATRIX
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print min element in each row of a matrix


input -----> a 3x3 matrix
output ----> print min element in each row of a matrix

Ex:
---
	1 2 3
	4 5 6
	7 8 9

	output:
	1
	4
	7

Logic:
------
	for(i=0;i<3;i++)
	{
		m=a[i][0];
		for(j=0;j<3;j++)
		{
			if(m>a[i][j])
				m=a[i][j];
		}
		print m
	}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[3][3],m,i,j;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    for(i=0;i<3;i++)
    {
        m=a[i][0];
        for(j=0;j<3;j++)
        {
            if(m>a[i][j])
                m=a[i][j];
        }
        printf("%d\n",m);
    }
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a[][]=new int[3][3],i,j,m;
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j]=obj.nextInt();
            }
        }
        for(i=0;i<3;i++)
        {
            m=a[i][0];
            for(j=0;j<3;j++)
            {
                if(m>a[i][j])
                    m=a[i][j];
            }
            System.out.println(m);
        }
    }
}

python implementation:
----------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
for i in range(3):
    m=LL[i][0]
    for j in range(3):
        if m>LL[i][j]:
            m=LL[i][j]
    print(m)


P242: TRANSPOSE OF THE GIVEN MATRIX
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to print transpose of a matrix


input -----> a 3x3 matrix
output ----> print transpose of the matrix

Ex:
---
	1 2 3
	4 5 6 
	7 8 9

	output:
	1 4 7
	2 5 8
	3 6 9

Logic:
------
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			print a[j][i]
		}
	}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[3][3],i,j;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d ",a[j][i]);
        }
        printf("\n");
    }
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a[][]=new int[3][3],i,j;
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j]=obj.nextInt();
            }
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                System.out.print(a[j][i]+" ");
            }
            System.out.println();
        }
    }
}

python implementation:
---------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
for i in range(3):
    for j in range(3):
        print(LL[j][i],end=' ')
    print()


P243: TRACE OF THE GIVEN MATRIX
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find trace(sum of diagonal elements) of the given matrix.


input -----> a 3x3 matrix
output ----> print trace of the matrix

Ex:
---
	1 2 3
	4 5 6 
	7 8 9

	output:
	
	1+5+9 ---> 15

Logic:
------
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			read a[i][j]
		}
	}
	sum=0;
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			if(i==j)
				sum=sum+a[i][j]
		}
	}
	print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,a[3][3],sum;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    sum=0;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if(i==j)
                sum=sum+a[i][j];
        }
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j,a[][]=new int[3][3];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j] = obj.nextInt();
            }
        }
        int sum=0;
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                if(i==j)
                    sum=sum+a[i][j];
            }
        }
        System.out.println(sum);
    }
}

python implementation:
---------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
sum=0
for i in range(3):
    for j in range(3):
        if i==j:
            sum=sum+LL[i][j]
print(sum)


P244: FIND THE FREQUENCY OF ODD AND EVEN
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Write a program to find frequency of odd and even elements in the matrix excluding 0.

input ------> a 3x3 matrix
output -----> odd elements and even elements count

Ex:
---
	1 2 3 
	4 5 6
	7 8 9

	output:
	-------
	5
	4

Logic:
------
		for(i=0;i<3;i++)
		{
			for(j=0;j<3;j++)
			{
				if(a[i][j]%2==0)
					ec++;
				else
					oc++;
			}
		}
		print oc
		print ec

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[3][3],i,j,ec=0,oc=0;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if(a[i][j]%2==0 && a[i][j]!=0)
                ec++;
            if(a[i][j]%2!=0)
                oc++;
        }
    }
    printf("%d\n%d",oc,ec);
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a[][]=new int[3][3],i,j,ec=0,oc=0;
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j]=obj.nextInt();
            }
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                if(a[i][j]%2==0 && a[i][j]!=0)
                    ec++;
                if(a[i][j]%2!=0)
                    oc++;
            }
        }
        System.out.println(oc);
        System.out.println(ec);
    }
}

python implementation:
----------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
ec=0
oc=0
for i in range(3):
    for j in range(3):
        if LL[i][j]%2==0 and LL[i][j]!=0:
            ec=ec+1
        if LL[i][j]%2!=0:
            oc=oc+1
print(oc)
print(ec)


P245: IDENTITY MATRIX
~~~~~~~~~~~~~~~~~~~~~
Implement a program to check whether the given matrix is identity matrix or not

input -------> a 3x3 matrix
output ------> Yes or No

Ex:
---
	1 0 0 
	0 1 0
	0 0 1

	Yes

	1 2 3
	4 5 6
	7 8 9

	No

Logic:
------
	flag=1
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			if(i==j && a[i][j]!=1)
			{
				flag=0;
				break;
			}
			if(i!=j && a[i][j]!=0)
			{
				flag=0;
				break;
			}
		}
	}
	if flag==1 then print Yes else No

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,flag=1,a[3][3];
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if(i==j && a[i][j]!=1)
            {
                flag=0;
                break;
            }
            if(i!=j && a[i][j]!=0)
            {
                flag=0;
                break;
            }
        }
    }
    printf((flag==1)?"Yes":"No");
    return 0;
}

java implementation:
---------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j,a[][]=new int[3][3];
        boolean flag=true;
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j]=obj.nextInt();
            }
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                if(i==j && a[i][j]!=1)
                {
                    flag=false;
                    break;
                }
                if(i!=j && a[i][j]!=0)
                {
                    flag=false;
                    break;
                }
            }
        }
        System.out.println((flag)?"Yes":"No");
    }
}

python implementation:
---------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
flag=True
for i in range(3):
    for j in range(3):
        if i==j and LL[i][j]!=1:
            flag=False
            break
        if i!=j and LL[i][j]!=0:
            flag=False
            break
print("Yes" if flag==True else "No")

P246: TWO MATRICES ARE EQUAL OR NOT
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to check whether the given matrices are equal or not

input -------> a 3x3 matrix
output ------> Yes or No

Ex:
---
	1 2 3
	4 5 6
	7 8 9
	1 2 3
	4 5 6
	7 8 9

	Yes

Logic:
------
	flag=True
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			if(a[i][j]!=b[i][j])
			{
				flag=False;
				break
			}
		}
	}
	if flag==True then print "Yes" else "No"

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,flag=1,a[3][3],b[3][3];
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&b[i][j]);
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if(a[i][j]!=b[i][j])
            {
                flag=0;
                break;
            }
        }
    }
    printf((flag==1)?"Yes":"No");
    return 0;
}


java implementation:
-------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a[][]=new int[3][3],b[][]=new int[3][3],i,j;
        boolean flag=true;
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j]=obj.nextInt();
            }
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                b[i][j]=obj.nextInt();
            }
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                if(a[i][j]!=b[i][j])
                {
                    flag=false;
                    break;
                }
            }
        }
        System.out.println((flag)?"Yes":"No");
    }
}

python implementation:
---------------------
LL1=[]
LL2=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL1.append(L)
for i in range(3):
    L=[int(i) for i in input().split()]
    LL2.append(L)
print("Yes" if LL1==LL2 else "No")

P247: ADDITION OF TWO MATRICES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Write a program to perform addition operation on two matrices

input --------> two 3x3 matrices
output -------> resultent matrix

Ex:
---
	1 2 3 
	4 5 6
	7 8 9

	1 0 0
	0 1 0
	0 0 1

	Result

	2 2 3
	4 6 6
	7 8 10

Logic:
------
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			c[i][j] = a[i][j] + b[i][j];
		}
	}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[3][3],b[3][3],c[3][3],i,j;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&b[i][j]);
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            c[i][j] = a[i][j] + b[i][j];
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d ",c[i][j]);
        }
        printf("\n");
    }
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j;
        int a[][] = new int[3][3];
        int b[][] = new int[3][3];
        int c[][] = new int[3][3];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j] = obj.nextInt();
            }
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                b[i][j] = obj.nextInt();
            }
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
               c[i][j] = a[i][j] + b[i][j];
            }
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                System.out.print(c[i][j]+" ");
            }
            System.out.println();
        }
    }
}

python implementation:
----------------------
LL1=[]
LL2=[]
LL3=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL1.append(L)
for i in range(3):
    L=[int(i) for i in input().split()]
    LL2.append(L)
for i in range(3):
    L=[]
    for j in range(3):
        L.append(LL1[i][j]+LL2[i][j])
    LL3.append(L)

for i in range(3):
    for j in range(3):
        print(LL3[i][j],end=' ')
    print()

P248: SUBTRACTION OF TWO MATRICES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Write a program to perform subtraction operation on two matrices

input --------> two 3x3 matrices
output -------> resultent matrix

Ex:
---
	1 2 3 
	4 5 6
	7 8 9

	1 0 0
	0 1 0
	0 0 1

	Result

	0 2 3
	4 4 6
	7 8 8

Logic:
------
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			c[i][j] = a[i][j] - b[i][j];
		}
	}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[3][3],b[3][3],c[3][3],i,j;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&b[i][j]);
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            c[i][j] = a[i][j] - b[i][j];
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d ",c[i][j]);
        }
        printf("\n");
    }
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j;
        int a[][] = new int[3][3];
        int b[][] = new int[3][3];
        int c[][] = new int[3][3];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j] = obj.nextInt();
            }
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                b[i][j] = obj.nextInt();
            }
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
               c[i][j] = a[i][j] - b[i][j];
            }
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                System.out.print(c[i][j]+" ");
            }
            System.out.println();
        }
    }
}

python implementation:
----------------------
LL1=[]
LL2=[]
LL3=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL1.append(L)
for i in range(3):
    L=[int(i) for i in input().split()]
    LL2.append(L)
for i in range(3):
    L=[]
    for j in range(3):
        L.append(LL1[i][j]-LL2[i][j])
    LL3.append(L)

for i in range(3):
    for j in range(3):
        print(LL3[i][j],end=' ')
    print()

P249: MULTIPLICATION OF TWO MATRICES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Write a program to perform multiplication operation on two matrices

input --------> two 3x3 matrices
output -------> resultent matrix

Ex:
---
	1 2 3
	4 5 6
	7 8 9

	1 0 0
	0 1 0
	0 0 1

	1 2 3
	4 5 6
	7 8 9

Logic:
------
		for(i=0;i<3;i++)
		{
			for(j=0;j<3;j++)
			{
				c[i][j] = 0;
				for(k=0;k<3;k++)
				{
					c[i][j] = c[i][j] + (a[i][k]*b[k][j]);
				}
			}
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[3][3],b[3][3],c[3][3],i,j,k;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&b[i][j]);
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            c[i][j] = 0;
            for(k=0;k<3;k++)
            {
                c[i][j]=c[i][j]+(a[i][k]*b[k][j]);
            }
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d ",c[i][j]);
        }
        printf("\n");
    }
    return 0;
}


java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j,k;
        int a[][] = new int[3][3];
        int b[][] = new int[3][3];
        int c[][] = new int[3][3];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j] = obj.nextInt();
            }
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                b[i][j] = obj.nextInt();
            }
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
               c[i][j] = 0;
                for(k=0;k<3;k++)
                {
                    c[i][j] = c[i][j] + (a[i][k]*b[k][j]);
                }
            }
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                System.out.print(c[i][j]+" ");
            }
            System.out.println();
        }
    }
}

python implementation:
----------------------
LL1=[]
LL2=[]
LL3=[[0,0,0],[0,0,0],[0,0,0]]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL1.append(L)
for i in range(3):
    L=[int(i) for i in input().split()]
    LL2.append(L)
for i in range(3):
    for j in range(3):
        LL3[i][j]=0
        for k in range(3):
            LL3[i][j] = LL3[i][j] + (LL1[i][k]*LL2[k][j])

for i in range(3):
    for j in range(3):
        print(LL3[i][j],end=' ')
    print()

P250: SORT ALL THE ELEMENTS IN MATRIX IN ASC ORDER
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Implement a program to sort all the elements in asc order in the matrix

input -------> a matrix
output ------> result matrix

Ex:
---
	3 1 2
	5 6 4
	7 8 9

	1 2 3
	4 5 6
	7 8 9

Logic:
------
	convert matrix into array
	sort the array
	re-convert array into matrix

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,t,k=0,a[3][3],b[9];
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            b[k++]=a[i][j];
        }
    }
    for(i=0;i<9;i++)
    {
        for(j=i+1;j<9;j++)
        {
            if(b[i]>b[j])
            {
                t=b[i];
                b[i]=b[j];
                b[j]=t;
            }
        }
    }
    k=0;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            a[i][j]=b[k++];
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d ",a[i][j]);
        }
        printf("\n");
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j,k=0;
        int a[][]=new int[3][3];
        int b[]=new int[9];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j]=obj.nextInt();
            }
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                b[k++]=a[i][j];
            }
        }
        Arrays.sort(b);
        k=0;
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j]=b[k++];
            }
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                System.out.print(a[i][j]+" ");
            }
            System.out.println();
        }
    }
}

python implementation:
----------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)

LLL=[]
for i in range(3):
    for j in range(3):
        LLL.append(LL[i][j])
LLL.sort()
k=0
for i in range(3):
    for j in range(3):
        LL[i][j] = LLL[k]
        k=k+1

for i in range(3):
    for j in range(3):
        print(LL[i][j],end=' ')
    print()


P251: SORT ALL THE ELEMENTS IN MATRIX IN DESC ORDER
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to sort all the elements in desc in the matrix

input -------> a matrix
output ------> result matrix

Ex:
---
	3 1 2
	5 6 4
	7 8 9

	9 8 7
	6 5 4
	3 2 1

Logic:
------
	convert matrix into array
	sort the array in desc
	re-convert array into matrix

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,t,k=0,a[3][3],b[9];
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            b[k++]=a[i][j];
        }
    }
    for(i=0;i<9;i++)
    {
        for(j=i+1;j<9;j++)
        {
            if(b[i]<b[j])
            {
                t=b[i];
                b[i]=b[j];
                b[j]=t;
            }
        }
    }
    k=0;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            a[i][j]=b[k++];
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d ",a[i][j]);
        }
        printf("\n");
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j,k=0;
        int a[][]=new int[3][3];
        int b[]=new int[9];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j]=obj.nextInt();
            }
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                b[k++]=a[i][j];
            }
        }
        Arrays.sort(b);
        k=9-1;
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j]=b[k--];
            }
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                System.out.print(a[i][j]+" ");
            }
            System.out.println();
        }
    }
}

python implementation:
----------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)

LLL=[]
for i in range(3):
    for j in range(3):
        LLL.append(LL[i][j])
LLL.sort(reverse=True)
k=0
for i in range(3):
    for j in range(3):
        LL[i][j] = LLL[k]
        k=k+1

for i in range(3):
    for j in range(3):
        print(LL[i][j],end=' ')
    print()


P252: SORT ALL THE ELEMENTS IN A ROW IN ASC ORDER
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to sort all the row wise elements in asc order

input -------> a matrix
output ------> result matrix

Ex:
---
	3 1 2
	5 6 4
	7 8 1

	1 2 3
	4 5 6
	1 7 8

logic:
------
		for(i=0;i<3;i++)
		{
			for(j=0;j<3;j++)
			{
				for(k=j+1;k<3;k++)
				{
					if(a[i][j]>a[i][k])
					{
						t=a[i][j];
						a[i][j]=a[i][k];
						a[i][k]=t;
					}
				}
			}
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,t,a[3][3],k;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            for(k=j+1;k<3;k++)
            {
                if(a[i][j]>a[i][k])
                {
                    t=a[i][j];
                    a[i][j]=a[i][k];
                    a[i][k]=t;
                }
            }
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d ",a[i][j]);
        }
        printf("\n");
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j;
        int a[][]=new int[3][3];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j]=obj.nextInt();
            }
        }
        for(i=0;i<3;i++)
        {
            Arrays.sort(a[i]);
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                System.out.print(a[i][j]+" ");
            }
            System.out.println();
        }
    }
}

python implementation:
----------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)

for i in range(3):
    LL[i].sort()

for i in range(3):
    for j in range(3):
        print(LL[i][j],end=' ')
    print()

P253: SORT ALL THE ELEMENTS IN A ROW IN DESC ORDER
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to sort all the row wise elements in desc order

input -------> a matrix
output ------> result matrix

Ex:
---
	3 1 2
	5 6 4
	7 8 1

	3 2 1
	6 5 4
	8 7 1

logic:
------
		for(i=0;i<3;i++)
		{
			for(j=0;j<3;j++)
			{
				for(k=j+1;k<3;k++)
				{
					if(a[i][j]<a[i][k])
					{
						t=a[i][j];
						a[i][j]=a[i][k];
						a[i][k]=t;
					}
				}
			}
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,t,a[3][3],k;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            for(k=j+1;k<3;k++)
            {
                if(a[i][j]<a[i][k])
                {
                    t=a[i][j];
                    a[i][j]=a[i][k];
                    a[i][k]=t;
                }
            }
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d ",a[i][j]);
        }
        printf("\n");
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j;
        int a[][]=new int[3][3];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j]=obj.nextInt();
            }
        }
        for(i=0;i<3;i++)
        {
            Arrays.sort(a[i]);
        }
        for(i=0;i<3;i++)
        {
            for(j=3-1;j>=0;j--)
            {
                System.out.print(a[i][j]+" ");
            }
            System.out.println();
        }
    }
}

python implementation:
----------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)

for i in range(3):
    LL[i].sort(reverse=True)

for i in range(3):
    for j in range(3):
        print(LL[i][j],end=' ')
    print()


P254: SORT ALL THE ELEMENTS IN A COL IN ASC ORDER
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to sort all the column values in asc order

input -------> a matrix
output ------> result matrix

Ex:
---
	3 1 2
	5 6 4
	7 8 1

	3 1 1
	5 6 2
	7 8 4

logic:
------
		content of a into b

		for(i=0;i<3;i++)
		{
			for(j=0;j<3;j++)
			{
				for(k=j+1;k<3;k++)
				{
					if(b[i][j]>b[i][k])
					{
						t=b[i][j];
						b[i][j]=b[i][k];
						b[i][k]=t;
					}
				}
			}
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,t,a[3][3],b[3][3],k;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            b[i][j]=a[j][i];
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            for(k=j+1;k<3;k++)
            {
                if(b[i][j]>b[i][k])
                {
                    t=b[i][j];
                    b[i][j]=b[i][k];
                    b[i][k]=t;
                }
            }
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d ",b[j][i]);
        }
        printf("\n");
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j;
        int a[][]=new int[3][3];
        int b[][]=new int[3][3];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j]=obj.nextInt();
            }
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                b[i][j]=a[j][i];
            }
        }
        for(i=0;i<3;i++)
        {
            Arrays.sort(b[i]);
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                System.out.print(b[j][i]+" ");
            }
            System.out.println();
        }
    }
}

python implementation:
----------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
    
LLL= [[0,0,0],[0,0,0],[0,0,0]]

for i in range(3):
    for j in range(3):
        LLL[i][j]=LL[j][i]

for i in range(3):
    LLL[i].sort()

for i in range(3):
    for j in range(3):
        print(LLL[j][i],end=' ')
    print()


P255: SORT ALL THE ELEMENTS IN A COL IN DESC ORDER
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to sort the all the column values in desc order

input -------> a matrix
output ------> result matrix

Ex:
---
	3 1 2
	5 6 4
	7 8 1

	7 8 4
	5 6 2
	3 1 1

logic:
------
		content of a into b

		for(i=0;i<3;i++)
		{
			for(j=0;j<3;j++)
			{
				for(k=j+1;k<3;k++)
				{
					if(b[i][j]<b[i][k])
					{
						t=b[i][j];
						b[i][j]=b[i][k];
						b[i][k]=t;
					}
				}
			}
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,t,a[3][3],b[3][3],k;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            b[i][j]=a[j][i];
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            for(k=j+1;k<3;k++)
            {
                if(b[i][j]<b[i][k])
                {
                    t=b[i][j];
                    b[i][j]=b[i][k];
                    b[i][k]=t;
                }
            }
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d ",b[j][i]);
        }
        printf("\n");
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j;
        int a[][]=new int[3][3];
        int b[][]=new int[3][3];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j]=obj.nextInt();
            }
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                b[i][j]=a[j][i];
            }
        }
        for(i=0;i<3;i++)
        {
            Arrays.sort(b[i]);
        }
        for(i=0;i<3;i++)
        {
            for(j=3-1;j>=0;j--)
            {
                System.out.print(b[j][i]+" ");
            }
            System.out.println();
        }
    }
}

python implementation:
----------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
    
LLL= [[0,0,0],[0,0,0],[0,0,0]]

for i in range(3):
    for j in range(3):
        LLL[i][j]=LL[j][i]

for i in range(3):
    LLL[i].sort(reverse=True)

for i in range(3):
    for j in range(3):
        print(LLL[j][i],end=' ')
    print()


P256: SPARSE MATRIX
~~~~~~~~~~~~~~~~~~~
Implement a program to check whether the given matrix is sparse matrix or not.
Note: a sparse matrix is a matrix with the majority of its elements equal to zero.

input---------> a matrix
output -------> Yes or No

Ex:
---
	1 2 3
	4 5 6
	7 8 9

	No

	1 2 3
	4 0 0 
	0 0 0

	Yes

Logic:
------
		c=0;
		for(i=0;i<3;i++)
		{
			for(j=0;j<3;j++)
			{
				if(a[i][j]==0)
					c++;
			}
		}

		if c>=5 then 'Yes' else 'No'

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,c=0,a[3][3];
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if(a[i][j]==0)
            {
                c++;
            }
        }
    }
    printf((c>=5)?"Yes":"No");
    return 0;
}


java implementation:
-------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a[][]=new int[3][3],i,j;
        int c=0;
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j]=obj.nextInt();
            }
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                if(a[i][j]==0)
                {
                    c++;
                }
            }
        }
        System.out.println((c>=2)?"Yes":"No");
    }
}

python implementation:
---------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
c=0
for i in range(3):
    for j in range(3):
        if LL[i][j]==0:
            c=c+1
            
print("Yes" if c>=5 else "No")

P257: SWAPING OF TWO ROWS
~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to swap two given rows.

input -------> matrix and m and n values
output ------> modified matrix

Ex:
---
	1 2 3
	4 5 6
	7 8 9
	1
	3

	7 8 9
	4 5 6
	1 2 3

Logic:
------
		for(i=0;i<3;i++)
		{
			t=a[m-1][i];
			a[m-1][i]=a[n-1][i];
			a[n-1][i]=temp
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,a[3][3],temp,m,n;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    scanf("%d %d",&m,&n);
    for(i=0;i<3;i++)
    {
        temp=a[m-1][i];
        a[m-1][i]=a[n-1][i];
        a[n-1][i]=temp;
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d ",a[i][j]);
        }
        printf("\n");
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j,temp,m,n;
        int a[][]=new int[3][3];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j]=obj.nextInt();
            }
        }
        m=obj.nextInt();
        n=obj.nextInt();
        for(i=0;i<3;i++)
        {
            temp=a[m-1][i];
            a[m-1][i]=a[n-1][i];
            a[n-1][i]=temp;
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                System.out.print(a[i][j]+" ");
            }
            System.out.println();
        }
    }
}

python implementation:
----------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
m=int(input())
n=int(input())
LL[m-1],LL[n-1]=LL[n-1],LL[m-1]

for i in range(3):
    for j in range(3):
        print(LL[i][j],end=' ')
    print()


P258: SWAPING OF TWO COLUMNS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to swap two given columns

input -------> matrix and m and n values
output ------> modified matrix

Ex:
---
	1 2 3
	4 5 6
	7 8 9
	1
	3

	3 2 1
	6 5 4
	9 8 7

Logic:
------
		for(i=0;i<3;i++)
		{
			t=a[i][m-1];
			a[i][m-1]=a[i][n-1];
			a[i][n-1]=temp
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,a[3][3],temp,m,n;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    scanf("%d %d",&m,&n);
    for(i=0;i<3;i++)
    {
        temp=a[i][m-1];
        a[i][m-1]=a[i][n-1];
        a[i][n-1]=temp;
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d ",a[i][j]);
        }
        printf("\n");
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j,temp,m,n;
        int a[][]=new int[3][3];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j]=obj.nextInt();
            }
        }
        m=obj.nextInt();
        n=obj.nextInt();
        for(i=0;i<3;i++)
        {
            temp=a[i][m-1];
        	a[i][m-1]=a[i][n-1];
        	a[i][n-1]=temp;
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                System.out.print(a[i][j]+" ");
            }
            System.out.println();
        }
    }
}

python implementation:
----------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
m=int(input())
n=int(input())

for i in range(3):
    LL[i][m-1],LL[i][n-1] = LL[i][n-1],LL[i][m-1]

for i in range(3):
    for j in range(3):
        print(LL[i][j],end=' ')
    print()

P259: INTERCHANGE THE DIAGONALS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Program to accept a matrix of order 3x3 & interchange the diagonals.

input -------> a 3x3 matrix 
output ------> modified matrix

Ex:
---
	1 2 3
	4 5 6
	7 8 9

	3 2 1
	4 5 6
	9 8 7

Logic:
------
		for(i=0;i<3;i++)
		{
			t=a[i][i];
			a[i][i]=a[i][3-i-1];
			a[i][3-i-1]=temp;
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,a[3][3],temp;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    for(i=0;i<3;i++)
    {
        t=a[i][i];
		a[i][i]=a[i][3-i-1];
		a[i][3-i-1]=temp;
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d ",a[i][j]);
        }
        printf("\n");
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j,temp;
        int a[][]=new int[3][3];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j]=obj.nextInt();
            }
        }
        for(i=0;i<3;i++)
        {
            t=a[i][i];
			a[i][i]=a[i][3-i-1];
			a[i][3-i-1]=temp;
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                System.out.print(a[i][j]+" ");
            }
            System.out.println();
        }
    }
}

python implementation:
----------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)

for i in range(3):
    LL[i][i],LL[i][3-i-1] = LL[i][3-i-1],LL[i][i]

for i in range(3):
    for j in range(3):
        print(LL[i][j],end=' ')
    print()

P260: UPPER TRIANGULAR MATRIX
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Program to accept a matrix and check whether it is upper triangular matrix or not

input -------> a 3x3 matrix 
output ------> Yes or No

Ex:
---
	1 2 3
	0 5 6
	0 0 7   Yes

	1 2 3
	0 5 6
	1 0 0   No

	(i,j)

	(0,0) (0,1) (0,2)
	(1,0) (1,1) (1,2)
	(2,0) (2,1) (2,2)

	i>j and a[i][j]==0

Logic:
------
		flag=1;
		for(i=0;i<3;i++)
		{
			for(j=0;j<3;j++)
			{
				if(i>j and a[i][j]!=0)
				{
					flag=0;
					break;
				}
			}
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,flag=1,a[3][3];
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if(i>j && a[i][j]!=0)
            {
                flag=0;
                break;
            }
        }
    }
    printf((flag==1)?"Yes":"No");
    return 0;
}


java implementation:
-------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a[][]=new int[3][3],i,j;
        int flag=1;
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j]=obj.nextInt();
            }
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                if(i>j && a[i][j]!=0)
                {
                    flag=0;
                    break;
                }
            }
        }
        System.out.println((flag==1)?"Yes":"No");
    }
}

python implementation:
---------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
flag=True
for i in range(3):
    for j in range(3):
        if i>j and LL[i][j]!=0:
            flag=False
            break
            
print("Yes" if flag==True else "No")


P261: LOWER TRIANGULAR MATRIX
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Program to accept a matrix and check whether it is lower triangular matrix or not

input -------> a 3x3 matrix 
output ------> Yes or No

Ex:
---
	1 0 0
	4 5 0
	6 7 8   Yes

	1 2 0
	5 5 0
	1 7 8   No

	(i,j)

	(0,0) (0,1) (0,2)
	(1,0) (1,1) (1,2)
	(2,0) (2,1) (2,2)

	i<j and a[i][j]==0

Logic:
------
		flag=1;
		for(i=0;i<3;i++)
		{
			for(j=0;j<3;j++)
			{
				if(i<j and a[i][j]!=0)
				{
					flag=0;
					break;
				}
			}
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,flag=1,a[3][3];
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if(i<j && a[i][j]!=0)
            {
                flag=0;
                break;
            }
        }
    }
    printf((flag==1)?"Yes":"No");
    return 0;
}


java implementation:
-------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a[][]=new int[3][3],i,j;
        int flag=1;
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j]=obj.nextInt();
            }
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                if(i<j && a[i][j]!=0)
                {
                    flag=0;
                    break;
                }
            }
        }
        System.out.println((flag==1)?"Yes":"No");
    }
}

python implementation:
---------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
flag=True
for i in range(3):
    for j in range(3):
        if i<j and LL[i][j]!=0:
            flag=False
            break
            
print("Yes" if flag==True else "No")


P262: SCALAR MATRIX MULTIPLICATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read a matrix and multiplier and return scalar matrix multiplication.

input -------> a 3x3 matrix and multiplier
output ------> resultent matrix

Ex:
---
	1 2 3
	4 5 6
	7 8 9
	2

	2 4 6
	8 10 12
	14 16 18

Logic:
------
		for(i=0;i<3;i++)
		{
			for(j=0;j<3;j++)
			{
				print m*a[i][j]
			}
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,a[3][3],m;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    scanf("%d",&m);
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            a[i][j]=m*a[i][j];
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d ",a[i][j]);
        }
        printf("\n");
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j,m,a[][]=new int[3][3];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j]=obj.nextInt();
            }
        }
        m=obj.nextInt();
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j]=m*a[i][j];
            }
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                System.out.print(a[i][j]+" ");
            }
            System.out.println();
        }
    }
}

python implementation:
----------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
m=int(input())
for i in range(3):
    for j in range(3):
        LL[i][j]=m*LL[i][j]
for i in range(3):
    for j in range(3):
        print(LL[i][j],end=' ')
    print()

P263: SYMMETRIC MATRIX
~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read a matrix and check whether the given matrix is symmertric matrix or not

input -------> a 3x3 matrix 
output ------> Yes or No

Ex:
---
	1 0 0 
	0 1 0
	0 0 1

	Yes

Logic:
------
		c=1;
		for(i=0;i<3;i++)
		{
			for(j=0;j<3;j++)
			{
				if(a[i][j]==a[j][i])
					c++;
			}
		}
		print "Yes" if c==9 else "No"

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,c=0,a[3][3];
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if(a[i][j]==a[j][i])
            {
                c++;
            }
        }
    }
    printf((c==9)?"Yes":"No");
    return 0;
}


java implementation:
-------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a[][]=new int[3][3],i,j;
        int c=0;
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j]=obj.nextInt();
            }
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                if(a[i][j]==a[j][i])
                {
                    c++;
                }
            }
        }
        System.out.println((c==9)?"Yes":"No");
    }
}

python implementation:
---------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
c=0
for i in range(3):
    for j in range(3):
        if LL[i][j]==LL[j][i]:
            c=c+1
            
print("Yes" if c==9 else "No")


P264: PRINT DIAGONAL ELEMENTS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read a matrix and display only diagonal elements.

input -------> a 3x3 matrix 
output ------> print only diagonal elements

Ex:
---
	1 2 3
	4 5 6
	7 8 9

	1   
	  5  
	    9

Logic:
------
		for(i=0;i<3;i++)
		{
			for(j=0;j<3;j++)
			{
				if(i==j)
					print a[i][j]
				else
					print " "
			}
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,a[3][3];
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if(i==j)
                printf("%d ",a[i][j]);
            else
                printf("  ");
        }
        printf("\n");
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j,a[][]=new int[3][3];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j] = obj.nextInt();
            }
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                if(i==j)
                    System.out.print(a[i][j]+" ");
                else
                    System.out.print("  ");
            }
            System.out.println();
        }
    }
}

python implementation:
---------------------

LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
for i in range(3):
    for j in range(3):
        if i==j:
            print(LL[i][j],end=' ')
        else:
            print(end='  ')
    print()


P265: SQUARE OF EACH ELEMENT OF MATRIX
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find square of each element present in a matrix.

input -------> a 3x3 matrix 
output ------> resultent matrix

Ex:
---
	1 2 3
	4 5 6
	1 2 3

	1 4 9
	16 25 36
	1 4 9

Logic:
------
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			print a[i][j]*a[i][j]
		}
	}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int a[3][3],i,j;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d ",a[i][j]*a[i][j]);
        }
        printf("\n");
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int a[][]=new int[3][3];
        int i,j;
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j]=obj.nextInt();
            }
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                System.out.print(a[i][j]*a[i][j]+" ");
            }
            System.out.println();
        }
    }
}

python implementation:
----------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
for i in range(3):
    for j in range(3):
        print(LL[i][j]**2,end=' ')
    print()

P266: SUM OF EVEN INDEXED ROWS IN MATRIX
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of even indexed rows in the given matrix.

input ------> a 3x3 matrix
output -----> sum as an int

Ex:
---
	1 2 3
	4 5 6 
	7 8 9

	output:
	
	1+2+3+7+8+9=30

Logic:
------
	sum=0;
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			if(i%2==0)
				sum=sum+a[i][j]
		}
	}
	print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,a[3][3],sum;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    sum=0;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if(i%2==0)
                sum=sum+a[i][j];
        }
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j,a[][]=new int[3][3];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j] = obj.nextInt();
            }
        }
        int sum=0;
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                if(i%2==0)
                    sum=sum+a[i][j];
            }
        }
        System.out.println(sum);
    }
}

python implementation:
---------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
sum=0
for i in range(3):
    for j in range(3):
        if i%2==0:
            sum=sum+LL[i][j]
print(sum)

P267: SUM OF ODD INDEXED ROWS IN MATRIX
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of odd indexed rows in the given matrix.

input ------> a 3x3 matrix
output -----> sum as an int

Ex:
---
	1 2 3
	4 5 6 
	7 8 9

	output:
	
	2+5+8=15

Logic:
------
	sum=0;
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			if(i%2!=0)
				sum=sum+a[i][j]
		}
	}
	print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,a[3][3],sum;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    sum=0;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if(i%2!=0)
                sum=sum+a[i][j];
        }
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j,a[][]=new int[3][3];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j] = obj.nextInt();
            }
        }
        int sum=0;
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                if(i%2!=0)
                    sum=sum+a[i][j];
            }
        }
        System.out.println(sum);
    }
}

python implementation:
---------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
sum=0
for i in range(3):
    for j in range(3):
        if i%2!=0:
            sum=sum+LL[i][j]
print(sum)

P268: SUM OF EVEN INDEXED COLS IN MATRIX
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of even indexed cols in the given matrix.

input ------> a 3x3 matrix
output -----> sum as an int

Ex:
---
	1 2 3
	4 5 6 
	7 8 9

	output:
	
	1+4+7+3+6+9=30

Logic:
------
	sum=0;
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			if(j%2==0)
				sum=sum+a[i][j]
		}
	}
	print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,a[3][3],sum;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    sum=0;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if(j%2==0)
                sum=sum+a[i][j];
        }
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j,a[][]=new int[3][3];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j] = obj.nextInt();
            }
        }
        int sum=0;
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                if(j%2==0)
                    sum=sum+a[i][j];
            }
        }
        System.out.println(sum);
    }
}

python implementation:
---------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
sum=0
for i in range(3):
    for j in range(3):
        if j%2==0:
            sum=sum+LL[i][j]
print(sum)

P269: SUM OF ODD INDEXED COLS IN MATRIX
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of odd indexed cols in the given matrix.

input ------> a 3x3 matrix
output -----> sum as an int

Ex:
---
	1 2 3
	4 5 6 
	7 8 9

	output:
	
	2+5+8=15

Logic:
------
	sum=0;
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			if(j%2!=0)
				sum=sum+a[i][j]
		}
	}
	print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,a[3][3],sum;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    sum=0;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if(j%2!=0)
                sum=sum+a[i][j];
        }
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j,a[][]=new int[3][3];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j] = obj.nextInt();
            }
        }
        int sum=0;
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                if(j%2!=0)
                    sum=sum+a[i][j];
            }
        }
        System.out.println(sum);
    }
}

python implementation:
---------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
sum=0
for i in range(3):
    for j in range(3):
        if j%2!=0:
            sum=sum+LL[i][j]
print(sum)


P270: SUM OF ELEMENTS WHOSE SUM OF ROW INDEX AND COL INDEX IS EVEN
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of row index and col index is even in the given matrix.

input ------> a 3x3 matrix
output -----> sum as an int


Logic:
------
	sum=0;
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			if((i+j)%2==0)
				sum=sum+a[i][j]
		}
	}
	print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,a[3][3],sum;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    sum=0;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if((i+j)%2==0)
                sum=sum+a[i][j];
        }
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j,a[][]=new int[3][3];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j] = obj.nextInt();
            }
        }
        int sum=0;
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                if((i+j)%2==0)
                    sum=sum+a[i][j];
            }
        }
        System.out.println(sum);
    }
}

python implementation:
---------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
sum=0
for i in range(3):
    for j in range(3):
        if (i+j)%2==0:
            sum=sum+LL[i][j]
print(sum)

P271: SUM OF ELEMENTS WHOSE SUM OF ROW INDEX AND COL INDEX IS ODD
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of row index and col index is odd in the given matrix.

input ------> a 3x3 matrix
output -----> sum as an int

Logic:
------
	sum=0;
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			if((i+j)%2!=0)
				sum=sum+a[i][j]
		}
	}
	print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,a[3][3],sum;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    sum=0;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if((i+j)%2!=0)
                sum=sum+a[i][j];
        }
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j,a[][]=new int[3][3];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j] = obj.nextInt();
            }
        }
        int sum=0;
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                if((i+j)%2!=0)
                    sum=sum+a[i][j];
            }
        }
        System.out.println(sum);
    }
}

python implementation:
---------------------
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
sum=0
for i in range(3):
    for j in range(3):
        if (i+j)%2!=0:
            sum=sum+LL[i][j]
print(sum)

P272: SUM OF PRIME ELEMENTS
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to find sum of prime elements in the given matrix.

input ------> a 3x3 matrix
output -----> sum as an int

Logic:
------
	sum=0;
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			if(isprime(a[i][j]))
				sum=sum+a[i][j]
		}
	}
	print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int isprime(int n){
    int i,f=0;
    for(i=1;i<=n;i++)
    {
        if(n%i==0)
            f++;
    }
    return f==2;
}
int main() {
    int i,j,a[3][3],sum;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    sum=0;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if(isprime(a[i][j]))
                sum=sum+a[i][j];
        }
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static boolean isprime(int n){
        int i,f=0;
        for(i=1;i<=n;i++)
        {
            if(n%i==0)
                f++;
        }
        return f==2;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j,a[][]=new int[3][3];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j] = obj.nextInt();
            }
        }
        int sum=0;
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                if(isprime(a[i][j]))
                    sum=sum+a[i][j];
            }
        }
        System.out.println(sum);
    }
}

python implementation:
---------------------
def isprime(n):
    f=0
    for i in range(1,n+1):
        if n%i==0:
            f=f+1
    return f==2
LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
sum=0
for i in range(3):
    for j in range(3):
        if isprime(LL[i][j]):
            sum=sum+LL[i][j]
print(sum)

P273: COUNT OF PRIME DIGITS IN GIVEN MATRIX
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to count number of prime digits present in the matrix.

input ------> a 3x3 matrix
output -----> prime digits count

Logic:
------
	sum=0;
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			sum=sum+count(a[i][j]);
		}
	}
	print sum

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int count(int n){
    int d,c=0;
    while(n!=0)
    {
        d=n%10;
        if(d==2 || d==3 || d==5 || d==7)
            c++;
        n=n/10;
    }
    return c;
}
int main() {
    int i,j,a[3][3],sum;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    sum=0;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            sum=sum+count(a[i][j]);
        }
    }
    printf("%d",sum);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int count(int n){
        int d,c=0;
        while(n!=0)
        {
            d=n%10;
            if(d==2 ||d==3||d==5||d==7)
                c=c+1;
            n=n/10;
        }
        return c;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j,a[][]=new int[3][3];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j] = obj.nextInt();
            }
        }
        int sum=0;
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                sum=sum+count(a[i][j]);
            }
        }
        System.out.println(sum);
    }
}

python implementation:
---------------------
def count(n):
    c=0
    while n!=0:
        d=n%10
        if d==2 or d==3 or d==5 or d==7:
            c=c+1
        n=n//10
    return c

LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
sum=0
for i in range(3):
    for j in range(3):
        sum=sum+count(LL[i][j])
print(sum)

P274: REVERSE OF EACH ELEMENT IN MATRIX
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to reverse each element in the matrix.

input ------> a 3x3 matrix
output -----> result matrix

Logic:
------
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			print rev(a[i][j])
		}
	}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int rev(int n){
    int r=0,d;
    while(n!=0)
    {
        d=n%10;
        r=r*10+d;
        n=n/10;
    }
    return r;
}
int main() {
    int i,j,a[3][3];
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d ",rev(a[i][j]));
        }
        printf("\n");
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int rev(int n){
        int r=0,d;
        while(n!=0)
        {
            d=n%10;
            r=r*10+d;
            n=n/10;
        }
        return r;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j,a[][]=new int[3][3];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j] = obj.nextInt();
            }
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                System.out.print(rev(a[i][j])+" ");
            }
            System.out.println();
        }
    }
}

python implementation:
---------------------
def rev(n):
    return int(str(n)[::-1])

LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
for i in range(3):
    for j in range(3):
        print(rev(LL[i][j]),end=' ')
    print()

P275: KEEP PALI NUMBER AND REPLACE REMAINING WITH 0'S
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to keep all pali numbers as it is and replace remaining with 0.

input ------> a 3x3 matrix
output -----> result matrix

Logic:
------
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			if(a[i][j]==rev(a[i][j]))
				print a[i][j]
			else
				print 0
		}
	}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int rev(int n){
    int r=0,d;
    while(n!=0)
    {
        d=n%10;
        r=r*10+d;
        n=n/10;
    }
    return r;
}
int main() {
    int i,j,a[3][3];
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if(a[i][j]==rev(a[i][j]))
                printf("%d ",a[i][j]);
            else
                printf("0 ");
        }
        printf("\n");
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {
    static int rev(int n){
        int r=0,d;
        while(n!=0)
        {
            d=n%10;
            r=r*10+d;
            n=n/10;
        }
        return r;
    }
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int i,j,a[][]=new int[3][3];
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                a[i][j] = obj.nextInt();
            }
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                if(a[i][j]==rev(a[i][j]))
                    System.out.print(a[i][j]+" ");
                else
                    System.out.print("0 ");
            }
            System.out.println();
        }
    }
}

python implementation:
---------------------
def rev(n):
    return int(str(n)[::-1])

LL=[]
for i in range(3):
    L=[int(i) for i in input().split()]
    LL.append(L)
for i in range(3):
    for j in range(3):
        if LL[i][j]==rev(LL[i][j]):
            print(LL[i][j],end=' ')
        else:
            print("0",end=' ')
    print()

P276: READ AND WRITE STRING
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement program to read a string from the user and print on the screen.

input -----> a string
output ----> same string

Ex:
---
	prakash ---> prakash

Logic:
------
		read string and print

		scanf("%s",s); ---> stop reading string when space is encountered
		scanf("%[^\n]s",s);--> read including spaces

		printf("%s",s);

		obj.nextLine();
		System.out.println(s);

		s=input()
		print(s)

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char s[100];
    scanf("%[^\n]",s);
    printf("%s",s);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s = obj.nextLine();
        System.out.println(s);
    }
}

python implementation
---------------------
s=input()
print(s)

P277: PRINT ONLY VOWELS
~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read a string and print only vowels present in string.

input ---> string
output --> only vowels

Ex:
---
	welcome ----> e,o,e

Logic:
------
		for(i=0;i<strlen(s);i++)
		{
			if(char is a or e or i or o or u)
				print char
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char s[100];
    scanf("%[^\n]",s);
    for(int i=0;i<strlen(s);i++)
    {
        if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')
            printf("%c\n",s[i]);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s = obj.nextLine();
        for(int i=0;i<s.length();i++)
        {
            if(s.charAt(i)=='a'||s.charAt(i)=='e'||s.charAt(i)=='i'||s.charAt(i)=='o'||s.charAt(i)=='u')
                System.out.println(s.charAt(i));
        }
    }
}

python implementation
---------------------
s=input()
for i in s:
    if i in "aeiou":
        print(i)

P278: PRINT ONLY CONSONANTS
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to read a string and print only consonants present in string.

input ---> string
output --> only consonants

Ex:
---
	welcome ----> w,l,c,m

Logic:
------
		for(i=0;i<strlen(s);i++)
		{
			if(!(char is a or e or i or o or u))
				print char
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char s[100];
    scanf("%[^\n]",s);
    for(int i=0;i<strlen(s);i++)
    {
        if(!(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u'))
            printf("%c\n",s[i]);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s = obj.nextLine();
        for(int i=0;i<s.length();i++)
        {
            if(!(s.charAt(i)=='a'||s.charAt(i)=='e'||s.charAt(i)=='i'||s.charAt(i)=='o'||s.charAt(i)=='u'))
                System.out.println(s.charAt(i));
        }
    }
}

python implementation
---------------------
s=input()
for i in s:
    if i not in "aeiou":
        print(i)

P279: COUNT VOWELS
~~~~~~~~~~~~~~~~~~
Implement a program to read a string and print number of vowels present in string.

input ----> string
output ---> number of vowels

Ex:
---
	welcome ----> 3

Logic:
------
		c=0
		for(i=0;i<strlen(s);i++)
		{
			if(char is a or e or i or o or u)
				c++
		}
		print c

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char s[100];
    int c=0;
    scanf("%[^\n]",s);
    for(int i=0;i<strlen(s);i++)
    {
        if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')
            c++;
    }
    printf("%d",c);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s = obj.nextLine();
        int c=0;
        for(int i=0;i<s.length();i++)
        {
            if(s.charAt(i)=='a'||s.charAt(i)=='e'||s.charAt(i)=='i'||s.charAt(i)=='o'||s.charAt(i)=='u')
                c++;
        }
        System.out.println(c);
    }
}

python implementation
---------------------
s=input()
c=0
for i in s:
    if i in "aeiou":
        c=c+1
print(c)

P280: COUNT CONSONANTS
~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to count number of consonants present in string

input ---> string
output --> number of consonants

Ex:
---
	welcome ----> 4

Logic:
------
		c=0
		for(i=0;i<strlen(s);i++)
		{
			if(!(char is a or e or i or o or u))
				c++
		}
		print c

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char s[100];
    int c=0;
    scanf("%[^\n]",s);
    for(int i=0;i<strlen(s);i++)
    {
        if(!(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u'))
            c++;
    }
    printf("%d",c);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s = obj.nextLine();
        int c=0;
        for(int i=0;i<s.length();i++)
        {
            if(!(s.charAt(i)=='a'||s.charAt(i)=='e'||s.charAt(i)=='i'||s.charAt(i)=='o'||s.charAt(i)=='u'))
                c++;
        }
        System.out.println(c);
    }
}

python implementation
---------------------
s=input()
c=0
for i not in s:
    if i in "aeiou":
        c=c+1
print(c)

P281: COUNT SPECIAL CHARACTERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to count number of special characters in string

input ---> string
output --> special characters

Ex:
---
	wel@com#e ----> 2

Logic:
------
		c=0
		for(i=0;i<strlen(s);i++)
		{
			if(!(char is a-z or A-Z or 0-9 or space))
				c++
		}
		print c

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char s[100];
    int c=0;
    scanf("%[^\n]",s);
    for(int i=0;i<strlen(s);i++)
    {
        if(!((s[i]>='a'&&s[i]<='z')||(s[i]>='A'&&s[i]<='Z')||(s[i]>='0'&&s[i]<='9')||(s[i]==' ')))
            c++;
    }
    printf("%d",c);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s = obj.nextLine();
        int c=0;
        for(int i=0;i<s.length();i++)
        {
            char ch = s.charAt(i);
            if(!((ch>='a'&&ch<='z')||(ch>='A'&&ch<='Z')||(ch>='0'&&ch<='9')||(ch==' ')))
                c++;
        }
        System.out.println(c);
    }
}

python implementation
---------------------
s=input()
c=0
for i in s:
    if not(i.isalnum() or i.isspace()):
        c=c+1
print(c)

P282: COUNT SPACES
~~~~~~~~~~~~~~~~~~
Implement a program to count number of spaces in string

input ----> string
output ---> count of spaces

Ex:
---
	abc xyz pqr mno ----> 3

Logic:
------
		c=0
		for(i=0;i<strlen(s);i++)
		{
			if(ch==' ')
				c++
		}
		print c

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char s[100];
    int c=0;
    scanf("%[^\n]",s);
    for(int i=0;i<strlen(s);i++)
    {
        if(s[i]==' ')
            c++;
    }
    printf("%d",c);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s = obj.nextLine();
        int c=0;
        for(int i=0;i<s.length();i++)
        {
            char ch = s.charAt(i);
            if(ch==' ')
                c++;
        }
        System.out.println(c);
    }
}

python implementation
---------------------
s=input()
c=0
for i in s:
    if i.isspace():
        c=c+1
print(c)

P283: CONVERT INTO LOWER CASE
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to convert the given string into lower case

input ---> string
output --> string in lower case

Ex:
---
	WeLcOmE ---> welcome

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char s[100];
    scanf("%[^\n]",s);
    for(int i=0;i<strlen(s);i++)
    {
        if(s[i]>='A' && s[i]<='Z')
            printf("%c",s[i]+32);
        else
            printf("%c",s[i]);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s = obj.nextLine();
        System.out.println(s.toLowerCase());
    }
}

python implementation
---------------------
s=input()
print(s.lower())

P284: CONVERT INTO UPPER CASE
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to convert the given string into upper case

input ---> string
output --> string in upper case

Ex:
---
	WeLcOmE ---> WELCOME

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char s[100];
    scanf("%[^\n]",s);
    for(int i=0;i<strlen(s);i++)
    {
        if(s[i]>='A' && s[i]<='Z')
            printf("%c",s[i]-32);
        else
            printf("%c",s[i]);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s = obj.nextLine();
        System.out.println(s.toUpperCase());
    }
}

python implementation
---------------------
s=input()
print(s.upper())

P285: SWAP CASE OR TOGGLE CASE
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to convert lower case into upper case and upper case into lower case (swap case)

input ----> string
output ---> toggle case

Ex:
---
	WeLcOmE ---> wElCoMe

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char s[100];
    scanf("%[^\n]",s);
    for(int i=0;i<strlen(s);i++)
    {
        if(s[i]>='A' && s[i]<='Z')
            printf("%c",s[i]+32);
        else if(s[i]>='a' && s[i]<='z')
            printf("%c",s[i]-32);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s = obj.nextLine();
        for(int i=0;i<s.length();i++)
        {
            if(s.charAt(i)>='A' && s.charAt(i)<='Z')
                System.out.print((char)(s.charAt(i)+32));
            else if(s.charAt(i)>='a' && s.charAt(i)<='z')
                System.out.print((char)(s.charAt(i)-32));
        }
    }
}

python implementation
---------------------
s=input()
print(s.swapcase())

P286: FIRST CAPITAL LETTER
~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement a program to return first capital letter in the given string

input ----> string
output ---> first capital letter

Ex:
---
	PrAkAsH ---> P

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char s[100];
    scanf("%[^\n]",s);
    for(int i=0;i<strlen(s);i++)
    {
        if(s[i]>='A' && s[i]<='Z')
        {
            printf("%c",s[i]);
            break;
        }
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s = obj.nextLine();
        for(int i=0;i<s.length();i++)
        {
            if(s.charAt(i)>='A' && s.charAt(i)<='Z')
            {
                System.out.println(s.charAt(i));
                break;
            }
        }
    }
}

python implementation
---------------------
s=input()
for i in s:
    if i.isupper():
        print(i)
        break

P287: NUMBER OF MISSES
~~~~~~~~~~~~~~~~~~~~~~
Implement a program to count number of misses in the given string

input ----> string
output ---> count of misses

Ex:
---
	wel@com#e ----> 2

Logic:
------
		c=0
		for(i=0;i<strlen(s);i++)
		{
			if(!(char is a-z or A-Z or 0-9 or space))
				c++
		}
		print c

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char s[100];
    int c=0;
    scanf("%[^\n]",s);
    for(int i=0;i<strlen(s);i++)
    {
        if(!((s[i]>='a'&&s[i]<='z')||(s[i]>='A'&&s[i]<='Z')||(s[i]>='0'&&s[i]<='9')||(s[i]==' ')))
            c++;
    }
    printf("%d",c);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s = obj.nextLine();
        int c=0;
        for(int i=0;i<s.length();i++)
        {
            char ch = s.charAt(i);
            if(!((ch>='a'&&ch<='z')||(ch>='A'&&ch<='Z')||(ch>='0'&&ch<='9')||(ch==' ')))
                c++;
        }
        System.out.println(c);
    }
}

python implementation
---------------------
s=input()
c=0
for i in s:
    if not(i.isalnum() or i.isspace()):
        c=c+1
print(c)

P288: MAGIC DATE
~~~~~~~~~~~~~~~~
Program to read date, month and year from the user and check whether it is magic date or not.
Here are the rules for magic date.

1) mm*dd is a 1-digit number that matches the last digit in YYYY
2) mm*dd is a 2-digit number that matches the last two digits in YYYY
3) mm*dd is a 3-digit number that matches the last three digits in YYYY

input --------> three int values
output -------> true or false

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int m,d,y,n;
    scanf("%d-%d-%d",&d,&m,&y);
    n=m*d;
    if(n==y%10 || n==y%100 || n==y%1000)
        printf("True");
    else
        printf("False");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String[] s = obj.nextLine().split("-");
        int d=Integer.parseInt(s[0]);
        int m=Integer.parseInt(s[1]);
        System.out.println(s[2].endsWith(Integer.toString(d*m))?"True":"False");
    }
}

python implementation:
----------------------
s=input().split("-")
d=int(s[0])
m=int(s[1])
print("True" if s[2].endswith(str(d*m)) else "False")

P289: VIDEO LENGTH
~~~~~~~~~~~~~~~~~~
Accept video length in minutes the format is mm:ss in String format, create a function that takes video length and return it in seconds.

input --------> video length in mm:ss
output -------> length in seconds

Ex:
---
	01:02 ---> 1x60+2 ---> 60+2=62

Logic:
------
	m:s ----> m*60+s

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int m,s;
    scanf("%d:%d",&m,&s);
    printf("%d",m*60+s);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String[] s = obj.nextLine().split(":");
        int m=Integer.parseInt(s[0]);
        int ss=Integer.parseInt(s[1]);
        System.out.println(m*60+ss);
    }
}

python implementation:
----------------------
s=input().split(":")
print(int(s[0])*60+int(s[1]))


P290: DEFANGING IP ADDRESS
~~~~~~~~~~~~~~~~~~~~~~~~~~
Given a valid IP address, return a defanged version of that IP address. A defanged IP address replaces every period '.' with "[.]".

input ----------> A string
output ---------> replacement String

Ex:
---
	1.2.3.4 ---> 1[.]2[.]3[.]4

Logic:
------
	for(i=0;s[i];i++)
	{
		if(s[i]=='.')
			print "[.]"
		else
			print s[i]
	}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char s[100];
    scanf("%s",s);
    for(int i=0;s[i];i++)
    {
        if(s[i]=='.')
            printf("[.]");
        else
            printf("%c",s[i]);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s = obj.nextLine();
        System.out.println(s.replace(".","[.]"));
    }
}

python implementation:
----------------------
s=input()
print(s.replace('.','[.]'))

P291: MAKE "ABBA"
~~~~~~~~~~~~~~~~~
Given two strings, a and b, return the result of putting them together in the order abba, 

e.g. "Hi" and "Bye" returns "HiByeByeHi".

input ------> two strings s1 and s2
output -----> return expected string

Logic:
------
	print s1s2s2s1

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char s1[100],s2[100];
    scanf("%s",s1);
    scanf("%s",s2);
    printf("%s%s%s%s",s1,s2,s2,s1);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s1 = obj.nextLine();
        String s2 = obj.nextLine();
        System.out.println(s1+s2+s2+s1);
    }
}

python implementation:
----------------------
s1=input()
s2=input()
print(s1+s2+s2+s1)

P292: EXTRA END
~~~~~~~~~~~~~~~
Given a string, return a new string made of 3 copies of the last 2 chars of the original string. The string length will be at least 2.

input ------> a string from the user
output -----> new string

Ex:
---
	java ----> vavava

Logic:
------
	n=length of string
	print s[n-2]s[n-1]s[n-2]s[n-1]s[n-2]s[n-1]

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char s[100];
    int n;
    scanf("%s",s);
    n=strlen(s);
    printf("%c%c%c%c%c%c",s[n-2],s[n-1],s[n-2],s[n-1],s[n-2],s[n-1]);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s = obj.nextLine();
        int n=s.length();
        System.out.println(s.substring(n-2,n)+s.substring(n-2,n)+s.substring(n-2,n));
    }
}

python implementation:
----------------------
s=input()
n=len(s)
print(s[n-2:n]*3)

P293: GET WORD COUNT
~~~~~~~~~~~~~~~~~~~~
Create a function/method that takes a string and return the word count. 
The string will be a sentence.

input ------> a string from the user
output -----> word count

Ex:
---
	welcome to java ----> 3

logic:
------
	w=1
	for(i=0;s[i];i++)
	{
		if(s[i]==' ')
			w++
	}
	print w

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int w=1,i;
    char s[100];
    scanf("%[^\n]s",s);
    for(i=0;s[i];i++)
    {
        if(s[i]==' ')
            w++;
    }
    printf("%d",w);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s[] = obj.nextLine().split(" ");
        System.out.println(s.length);
    }
}

python implementation:
----------------------
s=input().split(" ")
print(len(s))

P294: CHECK IF STRING ENDING MATCHES SECOND STRING
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create a function/method that takes two Strings and returns true of the first string ends with second string, otherwise return false.

input ------> a string from the user
output -----> true or false

Ex:
---
	computer, ter ----> true
	computer, ing ----> false

Logic:
------
	c=0;
	j=strlen(s2)-1;
	for(i=strlen(s1)-1;i>=0;i--)
	{
		if(s2[j--]==s1[i])
			c++;
	}
	if c==strlen(s2) then print true else false

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,c=0;
    char s1[100],s2[100];
    scanf("%s",s1);
    scanf("%s",s2);
    j=strlen(s2)-1;
    for(i=strlen(s1)-1;i>=0;i--)
    {
        if(s2[j--]==s1[i])
            c++;
    }
    printf((c==strlen(s2))?"true":"false");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s1 = obj.nextLine();
        String s2 = obj.nextLine();
        System.out.println(s1.endsWith(s2));
    }
}

python implementation:
----------------------
s1=input()
s2=input()
print('true' if s1.endswith(s2) else 'false')


P295: SHUFFLE NAMES
~~~~~~~~~~~~~~~~~~~~
Problem Statement: Create a function/method that accepts a string (of person’s first and last name) and returns a string with in first and last name swapped).

input ------> two space seperated strings
output -----> last name followed by first name

Ex:
---
	prakash
	babu

	babuprakash

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char s1[100],s2[100];
    scanf("%s",s1);
    scanf("%s",s2);
    printf("%s %s",s2,s1);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s1 = obj.nextLine();
        String s2 = obj.nextLine();
        System.out.println(s2+" "+s1);
    }
}

python implementation:
----------------------
s1=input()
s2=input()
print(s2,s1)

P296: REVERSE ORDER OF WORDS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
create a method/function that takes a string as its argument and returns the string in reversed order.

input ---------> a string 
output --------> reversed string

Ex:
---
	abc def xyz ---> zyx fed cba

Logic:
------
		for(i=strlen(s)-1;i>=0;i--)
		{
			print s[i]
		}

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char s[100];
    scanf("%[^\n]s",s);
    for(int i=strlen(s)-1;i>=0;i--)
    {
        printf("%c",s[i]);
    }
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s = obj.nextLine();
        StringBuffer sb = new StringBuffer(s);
        sb.reverse();
        System.out.println(sb);
    }
}

python implementation:
----------------------
s=input()
print(s[::-1])

P297: RE-FORM THE WORD
~~~~~~~~~~~~~~~~~~~~~~
A word has been split into a left part and right part. 
Re-form the word by adding both halves together changing the first to an uppercase letter.

input ---------> two strings from the user
output --------> concatenated string with caps in first character

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char s1[100],s2[100];
    scanf("%s",s1);
    scanf("%s",s2);
    if(s1[0]>='a' && s1[0]<='z')
        printf("%c",s1[0]-32);
    else
        printf("%c",s1[0]);
    for(int i=1;s1[i];i++)
    {
        printf("%c",s1[i]);
    }
    printf("%s",s2);
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s1 = obj.nextLine();
        String s2 = obj.nextLine();
        System.out.println(s1.substring(0,1).toUpperCase()+s1.substring(1)+s2);
    }
}

python implementation:
----------------------
s1=input()
s2=input()
print((s1+s2).title())

P298: CHECK BIRTH DAY
~~~~~~~~~~~~~~~~~~~~~
Lisa always forgets her birthday which is on th 5th July. 
So develop a function/method which will be helpful to remember her birthday.

The function/method checkBirthday return an integer 1, if it is her birthday else return 0. the function/method checkBirthday accepts two arguments.Month, a string representing the month of her birth and day, an integer representing the data of her birthday.

input -----------> month & day 
output ----------> 1 or 0

Ex:
---
	5 july ----> 1
	6 july ----> 0

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char s[100];
    int d;
    scanf("%s",s);
    scanf("%d",&d);
    if(strcmp(s,"july")==0&&d==5)
        printf("1");
    else
        printf("0");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s = obj.nextLine();
        int d=obj.nextInt();
        System.out.println((s.equals("july") && d==5)?1:0);
    }
}

python implementation:
----------------------
s=input()
d=int(input())
print("1" if s=="july" and d==5 else "0")

P299: PALIANDROME
~~~~~~~~~~~~~~~~~
Implement a program to check whether the given string is paliandrome or not, if yes return true else return false

input -------> string from the user
output ------> true or false

Ex:
---
	madam --> madam ----> true
	sir ----> ris ------> false

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char s[100],ss[100];
    int i,j,c=0;
    scanf("%[^\n]s",s);
    for(i=strlen(s)-1;i>=0;i--)
    {
        ss[j++]=s[i];
    }
    for(i=0;s[i];i++)
    {
        if(s[i]==ss[i])
            c++;
    }
    printf((c==strlen(s))?"true":"false");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s = obj.nextLine();
        StringBuffer sb = new StringBuffer(s);
        sb.reverse();
        System.out.println(sb.contentEquals(s));
    }
}

python implementation:
----------------------
s=input()
print('true' if s[::-1]==s else 'false')

P300: ANAGRAMS
~~~~~~~~~~~~~~
Two strings a and b are called anagrams, 
if they contain all the same characters in the same frequencies.

input --------> two strings a and b
output -------> true or false

Ex:
---
	anagram,margana
	aaagmnr,aaagmnr

c implementation:
-----------------
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char s1[100],s2[100],ch;
    int i,j;
    scanf("%s",s1);
    scanf("%s",s2);
    for(i=0;s1[i];i++)
    {
        for(j=i+1;s1[j];j++)
        {
            if(s1[i]>s1[j])
            {
                ch=s1[i];
                s1[i]=s1[j];
                s1[j]=ch;
            }
        }
    }
    for(i=0;s2[i];i++)
    {
        for(j=i+1;s2[j];j++)
        {
            if(s2[i]>s2[j])
            {
                ch=s2[i];
                s2[i]=s2[j];
                s2[j]=ch;
            }
        }
    }
    printf((strcmp(s1,s2)==0)?"true":"false");
    return 0;
}

java implementation:
--------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        String s1 = obj.nextLine();
        String s2 = obj.nextLine();
        char ch1[] = s1.toCharArray();
        char ch2[]=s2.toCharArray();
        Arrays.sort(ch1);
        Arrays.sort(ch2);
        System.out.println(Arrays.equals(ch1,ch2));
    }
}

python implementation:
----------------------
s1=input()
s2=input()
print('true' if sorted(s1)==sorted(s2) else 'false')


